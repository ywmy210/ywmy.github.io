<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>豆豆家</title>
  
  <subtitle>network &amp; delicacy</subtitle>
  <link href="/ywmy/atom.xml" rel="self"/>
  
  <link href="https://ywmy210.github.io/ywmy/"/>
  <updated>2019-07-28T14:56:45.453Z</updated>
  <id>https://ywmy210.github.io/ywmy/</id>
  
  <author>
    <name>Ian &amp; Doudou</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>终端录制与回放</title>
    <link href="https://ywmy210.github.io/ywmy/2019/07/28/%E7%BB%88%E7%AB%AF%E5%BD%95%E5%88%B6%E4%B8%8E%E5%9B%9E%E6%94%BE/"/>
    <id>https://ywmy210.github.io/ywmy/2019/07/28/终端录制与回放/</id>
    <published>2019-07-28T14:07:50.000Z</published>
    <updated>2019-07-28T14:56:45.453Z</updated>
    
    <content type="html"><![CDATA[<h2 id="linux-shell-终端的录制与回放"><a href="#linux-shell-终端的录制与回放" class="headerlink" title="linux shell 终端的录制与回放"></a>linux shell 终端的录制与回放</h2><p>最近有一个需求，在给一个H3C路由器排除问题的时候，启用debug模式，debug模式下，输出到屏幕的调试信息没有办法导出到文件，只能想办法试试看能不能从终端会话录制上实现。</p><h3 id="终端的会话操作录制"><a href="#终端的会话操作录制" class="headerlink" title="终端的会话操作录制"></a>终端的会话操作录制</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">script -t 2&gt; timing.log -a output.session</span><br><span class="line"><span class="built_in">type</span> commands;</span><br><span class="line"></span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure><p>exit退出录制。</p><p>两个配置文件被当做script命令的参数。这两个文件可以随便命名，这里用timing.log和output.session。其中timing.log用于存储时序信息，描述每一个指令在何时运行；output.session用于存储命令信息输出。-t选项用于将时序数据导入stderr。2&gt;用于stderr重定向到timing.log。</p><h3 id="录制回放"><a href="#录制回放" class="headerlink" title="录制回放"></a>录制回放</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scriptreplay timing.log output.session</span><br></pre></td></tr></table></figure><p>经验证，录制还是可以的。整个屏幕输出的内容存储在输出的output.session文件中，以文本打开，就可以直接查看之前录制回显的内容了。也可以方便后期回放温故。</p><h3 id="script广播会话"><a href="#script广播会话" class="headerlink" title="script广播会话"></a>script广播会话</h3><p>以两个终端为例：</p><h4 id="终端1操作"><a href="#终端1操作" class="headerlink" title="终端1操作"></a>终端1操作</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mkfifo scriptfifo</span><br></pre></td></tr></table></figure><h4 id="终端2操作"><a href="#终端2操作" class="headerlink" title="终端2操作"></a>终端2操作</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat  scriptfifo</span><br></pre></td></tr></table></figure><h4 id="终端1操作-1"><a href="#终端1操作-1" class="headerlink" title="终端1操作"></a>终端1操作</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">script -f scritpfifo</span><br><span class="line">commands</span><br><span class="line"></span><br><span class="line">......</span><br></pre></td></tr></table></figure><p>exit退出。</p><p>此时，终端2上同步回显终端1上的操作内容。</p><p>屏幕录制操作结束。</p><p>补充一个H3C 屏幕回显debug信息的操作步骤，全程用户模式下操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">debugging nat packet   //例如调试nat包信息</span><br><span class="line">terminal debugging   //打开调试信息的屏幕输出开关</span><br><span class="line">display debugging    //查看启用了哪些调试信息</span><br><span class="line">termainal monitor    //开启控制台对系统信息的监视功能</span><br></pre></td></tr></table></figure><p>汇总结束，通过录制终端会话，来排查设备的debugging信息。设备debugging是比较消耗资源的一件事情，输出的信息也非常多，输出了非专业人员排查问题也是比较困难的。一般这个也就用于提交设备厂商售后分析了。今日份结束。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;linux-shell-终端的录制与回放&quot;&gt;&lt;a href=&quot;#linux-shell-终端的录制与回放&quot; class=&quot;headerlink&quot; title=&quot;linux shell 终端的录制与回放&quot;&gt;&lt;/a&gt;linux shell 终端的录制与回放&lt;/h2&gt;&lt;
      
    
    </summary>
    
    
      <category term="linux" scheme="https://ywmy210.github.io/ywmy/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>cisco 设备配置文件的保存和恢复</title>
    <link href="https://ywmy210.github.io/ywmy/2019/07/27/cisco-%E8%AE%BE%E5%A4%87%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%9A%84%E4%BF%9D%E5%AD%98%E5%92%8C%E6%81%A2%E5%A4%8D/"/>
    <id>https://ywmy210.github.io/ywmy/2019/07/27/cisco-设备配置文件的保存和恢复/</id>
    <published>2019-07-27T04:00:03.000Z</published>
    <updated>2019-07-27T04:22:53.584Z</updated>
    
    <content type="html"><![CDATA[<h2 id="cisco-配置文件的保存和恢复"><a href="#cisco-配置文件的保存和恢复" class="headerlink" title="cisco 配置文件的保存和恢复"></a>cisco 配置文件的保存和恢复</h2><h3 id="保存配置文件"><a href="#保存配置文件" class="headerlink" title="保存配置文件"></a>保存配置文件</h3><p>思科保存配置文件目录结构大概如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">R1<span class="comment">#dir</span></span><br><span class="line">Directory of nvram:/</span><br><span class="line"></span><br><span class="line">  508  -rw-        2190                    &lt;no date&gt;  startup-config</span><br><span class="line">  509  ----          24                         &lt;no date&gt;  private-config</span><br><span class="line">  510  -rw-        2190                    &lt;no date&gt;  underlying-config</span><br><span class="line">    1  ----             34                         &lt;no date&gt;  persistent-data</span><br><span class="line">    2  -rw-           4                          &lt;no date&gt;  rf_cold_starts</span><br><span class="line">    3  -rw-           0                         &lt;no date&gt;  ifIndex-table</span><br></pre></td></tr></table></figure><p>启动配置文件为start-config</p><p>要保存当前配置文件的逻辑是先备份当前的启动文件startup-config </p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">R1<span class="comment">#copy startup-config nvram:20190826.backup</span></span><br><span class="line">Destination filename [20190826.backup]? </span><br><span class="line"></span><br><span class="line">2190 bytes copied <span class="keyword">in</span> 1.136 secs (1928 bytes/sec)</span><br></pre></td></tr></table></figure><p>保存的配置文件如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">R1<span class="comment">#dir</span></span><br><span class="line">Directory of nvram:/</span><br><span class="line"></span><br><span class="line">  508  -rw-        2190                    &lt;no date&gt;  startup-config</span><br><span class="line">  509  ----          24                         &lt;no date&gt;  private-config</span><br><span class="line">  510  -rw-        2190                    &lt;no date&gt;  underlying-config</span><br><span class="line">    1  ----             34                         &lt;no date&gt;  persistent-data</span><br><span class="line">    2  -rw-           4                           &lt;no date&gt;  rf_cold_starts</span><br><span class="line">    3  -rw-           0                           &lt;no date&gt;  ifIndex-table</span><br><span class="line">    4  -rw-           2190                    &lt;no date&gt;  20190826.backup</span><br><span class="line"></span><br><span class="line">522232 bytes total (513822 bytes free)</span><br></pre></td></tr></table></figure><p>将当前配置保存为启动配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">R1<span class="comment">#copy running-config nvram:startup-config</span></span><br><span class="line">Destination filename [startup-config]?</span><br><span class="line">Building configuration...</span><br><span class="line">[OK]</span><br></pre></td></tr></table></figure><h3 id="恢复配置文件"><a href="#恢复配置文件" class="headerlink" title="恢复配置文件"></a>恢复配置文件</h3><p>例如恢复到20190826的配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">R1<span class="comment">#copy nvram:/20190826.backup startup-config</span></span><br><span class="line">Destination filename [startup-config]? y</span><br><span class="line"></span><br><span class="line">2190 bytes copied <span class="keyword">in</span> 1.108 secs (1977 bytes/sec)</span><br></pre></td></tr></table></figure><p>重启交换机，不需要保存运行中的配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">R1<span class="comment">#reload </span></span><br><span class="line">Proceed with reload? [confirm]y</span><br><span class="line">*Jul 27 02:14:18.199: %SYS-5-RELOAD: Reload requested by console. Reload Reason: Reload Command.</span><br><span class="line"></span><br><span class="line">                ROM: reload requested...</span><br></pre></td></tr></table></figure><h3 id="H3C-化为的操作思路"><a href="#H3C-化为的操作思路" class="headerlink" title="H3C 化为的操作思路"></a>H3C 化为的操作思路</h3><p>保存文件，选用配置</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;F1070&gt;save 20190828.cfg</span><br><span class="line">The current configuration will be saved to flash:/20190828.cfg. Continue? [Y/N]:y</span><br><span class="line">Now saving current configuration to the device.</span><br><span class="line">Saving configuration flash:/20190828.cfg.Please <span class="built_in">wait</span>...</span><br><span class="line">Configuration is saved to device successfully.</span><br></pre></td></tr></table></figure><p>配置启动项：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;F1070&gt;startup saved-configuration 20190828.cfg </span><br><span class="line">Please <span class="built_in">wait</span>...... Done.</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;cisco-配置文件的保存和恢复&quot;&gt;&lt;a href=&quot;#cisco-配置文件的保存和恢复&quot; class=&quot;headerlink&quot; title=&quot;cisco 配置文件的保存和恢复&quot;&gt;&lt;/a&gt;cisco 配置文件的保存和恢复&lt;/h2&gt;&lt;h3 id=&quot;保存配置文件&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="network" scheme="https://ywmy210.github.io/ywmy/tags/network/"/>
    
  </entry>
  
  <entry>
    <title>centos 6 ssr</title>
    <link href="https://ywmy210.github.io/ywmy/2019/06/28/centos-6-ssr/"/>
    <id>https://ywmy210.github.io/ywmy/2019/06/28/centos-6-ssr/</id>
    <published>2019-06-28T15:09:05.000Z</published>
    <updated>2019-06-28T15:24:26.779Z</updated>
    
    <content type="html"><![CDATA[<h2 id="centos-6-ssr"><a href="#centos-6-ssr" class="headerlink" title="centos 6 ssr"></a>centos 6 ssr</h2><h3 id="更换内核"><a href="#更换内核" class="headerlink" title="更换内核"></a>更换内核</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">yum update 更新系统</span><br><span class="line">rpm -ivh http://www.aloneray.com/wp-content/uploads/2017/03/kernel-firmware-2.6.32-504.3.3.el6.noarch.rpm</span><br><span class="line"><span class="comment"># 更新内核</span></span><br><span class="line">rpm -ivh http://www.aloneray.com/wp-content/uploads/2017/03/kernel-2.6.32-504.3.3.el6.x86_64.rpm --force</span><br><span class="line"><span class="comment"># 重启</span></span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><h3 id="安装SSR服务端"><a href="#安装SSR服务端" class="headerlink" title="安装SSR服务端"></a>安装SSR服务端</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget --no-check-certificate http://www.aloneray.com/wp-content/uploads/2019/01/shadowsocksR_CN.sh &amp;&amp; chmod +x shadowsocksR_CN.sh &amp;&amp; ./shadowsocksR_CN.sh</span><br></pre></td></tr></table></figure><p>按提示和步骤操作。</p><h3 id="锐速安装"><a href="#锐速安装" class="headerlink" title="锐速安装"></a>锐速安装</h3><p>锐速是一款非常不错的TCP底层加速软件。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -N --no-check-certificate https://raw.githubusercontent.com/91yun/serverspeeder/master/serverspeeder-all.sh &amp;&amp; bash serverspeeder-all.sh</span><br></pre></td></tr></table></figure><h3 id="关闭防火墙"><a href="#关闭防火墙" class="headerlink" title="关闭防火墙"></a>关闭防火墙</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">service iptables stop </span><br><span class="line">chkconfig iptables off</span><br></pre></td></tr></table></figure><h3 id="锐速常用命令"><a href="#锐速常用命令" class="headerlink" title="锐速常用命令"></a>锐速常用命令</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">重启锐速：/serverspeeder/bin/serverSpeeder.sh restart</span><br><span class="line">启动锐速：/serverspeeder/bin/serverSpeeder.sh start</span><br><span class="line">停止锐速：/serverspeeder/bin/serverSpeeder.sh stop</span><br><span class="line">锐速状态：/serverspeeder/bin/serverSpeeder.sh status</span><br></pre></td></tr></table></figure><h3 id="多端口配置"><a href="#多端口配置" class="headerlink" title="多端口配置"></a>多端口配置</h3><p>服务端更改配置文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="string">"server"</span>: <span class="string">"0.0.0.0"</span>,</span><br><span class="line"><span class="string">"server_ipv6"</span>: <span class="string">"[::]"</span>,</span><br><span class="line"><span class="string">"local_address"</span>: <span class="string">"127.0.0.1"</span>,</span><br><span class="line"><span class="string">"local_port"</span>: 1080,</span><br><span class="line"><span class="string">"port_password"</span>:</span><br><span class="line"><span class="comment"># 多端口配置开始</span></span><br><span class="line">&#123;<span class="string">"8090"</span>:<span class="string">"password"</span>,</span><br><span class="line"><span class="string">"8089"</span>:<span class="string">"password"</span>,</span><br><span class="line"><span class="string">"459"</span>:<span class="string">"password"</span>,</span><br><span class="line"><span class="string">"456"</span>:<span class="string">"password"</span></span><br><span class="line">&#125;,</span><br><span class="line"><span class="comment"># 多端口配置结束</span></span><br><span class="line"><span class="string">"timeout"</span>: 120,</span><br><span class="line"><span class="string">"udp_timeout"</span>: 60,</span><br><span class="line"><span class="string">"method"</span>: <span class="string">"aes-256-cfb"</span>,</span><br><span class="line"><span class="string">"protocol"</span>: <span class="string">"auth_aes128_md5"</span>,</span><br><span class="line"><span class="string">"protocol_param"</span>: <span class="string">""</span>,</span><br><span class="line"><span class="string">"obfs"</span>: <span class="string">"http_simple"</span>,</span><br><span class="line"><span class="string">"obfs_param"</span>: <span class="string">""</span>,</span><br><span class="line"><span class="string">"dns_ipv6"</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="string">"connect_verbose_info"</span>: 1,</span><br><span class="line"><span class="string">"redirect"</span>: <span class="string">""</span>,</span><br><span class="line"><span class="string">"fast_open"</span>: <span class="literal">false</span>,</span><br><span class="line"><span class="string">"workers"</span>: 1</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重启服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/etc/init.d/shadowsocks restart</span><br></pre></td></tr></table></figure><p>多端口配置结束</p><p>常用操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">启动：/etc/init.d/shadowsocks start</span><br><span class="line">停止：/etc/init.d/shadowsocks stop</span><br><span class="line">重启：/etc/init.d/shadowsocks restart</span><br><span class="line">状态：/etc/init.d/shadowsocks status</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;centos-6-ssr&quot;&gt;&lt;a href=&quot;#centos-6-ssr&quot; class=&quot;headerlink&quot; title=&quot;centos 6 ssr&quot;&gt;&lt;/a&gt;centos 6 ssr&lt;/h2&gt;&lt;h3 id=&quot;更换内核&quot;&gt;&lt;a href=&quot;#更换内核&quot; cla
      
    
    </summary>
    
    
      <category term="linux" scheme="https://ywmy210.github.io/ywmy/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>python pip</title>
    <link href="https://ywmy210.github.io/ywmy/2019/06/17/python-pip/"/>
    <id>https://ywmy210.github.io/ywmy/2019/06/17/python-pip/</id>
    <published>2019-06-17T02:27:48.000Z</published>
    <updated>2019-06-17T02:44:40.365Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ubuntu-pip相关小问题"><a href="#ubuntu-pip相关小问题" class="headerlink" title="ubuntu pip相关小问题"></a>ubuntu pip相关小问题</h2><h3 id="ImportError-No-module-named-‘setuptools’"><a href="#ImportError-No-module-named-‘setuptools’" class="headerlink" title="ImportError: No module named ‘setuptools’"></a>ImportError: No module named ‘setuptools’</h3><p>解决办法：安装setuptools</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Python 2.x:    sudo apt-get install python-setuptools</span><br><span class="line">Python 3.x:    sudo apt-get install python3-setuptools</span><br></pre></td></tr></table></figure><p>如果安装出现错误：AttributeError: module ‘setuptools.dist’ has no attribute ‘check_specifier’</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Python 2.x:</span><br><span class="line">pip install --upgrade pip</span><br><span class="line"><span class="built_in">hash</span> -r pip</span><br><span class="line"></span><br><span class="line">Python 3.x:</span><br><span class="line">pip3 install --upgrade pip</span><br><span class="line"><span class="built_in">hash</span> -r pip3</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> (Mask RCNN root folder)</span><br><span class="line">sudo python3 setup.py install</span><br></pre></td></tr></table></figure><h3 id="pip升级"><a href="#pip升级" class="headerlink" title="pip升级"></a>pip升级</h3><p>pip升级后出现错误：Import Error:cannot import name main</p><p>解决办法：</p><ul><li>方法1</li></ul><p>更改from pip import main</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 更改下面行内容</span></span><br><span class="line">from pip import main</span><br><span class="line"><span class="comment"># 更改为</span></span><br><span class="line">from pip._internal import main</span><br></pre></td></tr></table></figure><ul><li>方法2</li></ul><p>更改sys.exit</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 原内容：</span></span><br><span class="line">from pip import main</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    sys.exit(main())</span><br><span class="line"><span class="comment"># 更改后内容</span></span><br><span class="line">from pip import __main__</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    sys.exit(__main__._main())</span><br></pre></td></tr></table></figure><p>注意<strong>main</strong>左右的下划线是两个下划线。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;ubuntu-pip相关小问题&quot;&gt;&lt;a href=&quot;#ubuntu-pip相关小问题&quot; class=&quot;headerlink&quot; title=&quot;ubuntu pip相关小问题&quot;&gt;&lt;/a&gt;ubuntu pip相关小问题&lt;/h2&gt;&lt;h3 id=&quot;ImportError-N
      
    
    </summary>
    
    
      <category term="linux" scheme="https://ywmy210.github.io/ywmy/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>小新700 触摸板双击右键</title>
    <link href="https://ywmy210.github.io/ywmy/2019/05/30/%E5%B0%8F%E6%96%B0700-%E8%A7%A6%E6%91%B8%E6%9D%BF%E5%8F%8C%E5%87%BB%E5%8F%B3%E9%94%AE/"/>
    <id>https://ywmy210.github.io/ywmy/2019/05/30/小新700-触摸板双击右键/</id>
    <published>2019-05-30T14:23:17.000Z</published>
    <updated>2019-05-30T14:37:32.704Z</updated>
    
    <content type="html"><![CDATA[<h2 id="联想小新700触摸板双击右键设置"><a href="#联想小新700触摸板双击右键设置" class="headerlink" title="联想小新700触摸板双击右键设置"></a>联想小新700触摸板双击右键设置</h2><p>之前买的联想小新电脑，在设置触摸板时，双击右键的设置是不生效的。在windows下的触摸板设置，如单指、双指、三指、四指操作，使用习惯后，操作起来也是非常高效和舒服的。不过小新的这个synaptics装置，在安装最新驱动后，双击右键依然是不起作用的。在使用过程中就比较尴尬。</p><h3 id="操作方法"><a href="#操作方法" class="headerlink" title="操作方法"></a>操作方法</h3><p>打开注册表编辑器，修改注册表值，路径如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">WIN＋R 运行 regedit，展开路径：</span><br><span class="line">计算机\HKEY_CURRENT_USER\Software\Synaptics\SynTP\</span><br></pre></td></tr></table></figure><p>展开路径，找到TouchPadPS2TM开头的项，如自己的小新为TouchPadPS2TM3105，点击该项，右边的键值，找到2FingerTapAction，双击将默认数据0修改为2。确定修改，重启系统，双击右键设置生效。操作结束。记录备用。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;联想小新700触摸板双击右键设置&quot;&gt;&lt;a href=&quot;#联想小新700触摸板双击右键设置&quot; class=&quot;headerlink&quot; title=&quot;联想小新700触摸板双击右键设置&quot;&gt;&lt;/a&gt;联想小新700触摸板双击右键设置&lt;/h2&gt;&lt;p&gt;之前买的联想小新电脑，在设置
      
    
    </summary>
    
    
      <category term="windows" scheme="https://ywmy210.github.io/ywmy/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>GNS3添加网络设备</title>
    <link href="https://ywmy210.github.io/ywmy/2019/05/14/GNS3%E6%B7%BB%E5%8A%A0%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/"/>
    <id>https://ywmy210.github.io/ywmy/2019/05/14/GNS3添加网络设备/</id>
    <published>2019-05-14T13:09:46.000Z</published>
    <updated>2019-05-15T08:22:21.516Z</updated>
    
    <content type="html"><![CDATA[<h2 id="GNS3添加网络设备"><a href="#GNS3添加网络设备" class="headerlink" title="GNS3添加网络设备"></a>GNS3添加网络设备</h2><h3 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h3><ul><li><p>系统：ubuntu 18.04.2 LTS(Linux 4.15.0-48-generic #51-Ubuntu SMP Wed Apr 3 08:28:49 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux<br>)</p></li><li><p>GNS3 2.1.16</p></li><li><p>虚拟机virtualbox 6.0.4 r128413</p></li></ul><h3 id="GNS3安装"><a href="#GNS3安装" class="headerlink" title="GNS3安装"></a>GNS3安装</h3><p>ubuntu 直接添加PPA源安装：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:gns3/ppa</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install gns3-gui</span><br></pre></td></tr></table></figure><p>安装结束后，会出现关于dynamips报错。解决办法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo add-apt-repository ppa:gns3/ppa</span><br><span class="line">sudo dpkg --add-architecture i386</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install dynamips:i386</span><br></pre></td></tr></table></figure><p>启动后，出现配置向导。</p><h3 id="添加设备"><a href="#添加设备" class="headerlink" title="添加设备"></a>添加设备</h3><p>添加模拟的设备可以通过本地的server，GNS3 VM来完成。</p><p>本地的server中的Dynamips中添加设备。</p><p>[edit]-&gt;[Preferences]-&gt;[Dynamips]-&gt;[IOS routers]</p><p>添加的设备即直接通过本地电脑的Dynapips来模拟。</p><h3 id="添加IOU"><a href="#添加IOU" class="headerlink" title="添加IOU"></a>添加IOU</h3><p>添加GNS3 VM设备，需要先导入GNS3 VM虚拟机。从官网下载GNS3 VM，如本文所示，选择virtualbox版本。</p><p>下载后，选择导入虚拟机，打开virtualbox，操作如下：</p><p>[管理]-&gt;[导入虚拟电脑]-&gt;[选择下载的GNS VM文件]-&gt;[点击导入]</p><p>导入后，在GNS3中选择GNS3 VM。操作如下：</p><p>[edit]-&gt;[Preferences]-&gt;[GNS3 VM]-&gt;[enable GNS3 VM]-&gt;[select Virtualizatiom engine Virtualbox]-&gt;[Settings]-&gt;[select imported VM named GNS3 VM]-&gt;[Apply setting]-&gt;[OK]</p><p>选择启动GNS3 VM，选择虚拟化引擎，选择导入的GNS3 VM。</p><p>尝试启动GNS3 VM，启动后直接报错，vboxnet0相关，无法启动GNS3 VM。</p><p>解决办法，添加网络vboxnet0。操作步骤：</p><p>[管理]-&gt;[主机网络管理器]-&gt;[网络]-&gt;[创建]</p><p>默认创建的网络就是vboxnet0。其余选项保持默认不变，启用DHCP服务。</p><p>再次打开GNS3 VM，正常启动。</p><p>解决GNS3 VM启动问题后，即可添加IOU（IOS ON UNIX）。</p><p>操作步骤：</p><p>[edit]-&gt;[Preferences]-&gt;[IOS on UNIX]-&gt;[type the license key]</p><p>添加IOU需要cisco的许可密钥，本例中的许可密码如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[license]</span><br><span class="line">gns3vm = 73635fd3b0a13ad0;</span><br></pre></td></tr></table></figure><p>许可密码可以通过以下方式生成：</p><ol><li><p>打开GNS3 VM，选择Shell菜单</p></li><li><p>下载生成脚本,并生成license:</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget http://www.ipvanquish.com/download/CiscoIOUKeygen3f.py</span><br><span class="line">python3 CiscoIOUKeygen3f.py</span><br></pre></td></tr></table></figure><p>生成的文件为.iourc。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Already copy to the file iourc.txt</span><br><span class="line"></span><br><span class="line">You can <span class="built_in">disable</span> the phone home feature with something like:</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">'127.0.0.127 xml.cisco.com'</span> &gt;&gt; /etc/hosts</span><br></pre></td></tr></table></figure><p>把生成的GNS VM license添加到IOU on UNIX中，后，即可添加IOU设备。</p><p>操作方法：</p><p>[edit]-&gt;[Preferenses]-&gt;[IOS on UNIX]-&gt;[IOU devices]-&gt;[new]</p><p>添加IOU镜像，添加后，即可直接通过VM来运行l2 switch l3 router设备。</p><p>IOU和.iourc文件在哪里找，可以度之。</p><p>license gen直接给脚本吧：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/python3</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"*********************************************************************"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"Cisco IOU License Generator - Kal 2011, python port of 2006 C version"</span>)</span><br><span class="line">import os</span><br><span class="line">import socket</span><br><span class="line">import hashlib</span><br><span class="line">import struct</span><br><span class="line"><span class="comment"># get the host id and host name to calculate the hostkey</span></span><br><span class="line">hostid=os.popen(<span class="string">"hostid"</span>).<span class="built_in">read</span>().strip()</span><br><span class="line">hostname = socket.gethostname()</span><br><span class="line">ioukey=int(hostid,16)</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> hostname:</span><br><span class="line"> ioukey = ioukey + ord(x)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"hostid="</span> + hostid +<span class="string">", hostname="</span>+ hostname + <span class="string">", ioukey="</span> + hex(ioukey)[2:])</span><br><span class="line"><span class="comment"># create the license using md5sum</span></span><br><span class="line">iouPad1 = b<span class="string">'\x4B\x58\x21\x81\x56\x7B\x0D\xF3\x21\x43\x9B\x7E\xAC\x1D\xE6\x8A'</span></span><br><span class="line">iouPad2 = b<span class="string">'\x80'</span> + 39*b<span class="string">'\0'</span></span><br><span class="line">md5input=iouPad1 + iouPad2 + struct.pack(<span class="string">'!i'</span>, ioukey) + iouPad1</span><br><span class="line">iouLicense=hashlib.md5(md5input).hexdigest()[:16]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"\nAdd the following text to ~/.iourc:"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"[license]\n"</span> + hostname + <span class="string">" = "</span> + iouLicense + <span class="string">";\n"</span>)</span><br><span class="line">with open(<span class="string">"iourc.txt"</span>, <span class="string">"wt"</span>) as out_file:</span><br><span class="line">   out_file.write(<span class="string">"[license]\n"</span> + hostname + <span class="string">" = "</span> + iouLicense + <span class="string">";\n"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">"^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAlready copy to the file iourc.txt\n "</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">"You can disable the phone home feature with something like:"</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">" echo '127.0.0.127 xml.cisco.com' &gt;&gt; /etc/hosts\n"</span>)</span><br></pre></td></tr></table></figure><p>好了，操作记录补充结束。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;GNS3添加网络设备&quot;&gt;&lt;a href=&quot;#GNS3添加网络设备&quot; class=&quot;headerlink&quot; title=&quot;GNS3添加网络设备&quot;&gt;&lt;/a&gt;GNS3添加网络设备&lt;/h2&gt;&lt;h3 id=&quot;搭建环境&quot;&gt;&lt;a href=&quot;#搭建环境&quot; class=&quot;head
      
    
    </summary>
    
    
      <category term="network" scheme="https://ywmy210.github.io/ywmy/tags/network/"/>
    
  </entry>
  
  <entry>
    <title>windows 10 homebasic rdp</title>
    <link href="https://ywmy210.github.io/ywmy/2019/05/06/windows-10-homebasic-rdp/"/>
    <id>https://ywmy210.github.io/ywmy/2019/05/06/windows-10-homebasic-rdp/</id>
    <published>2019-05-06T14:44:07.000Z</published>
    <updated>2019-05-06T15:13:22.816Z</updated>
    
    <content type="html"><![CDATA[<h2 id="windows-10-家庭版开启远程"><a href="#windows-10-家庭版开启远程" class="headerlink" title="windows 10 家庭版开启远程"></a>windows 10 家庭版开启远程</h2><p>windows 家庭版的系统默认没有远程功能，大多数的预装正版的系统中无法使用windows自带的远程服务。</p><p>虽然通过绝大多数的第三方程序，都可以实现远程，但是自己之前有搭内网穿透，所以，也想把这个用上。于是又找到一个工具:rdpwrap。下载<a href="https://github.com/stascorp/rdpwrap/releases" target="_blank" rel="noopener">请戳</a>。</p><p>选择最新zip包下载。</p><h3 id="安装rdpwrap"><a href="#安装rdpwrap" class="headerlink" title="安装rdpwrap"></a>安装rdpwrap</h3><ol><li>解压下载的包装包</li><li>安装程序</li></ol><p>依次运行RDPWinst，install，RDPconf文件。</p><p>RDPconf文件为检测文件，运行后，会发现服务无法启用，会出现Listener state和支持的问题。</p><p>解决办法：使用命令重装安装，比如把文件夹复制到C盘目录下，CMD以管理员身份运行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> c:\RDPWrap</span><br><span class="line">c:\RDPWrap&gt;RDPWInst.exe -r</span><br></pre></td></tr></table></figure><p>安装后，再次打开RDPConf.exe</p><p>检测已经通过。安装结束。解决方法来自issues。</p><h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p>使用内网其它电脑上的RDP工具，远程测试。如果使用的是microsoft账号登录的，则直接使用microsoft认证的信息登录即可。不用使用PIN码登录。</p><p>配置结束。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;windows-10-家庭版开启远程&quot;&gt;&lt;a href=&quot;#windows-10-家庭版开启远程&quot; class=&quot;headerlink&quot; title=&quot;windows 10 家庭版开启远程&quot;&gt;&lt;/a&gt;windows 10 家庭版开启远程&lt;/h2&gt;&lt;p&gt;window
      
    
    </summary>
    
    
      <category term="windows" scheme="https://ywmy210.github.io/ywmy/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>lanproxy 配置</title>
    <link href="https://ywmy210.github.io/ywmy/2019/04/25/lanproxy-%E9%85%8D%E7%BD%AE/"/>
    <id>https://ywmy210.github.io/ywmy/2019/04/25/lanproxy-配置/</id>
    <published>2019-04-25T06:29:37.000Z</published>
    <updated>2019-04-25T08:11:29.968Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ubuntu-18-04搭建lanproxy服务"><a href="#ubuntu-18-04搭建lanproxy服务" class="headerlink" title="ubuntu 18.04搭建lanproxy服务"></a>ubuntu 18.04搭建lanproxy服务</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>lanproxy是一个内网穿透工具。支持TCP流量转发。用于替代第三方付费工具，比如anydesk、teamview、花生壳等。这些第三方工具在个人使用上存在各种各样的限制，有的时候还非常不便，所以为了顺手，就有了自己搭内网穿透的想法。在内网穿透有选择上，选择了lanproxy。工具主页<a href="https://github.com/ffay/lanproxy" target="_blank" rel="noopener">请戳</a>。</p><h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ol><li>一台公网服务器(运行lanproxy server)</li><li>一台内网PC或服务器(lanproxy client测试)</li></ol><h3 id="服务端配置"><a href="#服务端配置" class="headerlink" title="服务端配置"></a>服务端配置</h3><p>lanproxy 后端信赖JAVA。需要选安装jdk，再安装lanproxy。操作如下：</p><h4 id="java安装"><a href="#java安装" class="headerlink" title="java安装"></a>java安装</h4><p>操作系统环境如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">uname -a</span><br><span class="line">Linux vultr_vps_server 4.15.0-47-generic <span class="comment">#50-Ubuntu SMP Wed Mar 13 10:44:52 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux</span></span><br></pre></td></tr></table></figure><p>直接通过apt源安装openjdk。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install openjdk-11-jdk</span><br></pre></td></tr></table></figure><p>查看JAVA环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">java -version</span><br><span class="line">openjdk version <span class="string">"11.0.2"</span> 2019-01-15</span><br><span class="line">OpenJDK Runtime Environment (build 11.0.2+9-Ubuntu-3ubuntu118.04.3)</span><br><span class="line">OpenJDK 64-Bit Server VM (build 11.0.2+9-Ubuntu-3ubuntu118.04.3, mixed mode, sharing)</span><br></pre></td></tr></table></figure><h4 id="lanproxy-server安装"><a href="#lanproxy-server安装" class="headerlink" title="lanproxy server安装"></a>lanproxy server安装</h4><p>下载地址<a href="https://seafile.io2c.com/d/2e81550ebdbd416c933f/" target="_blank" rel="noopener">请戳</a>，选择server的程序包。下载后上传到服务器上。</p><p>解压缩程序包至需要安装的目录，比如本文示例/usr/bin/proxy-server/</p><p>配置文件在程序目录下的conf目录下，名称：config.properties。编辑配置文件，更改登录的用户名和密码。</p><p>配置文件如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">server.bind=0.0.0.0</span><br><span class="line"></span><br><span class="line"><span class="comment">#与代理客户端通信端口</span></span><br><span class="line">server.port=4900</span><br><span class="line"></span><br><span class="line"><span class="comment">#ssl相关配置</span></span><br><span class="line">server.ssl.enable=<span class="literal">true</span></span><br><span class="line">server.ssl.bind=0.0.0.0</span><br><span class="line">server.ssl.port=4993</span><br><span class="line">server.ssl.jksPath=test.jks</span><br><span class="line">server.ssl.keyStorePassword=123456</span><br><span class="line">server.ssl.keyManagerPassword=123456</span><br><span class="line"></span><br><span class="line"><span class="comment">#这个配置可以忽略</span></span><br><span class="line">server.ssl.needsClientAuth=<span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#WEB在线配置管理相关信息</span></span><br><span class="line">config.server.bind=0.0.0.0</span><br><span class="line">config.server.port=8090</span><br><span class="line">config.admin.username=admin</span><br><span class="line">config.admin.password=admin</span><br></pre></td></tr></table></figure><h4 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h4><p>在程序目录下的bin目录有服务启动脚本，添加执行权限后，直接运行启动服务。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/proxy-server/bin</span><br><span class="line">chmod +x startup.sh</span><br><span class="line">./startup.sh</span><br></pre></td></tr></table></figure><p>对于8090端口和ip访问的方式，可以配置nginx代理，使用域名访问。</p><h4 id="登录配置"><a href="#登录配置" class="headerlink" title="登录配置"></a>登录配置</h4><p>浏览器打开<a href="http://ip:8090" target="_blank" rel="noopener">http://ip:8090</a>，使用配置文件中的用户名和密码登录，至此服务端配置结束。</p><h4 id="代理配置"><a href="#代理配置" class="headerlink" title="代理配置"></a>代理配置</h4><p>在客户端管理页添加客户端，添加后会自动生成客户端密钥。</p><p>添加代理端口配置，添加的名称和公网端口，公网端口在防火墙上放通。配置后端IP和端口即为要转发的内网服务器IP和端口。</p><h3 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h3><p>CentOS和Windows各测试一个，CentOS使用JAV客户端，Windows直接使用发布包程序。</p><h4 id="CentOS客户端配置"><a href="#CentOS客户端配置" class="headerlink" title="CentOS客户端配置"></a>CentOS客户端配置</h4><p>安装JAVA环境：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install java-11-openjdk.x86_64 java-11-openjdk-devel.x86_64</span><br></pre></td></tr></table></figure><p>下载程序包，解压至安装目录，如/usr/share/proxy-java-client/</p><p>同样，配置文件在安装目录下的conf目录中。配置文件名称：config.properties。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">client.key=客户端KEY</span><br><span class="line">ssl.enable=<span class="literal">false</span></span><br><span class="line">ssl.jksPath=test.jks</span><br><span class="line">ssl.keyStorePassword=123456</span><br><span class="line"></span><br><span class="line">server.host=服务端IP</span><br><span class="line"></span><br><span class="line"><span class="comment">#default ssl port is 4993</span></span><br><span class="line">server.port=4900</span><br></pre></td></tr></table></figure><p>配置文件结束，返回到上级目录下的bin文件。运行startup.sh。客户端程序启动，在服务端的管理页面中，可以看到已添加的设备在线了。</p><h4 id="Windows客户端的配置"><a href="#Windows客户端的配置" class="headerlink" title="Windows客户端的配置"></a>Windows客户端的配置</h4><p>下载客户端程序，解压后直接放到C盘目录下，连接操作如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># mac 64位</span></span><br><span class="line">nohup ./client_darwin_amd64 -s SERVER_IP -p SERVER_PORT -k CLIENT_KEY &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># linux 64位</span></span><br><span class="line">nohup ./client_linux_amd64 -s SERVER_IP -p SERVER_PORT -k CLIENT_KEY &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># windows 64 位</span></span><br><span class="line">./client_windows_amd64.exe -s SERVER_IP -p SERVER_PORT -k CLIENT_KEY</span><br></pre></td></tr></table></figure><p>查看服务端管理页面，可以看到添加的代理服务器上线。</p><p>配置结束。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;ubuntu-18-04搭建lanproxy服务&quot;&gt;&lt;a href=&quot;#ubuntu-18-04搭建lanproxy服务&quot; class=&quot;headerlink&quot; title=&quot;ubuntu 18.04搭建lanproxy服务&quot;&gt;&lt;/a&gt;ubuntu 18.04搭建
      
    
    </summary>
    
    
      <category term="linux" scheme="https://ywmy210.github.io/ywmy/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>conky 配置透明度</title>
    <link href="https://ywmy210.github.io/ywmy/2019/04/24/conky-%E9%85%8D%E7%BD%AE%E9%80%8F%E6%98%8E%E5%BA%A6/"/>
    <id>https://ywmy210.github.io/ywmy/2019/04/24/conky-配置透明度/</id>
    <published>2019-04-24T08:53:21.000Z</published>
    <updated>2019-04-24T09:00:51.593Z</updated>
    
    <content type="html"><![CDATA[<h2 id="conky-配置透明度"><a href="#conky-配置透明度" class="headerlink" title="conky 配置透明度"></a>conky 配置透明度</h2><p>配置conky后，桌面上会有一个半透明的窗口，在更换壁纸后，半透明窗口内的显示背景仍然为之前的壁纸部分。更改为全透明，即更换壁纸后，窗口一直透明不受壁纸影响操作如下：</p><p>conky 可以使用own_window_argb_visual、own_window_argb_value、own_window_transparent来调节透明特性。这需要窗口管理器支持Xorg复合特性，比如使用compiz或者启用metacity复合特性。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">own_window_argb_visual：布尔值。当为<span class="literal">true</span>时启用真透明特性</span><br><span class="line">own_window_argb_value：当启用真透明时设定不透明度。值的范围是0-255。0是0%不透明度，255是100%不透明</span><br><span class="line">own_window_transparent：布尔值。当该值为<span class="literal">true</span>，并且启用真透明时，设置不透明度为0%</span><br></pre></td></tr></table></figure><p>注意：不要和own_window_type override一起使用。根据conky的文档，这在大多数情况下是无效的，我这里尝试的结果也是如此。<br>所以，如果希望得到完全透明的conky，可以这样设置:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">own_window_argb_visual <span class="literal">true</span></span><br><span class="line">own_window_transparent <span class="literal">true</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;conky-配置透明度&quot;&gt;&lt;a href=&quot;#conky-配置透明度&quot; class=&quot;headerlink&quot; title=&quot;conky 配置透明度&quot;&gt;&lt;/a&gt;conky 配置透明度&lt;/h2&gt;&lt;p&gt;配置conky后，桌面上会有一个半透明的窗口，在更换壁纸后，半透明窗
      
    
    </summary>
    
    
      <category term="linux" scheme="https://ywmy210.github.io/ywmy/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>checkpwd.sh</title>
    <link href="https://ywmy210.github.io/ywmy/2019/04/22/checkpwd-sh/"/>
    <id>https://ywmy210.github.io/ywmy/2019/04/22/checkpwd-sh/</id>
    <published>2019-04-22T02:45:05.000Z</published>
    <updated>2019-04-22T03:17:18.766Z</updated>
    
    <content type="html"><![CDATA[<h2 id="使用密码认证-open-v-p-n"><a href="#使用密码认证-open-v-p-n" class="headerlink" title="使用密码认证*open-[v]-[p]-[n]"></a>使用密码认证*open-[v]-[p]-[n]</h2><p>客户端通过账号密码认证。</p><h3 id="服务端配置"><a href="#服务端配置" class="headerlink" title="服务端配置"></a>服务端配置</h3><p>服务端追加配置项如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auth-user-pass-verify /etc/openvpn/checkpsw.sh via-env</span><br></pre></td></tr></table></figure><p>在目录上添加配置脚本，脚本内容如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line"><span class="comment">###########################################################</span></span><br><span class="line"><span class="comment"># checkpsw.sh (C) 2004 Mathias Sundman &lt;mathias@openvpn.se&gt;</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># This script will authenticate OpenVPN users against</span></span><br><span class="line"><span class="comment"># a plain text file. The passfile should simply contain</span></span><br><span class="line"><span class="comment"># one row per user with the username first followed by</span></span><br><span class="line"><span class="comment"># one or more space(s) or tab(s) and then the password.</span></span><br><span class="line"></span><br><span class="line">PASSFILE=<span class="string">"/etc/openvpn/pwd-file"</span></span><br><span class="line">LOG_FILE=<span class="string">"/var/log/openvpn-password.log"</span></span><br><span class="line">TIME_STAMP=`date <span class="string">"+%Y-%m-%d %T"</span>`</span><br><span class="line"></span><br><span class="line"><span class="comment">###########################################################</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! -r <span class="string">"<span class="variable">$&#123;PASSFILE&#125;</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;TIME_STAMP&#125;</span>: Could not open password file \"<span class="variable">$&#123;PASSFILE&#125;</span>\" for reading."</span> &gt;&gt; <span class="variable">$&#123;LOG_FILE&#125;</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">CORRECT_PASSWORD=`awk <span class="string">'!/^;/&amp;&amp;!/^#/&amp;&amp;$1=="'</span><span class="variable">$&#123;username&#125;</span><span class="string">'"&#123;print $2;exit&#125;'</span> <span class="variable">$&#123;PASSFILE&#125;</span>`</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$&#123;CORRECT_PASSWORD&#125;</span>"</span> = <span class="string">""</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;TIME_STAMP&#125;</span>: User does not exist: username=\"<span class="variable">$&#123;username&#125;</span>\", password=\"<span class="variable">$&#123;password&#125;</span>\"."</span> &gt;&gt; <span class="variable">$&#123;LOG_FILE&#125;</span></span><br><span class="line">  <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ <span class="string">"<span class="variable">$&#123;password&#125;</span>"</span> = <span class="string">"<span class="variable">$&#123;CORRECT_PASSWORD&#125;</span>"</span> ]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;TIME_STAMP&#125;</span>: Successful authentication: username=\"<span class="variable">$&#123;username&#125;</span>\"."</span> &gt;&gt; <span class="variable">$&#123;LOG_FILE&#125;</span></span><br><span class="line">  <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">"<span class="variable">$&#123;TIME_STAMP&#125;</span>: Incorrect password: username=\"<span class="variable">$&#123;username&#125;</span>\", password=\"<span class="variable">$&#123;password&#125;</span>\"."</span> &gt;&gt; <span class="variable">$&#123;LOG_FILE&#125;</span></span><br><span class="line"><span class="built_in">exit</span> 1</span><br></pre></td></tr></table></figure><h3 id="客户端楝"><a href="#客户端楝" class="headerlink" title="客户端楝"></a>客户端楝</h3><p>客户端配置追加一条配置信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">auth-user-pass</span><br></pre></td></tr></table></figure><h3 id="证书的撤销"><a href="#证书的撤销" class="headerlink" title="证书的撤销"></a>证书的撤销</h3><p>添加多个用户后，对用户的撤销操作如下“</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">source</span> ./vars</span><br><span class="line">NOTE: If you run ./clean-all, I will be doing a rm -rf on /home/your_name/openvpn-ca/keys</span><br><span class="line"></span><br><span class="line">./revoke-full client1</span><br><span class="line">Using configuration from /home/yourname/openvpn-ca/openssl.cnf</span><br><span class="line">Revoking Certificate 02.</span><br><span class="line">Data Base Updated</span><br><span class="line">Using configuration from /home/yourname/openvpn-ca/openssl.cnf</span><br><span class="line">C = your country, ST = your province , L = your city, O = your org, OU = your unit, CN = client1, name = server, emailAddress = yourname@abc.com </span><br><span class="line">error 23 at 0 depth lookup: certificate revoked</span><br><span class="line">error client1.crt: verification failed</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;使用密码认证-open-v-p-n&quot;&gt;&lt;a href=&quot;#使用密码认证-open-v-p-n&quot; class=&quot;headerlink&quot; title=&quot;使用密码认证*open-[v]-[p]-[n]&quot;&gt;&lt;/a&gt;使用密码认证*open-[v]-[p]-[n]&lt;/h2&gt;&lt;
      
    
    </summary>
    
    
      <category term="linux" scheme="https://ywmy210.github.io/ywmy/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu change default torrent program</title>
    <link href="https://ywmy210.github.io/ywmy/2019/04/22/ubuntu-change-default-torrent-program/"/>
    <id>https://ywmy210.github.io/ywmy/2019/04/22/ubuntu-change-default-torrent-program/</id>
    <published>2019-04-22T02:05:35.000Z</published>
    <updated>2019-04-22T02:23:18.699Z</updated>
    
    <content type="html"><![CDATA[<h2 id="更改默认磁力链下载工具"><a href="#更改默认磁力链下载工具" class="headerlink" title="更改默认磁力链下载工具"></a>更改默认磁力链下载工具</h2><p>ubuntu 默认的连接力下载工具为Transmission。后面自己又下载了Deluge，安装后即更改了默认的磁力链下载为Deluge。后面发现，默认的Transmission工具对Tracker服务器的编辑比较方便，准备将默认的下载工具改回Transmission。</p><p>操作如下：</p><h3 id="查看默认注册的磁力链下载工具"><a href="#查看默认注册的磁力链下载工具" class="headerlink" title="查看默认注册的磁力链下载工具"></a>查看默认注册的磁力链下载工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gio mime x-scheme-handler/magnet</span><br></pre></td></tr></table></figure><p>输出如下：</p><blockquote><p>Default application for “x-scheme-handler/magnet”: transmission-gtk.desktop<br>已注册的应用程序：<br>transmission-gtk.desktop<br>deluge.desktop<br>webtorrent-desktop.desktop<br>推荐的应用程序：<br>transmission-gtk.desktop<br>deluge.desktop<br>webtorrent-desktop.desktop  </p></blockquote><p>如上图，默认的已经更改为Transmission-gtk.desktop。</p><h3 id="更改默认的磁力链下载工具"><a href="#更改默认的磁力链下载工具" class="headerlink" title="更改默认的磁力链下载工具"></a>更改默认的磁力链下载工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gio mime x-scheme-handler/magnet transmission-gtk.desktop</span><br></pre></td></tr></table></figure><p>如果是更改为Deluge，则更改如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gio mime x-scheme-handler/magnet deluge.desktop</span><br></pre></td></tr></table></figure><p>同理，以上系统注册了三个应用程序，更改为其它的也是一样操作，后面的启动程序文件更改一下就可以了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;更改默认磁力链下载工具&quot;&gt;&lt;a href=&quot;#更改默认磁力链下载工具&quot; class=&quot;headerlink&quot; title=&quot;更改默认磁力链下载工具&quot;&gt;&lt;/a&gt;更改默认磁力链下载工具&lt;/h2&gt;&lt;p&gt;ubuntu 默认的连接力下载工具为Transmission。后面自
      
    
    </summary>
    
    
      <category term="linux" scheme="https://ywmy210.github.io/ywmy/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>mysql 常用操作</title>
    <link href="https://ywmy210.github.io/ywmy/2019/04/21/mysql-%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/"/>
    <id>https://ywmy210.github.io/ywmy/2019/04/21/mysql-常用操作/</id>
    <published>2019-04-21T08:17:48.167Z</published>
    <updated>2019-03-08T09:27:13.435Z</updated>
    
    <content type="html"><![CDATA[<h1 id="mysql基本常用命令汇总"><a href="#mysql基本常用命令汇总" class="headerlink" title="mysql基本常用命令汇总"></a>mysql基本常用命令汇总</h1><h2 id="常用总结"><a href="#常用总结" class="headerlink" title="常用总结"></a>常用总结</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">creat database name; 创建数据库</span><br><span class="line">use database_name; 选择数据库</span><br><span class="line">drop database db_name; 直接删除数据库，不提醒</span><br><span class="line">show tables; 显示表</span><br><span class="line">describe table_name; 表的详细描述</span><br><span class="line">select 中加上distinct去除重复字段</span><br><span class="line"></span><br><span class="line">显示当前mysql版本和当前日期</span><br><span class="line"></span><br><span class="line">select version(), current_date;</span><br><span class="line"></span><br><span class="line">修改用户密码，如root</span><br><span class="line"></span><br><span class="line">mysql&gt; update user <span class="built_in">set</span> authentication_string=password(<span class="string">'new_password'</span>) WHERE user=<span class="string">'root'</span>;</span><br><span class="line">Query OK, <span class="comment">### row affected, ### warning (0.08 sec)</span></span><br><span class="line">Rows matched: <span class="comment">###  Changed: ###  Warnings: 1</span></span><br><span class="line"></span><br><span class="line">创建用户</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CREATE USER <span class="string">'your_name'</span>@<span class="string">'localhost'</span> IDENTIFIED BY <span class="string">'password'</span>;</span><br><span class="line"></span><br><span class="line">用户授权</span><br><span class="line"></span><br><span class="line">GRANT ALL PRIVILEGES ON *.* TO <span class="string">'your_name'</span>@<span class="string">'localhost'</span> WITH GRANT OPTION</span><br><span class="line"></span><br><span class="line">取消授权</span><br><span class="line"></span><br><span class="line">mysql&gt; select user, host from mysql.user;  查看已经存在的用户</span><br><span class="line">mysql&gt; revoke all privileges on *.* from <span class="built_in">test</span>@localhost; 取消授权</span><br><span class="line">mysql&gt; delete from user <span class="built_in">where</span> user=<span class="string">"test"</span> and host=<span class="string">"localhost"</span>; 删除用户</span><br><span class="line">mysql&gt; delete from user <span class="built_in">where</span> user=<span class="string">"test"</span> and host=<span class="string">"localhost"</span>;</span><br></pre></td></tr></table></figure><h2 id="创建和操作表"><a href="#创建和操作表" class="headerlink" title="创建和操作表"></a>创建和操作表</h2><h3 id="创建表语法"><a href="#创建表语法" class="headerlink" title="创建表语法"></a>创建表语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">create table &lt;表名&gt;(</span><br><span class="line">    &lt;列名<span class="comment">###  &lt;数据类型&gt; &lt;约束条件&gt;</span></span><br><span class="line">    &lt;列名<span class="comment">###  &lt;数据类型&gt; &lt;约束条件&gt;</span></span><br><span class="line">    &lt;列名<span class="comment">###  &lt;数据类型&gt; &lt;约束条件&gt;</span></span><br><span class="line">    .....</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="NULL值"><a href="#NULL值" class="headerlink" title="NULL值"></a>NULL值</h3><p>在定义表时，可以在约束条件中指定该列允许或不允许NULL值。如果指定不允许NULL值，则在插入数据时如果为NULL就会报错。</p><h3 id="默认值"><a href="#默认值" class="headerlink" title="默认值"></a>默认值</h3><p>可以在定义表时使用默认值，使用关键词default &lt;值&gt;进行设定，如果在插入数据时，没有值插入，则该列会插入默认值。</p><h3 id="更新表"><a href="#更新表" class="headerlink" title="更新表"></a>更新表</h3><p>更新表使用alter table语句，我们可以进行如下操作：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alter table &lt;表名&gt; add column &lt;列名&gt; &lt;数据类型&gt;;   //增加新列</span><br><span class="line">alter table &lt;表名&gt; drop column &lt;列名&gt;;  //删除列</span><br></pre></td></tr></table></figure><h3 id="重命名表"><a href="#重命名表" class="headerlink" title="重命名表"></a>重命名表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rename table &lt;旧表名&gt; to &lt;新表名&gt;;</span><br></pre></td></tr></table></figure><h3 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop table &lt;表名&gt;;</span><br></pre></td></tr></table></figure><h2 id="检索数据"><a href="#检索数据" class="headerlink" title="检索数据"></a>检索数据</h2><h3 id="检索单列"><a href="#检索单列" class="headerlink" title="检索单列"></a>检索单列</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select &lt;列名&gt; from &lt;表名&gt;;</span><br></pre></td></tr></table></figure><h3 id="检索多列"><a href="#检索多列" class="headerlink" title="检索多列"></a>检索多列</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select &lt;列名1&gt;, &lt;列名2&gt;, ... from &lt;表名&gt;;</span><br></pre></td></tr></table></figure><h3 id="检索不同值"><a href="#检索不同值" class="headerlink" title="检索不同值"></a>检索不同值</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select distinct(&lt;列名&gt;) from &lt;表名&gt;;</span><br></pre></td></tr></table></figure><h3 id="限制结果"><a href="#限制结果" class="headerlink" title="限制结果"></a>限制结果</h3><p>在mysql中，如果我们需要限制结果输出的条数，可以使用limit &lt;数字&gt;来表示限制的行数。</p><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 注释     //单行注释</span></span><br><span class="line">/* 多行注释</span><br><span class="line">   多行注释</span><br><span class="line">*/</span><br></pre></td></tr></table></figure><h2 id="排序检索数据"><a href="#排序检索数据" class="headerlink" title="排序检索数据"></a>排序检索数据</h2><p>有时我们需要对检索出来的数据进行排序，这时我们使用如下语句进行:</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">order by &lt;列名&gt; asc/desc;</span><br></pre></td></tr></table></figure><p>asc为升序排序，也是mysql中默认的排序方式；desc表示按照降序排序。此外根据需要我们也可以对多列进行排序，如下代码所示：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">order by &lt;列名1&gt; &lt;排序方法&gt;, &lt;列名2&gt; &lt;排序方法&gt;....;</span><br></pre></td></tr></table></figure><p>值得注意的是，<strong>order by 语句通常位于查询语句的最后面</strong>。后面会具体介绍查询语句的完整构成。</p><h2 id="过滤数据"><a href="#过滤数据" class="headerlink" title="过滤数据"></a>过滤数据</h2><h3 id="使用where子句"><a href="#使用where子句" class="headerlink" title="使用where子句"></a>使用where子句</h3><p>在sql中，我们使用where子名来对查询出的结果进行过滤，得到我们所需要的数据。它的格式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">select &lt;列名&gt; from &lt;表名&gt;</span><br><span class="line"><span class="built_in">where</span> &lt;过滤条件&gt;;</span><br></pre></td></tr></table></figure><p>过滤条件有多个时，我们可以使用and或or来进行多个条件的罗列。值得注意的是，当有多个过滤条件时，<strong>and的优先级会高于or</strong>，这也许会导致一些逻辑错误，需要注意。</p><h3 id="where子句操作符"><a href="#where子句操作符" class="headerlink" title="where子句操作符"></a>where子句操作符</h3><table><thead><tr><th>运算符</th><th>描述</th></tr></thead><tbody><tr><td>=</td><td>等于</td></tr><tr><td>&lt;&gt;</td><td>不等于。<strong>注释</strong>：在SQL的一些版本中，该操作符可以被写成!=</td></tr><tr><td>&gt;</td><td>大于</td></tr><tr><td>&lt;</td><td>小于</td></tr><tr><td>&gt;=</td><td>大于等于</td></tr><tr><td>&lt;=</td><td>小于等于</td></tr><tr><td>BETWEEN</td><td>在某个范围内</td></tr><tr><td>LINK</td><td>搜索某种模式</td></tr><tr><td>IN</td><td>指定针对某个列的多个可能值</td></tr></tbody></table><p>值得注意的是，在判断某个值是否为空值时，应该使用is null或is not null来判断，而不是使用”= null”或”!= null”。</p><h3 id="使用通配符进行过滤"><a href="#使用通配符进行过滤" class="headerlink" title="使用通配符进行过滤"></a>使用通配符进行过滤</h3><p>在使用通配符进行过滤进，我们使用like操作符进行。</p><p>通配符主要包括两个，它们分别为百分号’%’和下划线’<em>‘，其中’%’表示使用长度的字符串，而下划线’</em>‘只表示一个字符；需要注意的是，’%’不仅可以表示一个或多个字符，还可以表示0个字符。</p><h2 id="创建计算字段"><a href="#创建计算字段" class="headerlink" title="创建计算字段"></a>创建计算字段</h2><h3 id="计算字段"><a href="#计算字段" class="headerlink" title="计算字段"></a>计算字段</h3><p>存储在数据库中的数据一般不是应用程序所需要的格式。</p><p>我们需要直接从数据库中检索出转化、计算或格式化过的数据；而不是检索出数据，然后再在客户机应用改程序或报告程序中重新格式化。</p><p>只有数据库知道select语句中哪些列是实际的表列，哪些列是计算字段。从客户机（应用程序）的角度来看，计算字段的数据是以与其它列的数据相同的方式返回的。</p><h3 id="拼接字段"><a href="#拼接字段" class="headerlink" title="拼接字段"></a>拼接字段</h3><p>在mysql中，我们可以使用concat函数对字段进行拼接，格式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">concat(str1, str2, str3.....);</span><br></pre></td></tr></table></figure><p>对于字符串中存在的空格，我们可以用字符串处理函数RTRIM()、LTRIM()、TRIM()来进行处理。</p><h3 id="使用别名"><a href="#使用别名" class="headerlink" title="使用别名"></a>使用别名</h3><p>我们可以用关键字as来给我们的列起一个别名。格式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select &lt;列名&gt; as &lt;别名&gt; from &lt;表名&gt;;</span><br></pre></td></tr></table></figure><h2 id="使用函数处理数据"><a href="#使用函数处理数据" class="headerlink" title="使用函数处理数据"></a>使用函数处理数据</h2><p>函数的可移植性是很可的，而且使用函数可以很方便的对数据进行处理。</p><p>mysql函数主要有甲种</p><ul><li>文本函数</li><li>数值函数</li><li>时间与日期函数</li><li>系统函数</li></ul><p>下面介绍常用的一些函数</p><h3 id="文本函数"><a href="#文本函数" class="headerlink" title="文本函数"></a>文本函数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">left(s, n)      //返回字符串左边的n个字符</span><br><span class="line">right(s, n)     //返回字符串右边的n个字符</span><br><span class="line">trim(s)         //去掉字符串s的空格</span><br><span class="line">ltrim(s)        //去掉字符中左边的空格</span><br><span class="line">rtrim(s)        //去掉字符串右边的空格</span><br><span class="line">length(s)       //计算字符串的长度</span><br><span class="line">lower(s)        //将字符串的所有字符变成小写</span><br><span class="line">upper(s)        //将字符串的所有字符变成大写</span><br></pre></td></tr></table></figure><h3 id="数值函数"><a href="#数值函数" class="headerlink" title="数值函数"></a>数值函数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">abs(x)      //绝对值</span><br><span class="line">cos(x)</span><br><span class="line">sin(x)</span><br><span class="line">tan(x)</span><br><span class="line">acos(x) asin(x) atan(x)     //三角函数</span><br><span class="line">ceil(x)        //返回大于或等于X的最小整数</span><br><span class="line">floor(x)       //舍去x的小数部分，只保留整数部分，并且不进行四舍五入</span><br><span class="line">pi()           //返回圆周率</span><br><span class="line">sqrt(x)        //平方根</span><br><span class="line">pow(x,y)       //x的y次方</span><br><span class="line">exp(x)         //返回e的x次方</span><br><span class="line">rand()         //返回0－1的随机数</span><br><span class="line">round(x,y)     //返回x的值小数点后面的第y位，进行四舍五入</span><br><span class="line">truncate(x,y)  //返回x的值小数点后面的第y位，不进行四舍五入</span><br></pre></td></tr></table></figure><h3 id="日期与时间函数"><a href="#日期与时间函数" class="headerlink" title="日期与时间函数"></a>日期与时间函数</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">current_date()      //返回当前日期</span><br><span class="line">current_time()      //返回当前时间</span><br><span class="line">current_timestap()/now()        //返回当前日期和时间</span><br><span class="line">date()              //从日期或日期时间中撮日期值</span><br><span class="line">year() month() day() hour() minute()</span><br><span class="line">date_format(d, f)   //以指定格式显示日期</span><br><span class="line">datediff()</span><br><span class="line">timediff()</span><br><span class="line">timestapdiff()</span><br></pre></td></tr></table></figure><h3 id="汇总数据"><a href="#汇总数据" class="headerlink" title="汇总数据"></a>汇总数据</h3><p><strong>聚合函数</strong>：聚合函数就是用来数据汇总的一类函数。以下五个险函数务必牢记。它们通常和分级数据结合使用：</p><ul><li>avg()</li><li>min()</li><li>max()</li><li>count()</li><li>sum()</li></ul><p>需要注意的是，聚合函数均不会处理NULL值</p><h2 id="分级数据"><a href="#分级数据" class="headerlink" title="分级数据"></a>分级数据</h2><h3 id="创建分组"><a href="#创建分组" class="headerlink" title="创建分组"></a>创建分组</h3><p>创建分组使用group by子句，格式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">select &lt;列名&gt; from &lt;表名&gt;</span><br><span class="line"><span class="built_in">where</span> &lt;过滤条件&gt;</span><br><span class="line">group by &lt;列名&gt;</span><br><span class="line">having &lt;过滤条件&gt;</span><br><span class="line">order by &lt;列名&gt; &lt;排序方式&gt;</span><br></pre></td></tr></table></figure><p>其实上面的格式也是select语句完整格式。</p><h3 id="过滤分组"><a href="#过滤分组" class="headerlink" title="过滤分组"></a>过滤分组</h3><p>过滤分组倩having，牢记<strong>where是行级过滤，having是组级过滤</strong></p><h2 id="使用子查询"><a href="#使用子查询" class="headerlink" title="使用子查询"></a>使用子查询</h2><p>子查询也就是select语句的嵌套，有了子查询我们就可以进行复杂的查询。</p><p>子查询返回的一张表，所以基位置也比较灵活，可以位于rom后面，也可以位于where后面。</p><p>子查询也可以说是<strong>一个一次性的视图</strong>。</p><p>在执行顺序上，先执行子查询，再执行外层的查询。</p><p>牢记：<strong>where子句中不能使用聚合函数</strong></p><h2 id="连接表"><a href="#连接表" class="headerlink" title="连接表"></a>连接表</h2><p>表的连接主要分为以下几种：</p><ul><li>内连接</li><li>外连接（左连接、右连接）</li><li>自连接</li></ul><h3 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h3><p>语法格式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT 查询字段 FROM 表1 [as] 别名 [INNER] JOIN 表2 [as] 别名 ON 表1.关系字段 ＝ 表2.关系字段</span><br></pre></td></tr></table></figure><p>内连接就是两个表的次部分。</p><h3 id="左连接"><a href="#左连接" class="headerlink" title="左连接"></a>左连接</h3><p>语法格式如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SELECT 查询字段 FROM 表1 [as] 别名 LEFT JOIN 表2 [as] 别名 ON 表1.关系字段 ＝ 表2.关系字段</span><br></pre></td></tr></table></figure><p>左连接就是左边表的记录要全部显示出来，右右只有和械表匹配到的记录才进行显示。</p><h3 id="右连接"><a href="#右连接" class="headerlink" title="右连接"></a>右连接</h3><p>和左连接相反。</p><h3 id="自连接"><a href="#自连接" class="headerlink" title="自连接"></a>自连接</h3><p>就是表一张表看成两张表，进行自连接往往是一张表的某些列间存在逻辑关系。</p><h2 id="组合查询"><a href="#组合查询" class="headerlink" title="组合查询"></a>组合查询</h2><h3 id="创建组合查询"><a href="#创建组合查询" class="headerlink" title="创建组合查询"></a>创建组合查询</h3><p>创建组合查询时我们使用UNION将两个或多个select语句查询的结果组合在一起形成一个表。</p><p>需要不同的select语句返回相同数量的列且对应列的数据类型相同，事实上应该是意义都一样才合理。</p><h3 id="union与union-all"><a href="#union与union-all" class="headerlink" title="union与union all"></a>union与union all</h3><p>对于组合查询结果的排序只需要使用一个order by子名句，放在最后一个select语句的后面即可。</p><h2 id="插入、更新删除数据"><a href="#插入、更新删除数据" class="headerlink" title="插入、更新删除数据"></a>插入、更新删除数据</h2><h3 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into &lt;表名&gt;(列名1，列名2，列名3...) values (数据...);</span><br></pre></td></tr></table></figure><p>虽然表名后面的列名表不是严格要求的，但是这样会更安全。如果不写出列名，则需要严格按照表的定义插入数据。</p><p>如果我们只需要插入一行中的部分列，那么列出列名就变得必须了。</p><h4 id="插入检索出的数据"><a href="#插入检索出的数据" class="headerlink" title="插入检索出的数据"></a>插入检索出的数据</h4><p>使用insert …select 语句进行。以下是格式：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">insert into &lt;表名&gt;(列名表)</span><br><span class="line">select &lt;列名表&gt; from &lt;表名&gt;;</span><br></pre></td></tr></table></figure><h4 id="复制表"><a href="#复制表" class="headerlink" title="复制表"></a>复制表</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">create table copytable as </span><br><span class="line">select * from &lt;表名&gt;;</span><br></pre></td></tr></table></figure><h4 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">update &lt;表名&gt;</span><br><span class="line"><span class="built_in">set</span> &lt;列名&gt; = ...</span><br><span class="line"><span class="built_in">where</span> &lt;过滤条件&gt;;</span><br></pre></td></tr></table></figure><p>一定切记不要忘了过滤条件，否则将会对所有的行的数据进行更新。</p><h4 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h4><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delect from &lt;表名&gt; <span class="built_in">where</span> &lt;过滤条件&gt;;</span><br></pre></td></tr></table></figure><p>如果要删除某行中某列的元素，可以将其值更新为NULL。</p><h2 id="使用视图"><a href="#使用视图" class="headerlink" title="使用视图"></a>使用视图</h2><p>视图是一张虚表，它并不在座实际的数据，存储的只是select语句。</p><p>使用视力有如下的优点</p><ul><li>提高sql语句的重用性</li><li>保证了数据的安全性</li><li>大大简化了sql语句</li></ul><h3 id="创建视图"><a href="#创建视图" class="headerlink" title="创建视图"></a>创建视图</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create view &lt;视图名&gt; as &lt;select 语句&gt;;</span><br></pre></td></tr></table></figure><h3 id="删除视图"><a href="#删除视图" class="headerlink" title="删除视图"></a>删除视图</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop view &lt;视图名&gt;;</span><br></pre></td></tr></table></figure><h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2><h3 id="什么是事务"><a href="#什么是事务" class="headerlink" title="什么是事务"></a>什么是事务</h3><p>需要在同一个处理单元中执行的一系列更新处理的集合。一个事务中包含了多少个更新处理或者包含了哪些处理，在DBMS中没有固定的标准，而是根据用户的要求决定的。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">start tyransaction;</span><br><span class="line">DML 语句1；</span><br><span class="line">DML 语句2；</span><br><span class="line">DML 语句3；</span><br><span class="line">...</span><br><span class="line">ROLLBACK／COMMIT；</span><br></pre></td></tr></table></figure><h3 id="理解事务"><a href="#理解事务" class="headerlink" title="理解事务"></a>理解事务</h3><p>事务其实很好理解，它将一系列操作放在一个块中形成一个代码块，这个代码块要执行就全部执行，要么就不执行。</p><p>拿银行转账为例，转账过程为，我的账户金额减少－－》对方账户金额增加－－》交易完毕。</p><p>如果我的账户金额减少后出现了故障导致对方账户金额没有增加，那么这肯定是不被允许的。所以这个转账过程中的每一步都必须完整的执行。</p><p>ROLLBACK就是在DML语句出现故障时，来便利数据库回滚到执行操作前的状态。而COMMIT则是所有DML正确执行后才执行，告诉系统这个事务正常完成了，系统可以进入下一个新的状态了。</p><h2 id="补充知识点"><a href="#补充知识点" class="headerlink" title="补充知识点"></a>补充知识点</h2><h3 id="case-when-语句"><a href="#case-when-语句" class="headerlink" title="case when 语句"></a>case when 语句</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> when &lt;表达式1&gt; <span class="keyword">then</span> &lt;表达式&gt;</span><br><span class="line">     when &lt;表达式2&gt; them &lt;表达式&gt;</span><br><span class="line">     ...</span><br><span class="line">     <span class="keyword">else</span> &lt;表达式&gt;</span><br><span class="line">end</span><br></pre></td></tr></table></figure><h3 id="sql语句及种类"><a href="#sql语句及种类" class="headerlink" title="sql语句及种类"></a>sql语句及种类</h3><p>这是sql的基础知识：</p><p>－ DDL：数据定义语言，用来创建、删除存储数据的数据训以及数据库中的表的对象，包含的指令有：CREATE、DROOP、ALTER<br>－ DML：数据操纵语言，用来查询或者变更表中的记录。包含的指令有：SELECT、INSERT、UPDATE、DELETE<br>－ DCL：数据控制语言，用来确认或者取消对数据库中的数据进行的变量。包含的指令有：COMMIT、ROLLBACK、GRANT、REVOKE</p><h3 id="exists谓词"><a href="#exists谓词" class="headerlink" title="exists谓词"></a>exists谓词</h3><p>在sql语言中，exists(存在)谓词是一个非常重要的查询关键词。</p><p>exists代表<strong>存在</strong>量词。带有exists谓词的子查询不返回任何数据，只产生逻辑真值“true”或逻辑假值“flase”。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;mysql基本常用命令汇总&quot;&gt;&lt;a href=&quot;#mysql基本常用命令汇总&quot; class=&quot;headerlink&quot; title=&quot;mysql基本常用命令汇总&quot;&gt;&lt;/a&gt;mysql基本常用命令汇总&lt;/h1&gt;&lt;h2 id=&quot;常用总结&quot;&gt;&lt;a href=&quot;#常用总结&quot;
      
    
    </summary>
    
    
      <category term="database" scheme="https://ywmy210.github.io/ywmy/tags/database/"/>
    
  </entry>
  
  <entry>
    <title>linux下的病毒防护</title>
    <link href="https://ywmy210.github.io/ywmy/2019/04/18/linux%E4%B8%8B%E7%9A%84%E7%97%85%E6%AF%92%E9%98%B2%E6%8A%A4/"/>
    <id>https://ywmy210.github.io/ywmy/2019/04/18/linux下的病毒防护/</id>
    <published>2019-04-18T00:49:58.000Z</published>
    <updated>2019-04-18T02:32:54.488Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Linux-下的病毒防护"><a href="#Linux-下的病毒防护" class="headerlink" title="Ｌinux 下的病毒防护"></a>Ｌinux 下的病毒防护</h2><p>没有绝对安全的系统，linux下也存在病毒及安全后门。记录linux下的杀毒引擎clamav的安装及使用。</p><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>CentOS直接通过yum安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo yum install epel-release -y</span><br><span class="line">sudo yum install clamav -y</span><br></pre></td></tr></table></figure><p>Ubuntu直接通过atp安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install clamav</span><br></pre></td></tr></table></figure><h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>安装后，更新病毒库。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># freshclam</span></span><br><span class="line"><span class="comment"># 输出如下：</span></span><br><span class="line">...............</span><br><span class="line">ClamAV update process started at Sun Apr  7 11:10:18 2019</span><br><span class="line">Downloading main.cvd [100%]</span><br><span class="line">main.cvd updated (version: 58, sigs: 4566249, f-level: 60, builder: sigmgr)</span><br><span class="line">Downloading daily.cvd [100%]</span><br><span class="line">daily.cvd updated (version: 25422, sigs: 1552110, f-level: 63, builder: raynman)</span><br><span class="line">Downloading bytecode.cvd [100%]</span><br><span class="line">bytecode.cvd updated (version: 328, sigs: 94, f-level: 63, builder: neo)</span><br><span class="line">[LibClamAV] ******************************************************</span><br><span class="line">[LibClamAV] ***      Virus database timestamp <span class="keyword">in</span> the future!   ***</span><br><span class="line">[LibClamAV] ***  Please check the timezone and clock settings  ***</span><br><span class="line">[LibClamAV] ******************************************************</span><br><span class="line">Database updated (6118453 signatures) from database.clamav.net (IP: 104.16.219.84)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Linux-下的病毒防护&quot;&gt;&lt;a href=&quot;#Linux-下的病毒防护&quot; class=&quot;headerlink&quot; title=&quot;Ｌinux 下的病毒防护&quot;&gt;&lt;/a&gt;Ｌinux 下的病毒防护&lt;/h2&gt;&lt;p&gt;没有绝对安全的系统，linux下也存在病毒及安全后门。记录l
      
    
    </summary>
    
    
      <category term="linux" scheme="https://ywmy210.github.io/ywmy/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu下的一些小折腾</title>
    <link href="https://ywmy210.github.io/ywmy/2019/04/17/ubuntu%E4%B8%8B%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%98%E8%85%BE/"/>
    <id>https://ywmy210.github.io/ywmy/2019/04/17/ubuntu下的一些小折腾/</id>
    <published>2019-04-17T02:08:56.000Z</published>
    <updated>2019-04-24T05:01:49.122Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Ubuntu-18-04-小问题"><a href="#Ubuntu-18-04-小问题" class="headerlink" title="Ubuntu 18.04 小问题"></a>Ubuntu 18.04 小问题</h1><h2 id="ibus候选词方块"><a href="#ibus候选词方块" class="headerlink" title="ibus候选词方块"></a>ibus候选词方块</h2><ul><li>问题描述</li></ul><p>默认的ibus输入法，在输入中文的时候，会出现候选词为方块的现象，原因大致为输入法码表与系统字体渲染的问题。即码表中字符在系统的字体库中找不到对应的字体。虽然不影响使用，且码表中匹配的字大都为繁体或生僻字，看到方块，总有一种要干掉方块字的冲动。尝试把系统字体更改为思源黑体，不过输入法候选词中仍然存在方块。更改输入法显示字体：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ibus-setup</span><br></pre></td></tr></table></figure><p>更改如图：</p><p><img src="http://blog.ywmy.xyz/linux/ibus_setup.png" alt="ibus-setup"></p><p>尝试安装更多字符集的字体库，如明朝花园Ｂ。</p><p>下载链接<a href="https://github.com/tony/dot-fonts" target="_blank" rel="noopener">请戳</a></p><p>补充CJK字体在不同程序之间输入显示的一个小问题，比如码表同[IDRN]源下加心，𢢵.这个字在VS CODE中可以显示，谷歌浏览器中也可以正常显示，在WPS中则显示为潮。</p><h2 id="vs-code-power-line-font"><a href="#vs-code-power-line-font" class="headerlink" title="vs code power-line font"></a>vs code power-line font</h2><ul><li>问题描述</li></ul><p>在昨天没事的时候，把系统的默认的bash更改为zsh，并配置了美化，oh my zsh。</p><p>终端上可以很赏心悦目了，不过在打开vs code的时候，调用zsh会出现power-line字体不显示的问题，具体可看下图：</p><p><img src="http://blog.ywmy.xyz/linux/vs_code_powerline.png" alt="vs_code_powerline"></p><ul><li>解决办法</li></ul><ol><li>安装power-line字体</li></ol><p>下载<a href="https://github.com/abertsch/Menlo-for-Powerline" target="_blank" rel="noopener">请戳</a></p><ol start="2"><li>配置vs code</li></ol><p>操作步骤：设置－&gt;打开json设置-&gt;输入以下调用字体信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="string">"terminal.integrated.fontFamily"</span>: <span class="string">"Menlo for Powerline"</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考下图：</p><p><img src="http://blog.ywmy.xyz/linux/vs_code_powerline_set.png" alt="vs_code_powerline_set"></p><p>完成设置后，显示效果生效，参考下图：</p><p><img src="http://blog.ywmy.xyz/linux/vs_code_json_set.png" alt="vs_code_json_ser"></p><p><a href="https://dev.to/mattstratton/making-powerline-work-in-visual-studio-code-terminal-1m7" target="_blank" rel="noopener">参考链接</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Ubuntu-18-04-小问题&quot;&gt;&lt;a href=&quot;#Ubuntu-18-04-小问题&quot; class=&quot;headerlink&quot; title=&quot;Ubuntu 18.04 小问题&quot;&gt;&lt;/a&gt;Ubuntu 18.04 小问题&lt;/h1&gt;&lt;h2 id=&quot;ibus候选词方块
      
    
    </summary>
    
    
      <category term="linux" scheme="https://ywmy210.github.io/ywmy/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>记一些ubuntu 18.04的小毛病</title>
    <link href="https://ywmy210.github.io/ywmy/2019/04/13/%E8%AE%B0%E4%B8%80%E4%BA%9Bubuntu-18-04%E7%9A%84%E5%B0%8F%E6%AF%9B%E7%97%85/"/>
    <id>https://ywmy210.github.io/ywmy/2019/04/13/记一些ubuntu-18-04的小毛病/</id>
    <published>2019-04-13T10:28:11.000Z</published>
    <updated>2019-04-14T02:02:20.813Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Ubuntu-18-04个人使用问题汇总"><a href="#Ubuntu-18-04个人使用问题汇总" class="headerlink" title="Ubuntu 18.04个人使用问题汇总"></a>Ubuntu 18.04个人使用问题汇总</h1><p>使用桌面版的ubuntu，总会有一些小问题，也经常会疑惑，好好的用着，怎么突然就不行了呢。本着能折腾就折腾的原则，记录一下，目前遇到的，比较深刻的小问题。</p><h2 id="启动后无法进入X-org环境"><a href="#启动后无法进入X-org环境" class="headerlink" title="启动后无法进入X.org环境"></a>启动后无法进入X.org环境</h2><p>在一次更新操作后，重启了，选择X.org进入后，只有桌面壁纸，鼠标键盘无反应。</p><p>但是进入Wayland环境没有问题，正常操作。</p><p>记录以下操作：</p><p>因为也确实不清楚原因。大概能猜到和桌面环境有关系。</p><p>操作尝试：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install ubuntu-desktop</span><br><span class="line">sudo apt install xserver-xong-input-all</span><br><span class="line">sudo apt install input-utils</span><br></pre></td></tr></table></figure><p>结束后，重启，进入X.org桌面，好了。正常操作了。</p><h2 id="QT5程序缩放不正常"><a href="#QT5程序缩放不正常" class="headerlink" title="QT5程序缩放不正常"></a>QT5程序缩放不正常</h2><p>同样在一次电脑启动后，发现一个常用的程序，QT5界面本来运行时，正常的图标，变小了，窗口变大了，字体变模糊了，而且，窗口调整还不正常。</p><p>试了一下另外一个QT5写的程序，stacer。打开发现，比例倒是正常的，缩放比正常大了两倍左右，字体显示倒是正常。</p><p>还有一个也是天天用的。网易云音乐，打开后，也是比正常缩放大了两倍左右，字体也模糊。系统程序都是正常的，想了一下，应该是QT5程序的问题。</p><p>百度关键字，QT5 缩放，还真有和QT 5相关各种缩放问题，再想到是不是和屏幕分辨训练场有关，自己屏幕是1080P的，检索关键字：QT5 HiDPI scaling gonme 3，比如这篇<a href="https://unix.stackexchange.com/questions/433385/scaling-hidpi-issue-for-qt5-applications-under-gnome" target="_blank" rel="noopener">请戳</a>。还有一篇，也是写到高分辨率下的缩放问题，据说是一个多年没人管的BUG，链接<a href="https://my.oschina.net/flywuya/blog/1797527" target="_blank" rel="noopener">请戳</a>。</p><p>好了，这次明白了，思路就是启动程序时手动调整绽放比例，或者是调字体DPI。</p><p>最后给个直接改启动参数的方法。效果是出来了，也算是正常使用了。</p><p>参考网易云音乐的启动参数，字体显示正常，缩放不正常的：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /usr/share/applications/netease-cloud-music.desktop</span><br><span class="line"></span><br><span class="line">[Desktop Entry]</span><br><span class="line">Version=1.0</span><br><span class="line">Type=Application</span><br><span class="line">Name=NetEase Cloud Music</span><br><span class="line">Name[zh_CN]=网易云音乐</span><br><span class="line">Name[zh_TW]=網易雲音樂</span><br><span class="line">Comment=NetEase Cloud Music</span><br><span class="line">Comment[zh_CN]=网易云音乐</span><br><span class="line">Comment[zh_TW]=網易雲音樂</span><br><span class="line">Icon=netease-cloud-music</span><br><span class="line">Exec=sh -c <span class="string">"unset SESSION_MANAGER &amp;&amp; netease-cloud-music %U"</span></span><br><span class="line">Categories=AudioVideo;Player;</span><br><span class="line">Terminal=<span class="literal">false</span></span><br><span class="line">StartupNotify=<span class="literal">true</span></span><br><span class="line">StartupWMClass=netease-cloud-music</span><br><span class="line">MimeType=audio/aac;audio/flac;audio/mp3;audio/mp4;audio/mpeg;audio/ogg;audio/x-ape;audio/x-flac;audio/x-mp3;audio/x-mpeg;audio/x-ms-wma;audio/x-vorbis;audio/x-vorbis+ogg;audio/x-wav;</span><br><span class="line">Exec=env QT_SCALE_FACTOR=0.5 /usr/bin/netease-cloud-music   <span class="comment">#这一行，启动时调整绽放比例</span></span><br></pre></td></tr></table></figure><p>参考stacer启动参数，绽放和字体都不正常的：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">sudo vim /usr/share/applications/stacer.desktop </span><br><span class="line"></span><br><span class="line">[Desktop Entry]</span><br><span class="line">Name=Stacer</span><br><span class="line">Exec=stacer</span><br><span class="line">Comment=Linux System Optimizer and Monitoring</span><br><span class="line">Icon=stacer</span><br><span class="line">Type=Application</span><br><span class="line">Terminal=<span class="literal">false</span></span><br><span class="line">Encoding=UTF-8</span><br><span class="line">Categories=Utility;</span><br><span class="line">Exec=env QT_SCALE_FACTOR=0.5 QT_FONT_DPI=180 /usr/share/stacer/stacer  <span class="comment">#这一行，既调比例，也调DPI</span></span><br></pre></td></tr></table></figure><p>缩放比例和字体渲染，看自已屏幕分辨率，调整完后，试一下程序启动后的效果。好了，这个问题也算是处理结束。</p><p>再一次回到第一个问题上，Wayland环境上，基本自己使用的程序都能正常使用。有一点，自己买了一块wacom的手绘板，github上有一个linux wacom project的项目，可以支持linux使用手绘板。不过一个小问题，手绘板在wayland上使用的时候，手绘笔没办法选取程序的菜单项，暂时应该无解。所以默认就X.org环境启动系统使用了。</p><p>小记结束。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Ubuntu-18-04个人使用问题汇总&quot;&gt;&lt;a href=&quot;#Ubuntu-18-04个人使用问题汇总&quot; class=&quot;headerlink&quot; title=&quot;Ubuntu 18.04个人使用问题汇总&quot;&gt;&lt;/a&gt;Ubuntu 18.04个人使用问题汇总&lt;/h1&gt;&lt;
      
    
    </summary>
    
    
      <category term="linux" scheme="https://ywmy210.github.io/ywmy/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu 18.04 安装 nginx</title>
    <link href="https://ywmy210.github.io/ywmy/2019/04/12/ubuntu-18-04-%E5%AE%89%E8%A3%85-nginx/"/>
    <id>https://ywmy210.github.io/ywmy/2019/04/12/ubuntu-18-04-安装-nginx/</id>
    <published>2019-04-12T03:25:50.000Z</published>
    <updated>2019-04-15T01:36:38.107Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ubuntu-18-04-安装-nginx"><a href="#ubuntu-18-04-安装-nginx" class="headerlink" title="ubuntu 18.04 安装 nginx"></a>ubuntu 18.04 安装 nginx</h1><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>服务器上安装了两个服务。通过外网加端口访问。需求通过nginx代理访问两个服务。</p><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>ubuntu 18.04,非root，常规用户账户。</p><h2 id="Step1-Installing-Nginx"><a href="#Step1-Installing-Nginx" class="headerlink" title="Step1-Installing Nginx"></a>Step1-Installing Nginx</h2><p>Ubuntu 18.04默认软件库中包含Nginx包。所以可以直接通过apt包管理工具进行安装。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install nginx</span><br></pre></td></tr></table></figure><h2 id="Step2-Adjusting-the-Firewall"><a href="#Step2-Adjusting-the-Firewall" class="headerlink" title="Step2-Adjusting the Firewall"></a>Step2-Adjusting the Firewall</h2><p>在进行Nginx测试之前，需求调整防火墙设置放通Nginx服务。</p><p>相看ufw应用列表。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw app list</span><br></pre></td></tr></table></figure><p>输出内容:</p><blockquote><p>Available applications:<br>Nginx Full<br>Nginx HTTP<br>Nginx HTTPS</p></blockquote><p>如所见，Nginx Full即放通80和443，Nginx HTTP即放通80，Nginx HTTPS即放通443。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw allow <span class="string">'Nginx FULL'</span></span><br></pre></td></tr></table></figure><h2 id="Step3-Checking-your-Web-Server"><a href="#Step3-Checking-your-Web-Server" class="headerlink" title="Step3-Checking your Web Server"></a>Step3-Checking your Web Server</h2><p>安装结束，程序服务就会启用。通过systemctl查看Nginx相关的进程信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl status nginx </span><br><span class="line"></span><br><span class="line">● nginx.service - A high performance web server and a reverse proxy server</span><br><span class="line">   Loaded: loaded (/lib/systemd/system/nginx.service; enabled; vendor preset: enabled)</span><br><span class="line">   Active: active (running) since Sat 2019-04-13 09:41:04 UTC; 10s ago</span><br><span class="line">     Docs: man:nginx(8)</span><br><span class="line">  Process: 4576 ExecStop=/sbin/start-stop-daemon --quiet --stop --retry QUIT/5 --pidfile /run/nginx.pid (code=exited, status=2)</span><br><span class="line">  Process: 4586 ExecStart=/usr/sbin/nginx -g daemon on; master_process on; (code=exited, status=0/SUCCESS)</span><br><span class="line">  Process: 4577 ExecStartPre=/usr/sbin/nginx -t -q -g daemon on; master_process on; (code=exited, status=0/SUCCESS)</span><br><span class="line"> Main PID: 4589 (nginx)</span><br><span class="line">    Tasks: 2 (<span class="built_in">limit</span>: 1110)</span><br><span class="line">   CGroup: /system.slice/nginx.service</span><br><span class="line">           ├─4589 nginx: master process /usr/sbin/nginx -g daemon on; master_process on;</span><br><span class="line">           └─4593 nginx: worker process</span><br><span class="line"></span><br><span class="line">Apr 13 09:41:04 vultr_vps_server systemd[1]: Starting A high performance web server and a reverse proxy server...</span><br></pre></td></tr></table></figure><p>安装程序结束。</p><p>一个小问题：启动后的nginx有一个状态问题：</p><blockquote><p>nginx.service: Failed to parse PID from file /run/nginx.pid: Invalid argument</p></blockquote><p>解决方法：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Workaround:</span><br><span class="line"></span><br><span class="line"> mkdir /etc/systemd/system/nginx.service.d</span><br><span class="line"> <span class="built_in">printf</span> <span class="string">"[Service]\nExecStartPost=/bin/sleep 0.1\n"</span> &gt; /etc/systemd/system/nginx.service.d/override.conf</span><br><span class="line"> systemctl daemon-reload</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;ubuntu-18-04-安装-nginx&quot;&gt;&lt;a href=&quot;#ubuntu-18-04-安装-nginx&quot; class=&quot;headerlink&quot; title=&quot;ubuntu 18.04 安装 nginx&quot;&gt;&lt;/a&gt;ubuntu 18.04 安装 nginx&lt;/
      
    
    </summary>
    
    
      <category term="linux" scheme="https://ywmy210.github.io/ywmy/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu 18.04 安装 lanproxy</title>
    <link href="https://ywmy210.github.io/ywmy/2019/04/11/ubuntu-18-04-%E5%AE%89%E8%A3%85-lanproxy/"/>
    <id>https://ywmy210.github.io/ywmy/2019/04/11/ubuntu-18-04-安装-lanproxy/</id>
    <published>2019-04-11T07:13:18.000Z</published>
    <updated>2019-04-11T08:36:28.845Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Ubuntu-18-04-安装-lanproxy"><a href="#Ubuntu-18-04-安装-lanproxy" class="headerlink" title="Ubuntu 18.04 安装 lanproxy"></a>Ubuntu 18.04 安装 lanproxy</h1><p>lanproxy git-hub地址<a href="https://github.com/ffay/lanproxy" target="_blank" rel="noopener">请戳</a></p><h2 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h2><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><p>lanproxy依赖于java。服务端安装java通过包管理工具实现如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install default-jdk</span><br><span class="line"></span><br><span class="line">java --version</span><br><span class="line">openjdk 10.0.2 2018-07-17</span><br><span class="line">OpenJDK Runtime Environment (build 10.0.2+13-Ubuntu-1ubuntu0.18.04.4)</span><br><span class="line">OpenJDK 64-Bit Server VM (build 10.0.2+13-Ubuntu-1ubuntu0.18.04.4, mixed mode)</span><br></pre></td></tr></table></figure><h3 id="下载服务端"><a href="#下载服务端" class="headerlink" title="下载服务端"></a>下载服务端</h3><p>本文直接是先下载到自己电脑，然后上传至服务器，方式随意。下载地址<a href="https://github.com/ffay/lanproxy/releases" target="_blank" rel="noopener">请戳</a></p><p>上传通过sftp</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sftp -i identify_file -P port user@host</span><br><span class="line">....</span><br><span class="line">&gt; put local_file remote_host_directory  <span class="comment">#上传至远程目录</span></span><br><span class="line">....</span><br><span class="line">退出sftp程序</span><br></pre></td></tr></table></figure><h3 id="服务端配置"><a href="#服务端配置" class="headerlink" title="服务端配置"></a>服务端配置</h3><p>登录远程主机，将程序包解压，把程序文件移动到你想要放置的路径如/usr/bin/</p><blockquote><p>/usr/bin/proxy-server  </p></blockquote><p>大概以上路径。</p><p>配置文件在程序的config目录下，名字为：config.properties</p><p>内容如下：</p><blockquote><p>server.bind=0.0.0.0<br>server.port=4900</p><p>server.ssl.enable=true<br>server.ssl.bind=0.0.0.0<br>server.ssl.port=4993<br>server.ssl.jksPath=test.jks<br>server.ssl.keyStorePassword=123456<br>server.ssl.keyManagerPassword=123456<br>server.ssl.needsClientAuth=false  </p><p>config.server.bind=0.0.0.0<br>config.server.port=8090<br>config.admin.username=admin<br>config.admin.password=admin  </p></blockquote><p>按需要更改。</p><h3 id="防火墙放通端口"><a href="#防火墙放通端口" class="headerlink" title="防火墙放通端口"></a>防火墙放通端口</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo ufw allow 8090/tcp </span><br><span class="line">sudo ufw reload</span><br></pre></td></tr></table></figure><h3 id="服务器测试"><a href="#服务器测试" class="headerlink" title="服务器测试"></a>服务器测试</h3><p>运行服务端，启动程序脚本在程序目录bin文件夹下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ./startup.sh</span><br></pre></td></tr></table></figure><p>打开IP:8090。程序运行。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Ubuntu-18-04-安装-lanproxy&quot;&gt;&lt;a href=&quot;#Ubuntu-18-04-安装-lanproxy&quot; class=&quot;headerlink&quot; title=&quot;Ubuntu 18.04 安装 lanproxy&quot;&gt;&lt;/a&gt;Ubuntu 18.04 安
      
    
    </summary>
    
    
      <category term="linux" scheme="https://ywmy210.github.io/ywmy/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>ubuntu 18.04 安装wireshark</title>
    <link href="https://ywmy210.github.io/ywmy/2019/04/11/ubuntu-18-04-%E5%AE%89%E8%A3%85wireshark/"/>
    <id>https://ywmy210.github.io/ywmy/2019/04/11/ubuntu-18-04-安装wireshark/</id>
    <published>2019-04-11T05:24:21.000Z</published>
    <updated>2019-04-11T05:34:57.568Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Ubuntu-18-04-安装-wireshark"><a href="#Ubuntu-18-04-安装-wireshark" class="headerlink" title="Ubuntu 18.04 安装 wireshark"></a>Ubuntu 18.04 安装 wireshark</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install wireshark wireshark-common</span><br></pre></td></tr></table></figure><h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>非root用户下的wireshark没有抓包权限</p><h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><ol><li>以root用户运行</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo wireshark</span><br></pre></td></tr></table></figure><ol start="2"><li>配置非root用户抓包</li></ol><p>安装完成后，wireshark文档中有相应的处理方法。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gzip -d /usr/share/doc/wireshark-common/README.Debian.gz</span><br></pre></td></tr></table></figure><p>解压文档后，可以参考操作方法如下：</p><blockquote><p> sudo usermod -a -G wireshark {username}</p></blockquote><p>或者</p><blockquote><p>sudo gpasswd -a your_name wireshark  </p></blockquote><p>重新配置抓取权限</p><blockquote><p>sudo dpkg-reconfigure wireshark-common<br>“Should non-superusers be able to capture packages?”<br>选择yes(默认是no)</p></blockquote><p>注销用户或重启，再次打开wireshark，正常选取网卡列表。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Ubuntu-18-04-安装-wireshark&quot;&gt;&lt;a href=&quot;#Ubuntu-18-04-安装-wireshark&quot; class=&quot;headerlink&quot; title=&quot;Ubuntu 18.04 安装 wireshark&quot;&gt;&lt;/a&gt;Ubuntu 18.0
      
    
    </summary>
    
    
      <category term="linux" scheme="https://ywmy210.github.io/ywmy/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>华为交换机清除console密码</title>
    <link href="https://ywmy210.github.io/ywmy/2019/04/11/%E5%8D%8E%E4%B8%BA%E4%BA%A4%E6%8D%A2%E6%9C%BA%E6%B8%85%E9%99%A4console%E5%AF%86%E7%A0%81/"/>
    <id>https://ywmy210.github.io/ywmy/2019/04/11/华为交换机清除console密码/</id>
    <published>2019-04-11T01:14:56.000Z</published>
    <updated>2019-04-11T04:59:33.949Z</updated>
    
    <content type="html"><![CDATA[<h1 id="华为交换机清除console密码"><a href="#华为交换机清除console密码" class="headerlink" title="华为交换机清除console密码"></a>华为交换机清除console密码</h1><p>昨天下午在准备查看一台交换机配置的时候，发现原来给的登录信息已经不正确了。就想着用console登录试试，发现console登录也设置了用户名和密码，于是只能想到通过启动菜单来尝试清除密码了。</p><p>操作如下：</p><h2 id="启动菜单默认密码"><a href="#启动菜单默认密码" class="headerlink" title="启动菜单默认密码"></a>启动菜单默认密码</h2><ul><li>Console/telnet登录(框式/盒式)</li></ul><table><thead><tr><th>版本</th><th>缺省用户名</th><th>缺省密码</th><th>缺省级别</th></tr></thead><tbody><tr><td>V1R3C00</td><td>N/A</td><td>N/A</td><td>N/A</td></tr><tr><td>V1R5C01</td><td>N/A</td><td>N/A</td><td>N/A</td></tr><tr><td>V1R6C00－V1R6C05</td><td>N/A</td><td>N/A</td><td>N/A</td></tr><tr><td>V2R2C00－V2R6C00</td><td>N/A</td><td>N/A</td><td>N/A</td></tr></tbody></table><ul><li>Web登录(框式/盒式)</li></ul><table><thead><tr><th>版本</th><th>缺省用户名</th><th>缺省密码</th><th>缺省级别</th></tr></thead><tbody><tr><td>V1R3C00</td><td>admin</td><td>admin</td><td>0</td></tr><tr><td>V1R5C01</td><td>admin</td><td>admin</td><td>0</td></tr><tr><td>V1R6C00</td><td>admin</td><td>admin</td><td>0</td></tr><tr><td>V1R6C05</td><td>admin</td><td><a href="mailto:admin@huawei.com" target="_blank" rel="noopener">admin@huawei.com</a></td><td>0</td></tr><tr><td>V2R1C00</td><td>admin</td><td>admin</td><td>0</td></tr><tr><td>V2R3C00-V2R6C00</td><td>admin</td><td><a href="mailto:admin@huawei.com" target="_blank" rel="noopener">admin@huawei.com</a></td><td>0</td></tr></tbody></table><ul><li>BootROM(框式/盒式)</li></ul><table><thead><tr><th>版本</th><th>缺省用户名</th><th>缺省密码</th><th>缺省级别</th></tr></thead><tbody><tr><td>V1R3C00</td><td>N/A</td><td>9300</td><td>无</td></tr><tr><td>V1R5C01</td><td>N/A</td><td>huawei</td><td>无</td></tr><tr><td>V1R6C00</td><td>N/A</td><td>9300(框式)</td><td>无</td></tr><tr><td>V1R6C00</td><td>N/A</td><td>huawei(盒式)</td><td>无</td></tr></tbody></table><h2 id="恢复console密码"><a href="#恢复console密码" class="headerlink" title="恢复console密码"></a>恢复console密码</h2><ol><li>设备断电</li><li>重新加电</li><li>电脑连CONSOLE口</li><li><p>按CTRL＋B键加载BOOT MENU<br>加载图如下：</p><p><img src="http://blog.ywmy.xyz/network/huawei_boot_menu.png" alt="huawei_boot_memu"></p></li><li><p>清除console密码</p><p> 加载图如下：</p><p> <img src="http://blog.ywmy.xyz/network/clean_password_for_console_user.png" alt="clean_passwrod_for_console_user"></p></li><li><p>恢复默认启动项</p><p>加载图如下：</p><p><img src="http://blog.ywmy.xyz/network/boot_with_default_mode.png" alt="boot_with_default_mode"></p></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;华为交换机清除console密码&quot;&gt;&lt;a href=&quot;#华为交换机清除console密码&quot; class=&quot;headerlink&quot; title=&quot;华为交换机清除console密码&quot;&gt;&lt;/a&gt;华为交换机清除console密码&lt;/h1&gt;&lt;p&gt;昨天下午在准备查看一台交换机
      
    
    </summary>
    
    
      <category term="network" scheme="https://ywmy210.github.io/ywmy/tags/network/"/>
    
  </entry>
  
  <entry>
    <title>CentOS 环境变量配置错误</title>
    <link href="https://ywmy210.github.io/ywmy/2019/04/09/CentOS-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE%E9%94%99%E8%AF%AF/"/>
    <id>https://ywmy210.github.io/ywmy/2019/04/09/CentOS-环境变量配置错误/</id>
    <published>2019-04-09T02:28:32.000Z</published>
    <updated>2019-04-09T02:38:56.629Z</updated>
    
    <content type="html"><![CDATA[<h1 id="CentOS-环境变量配置错误"><a href="#CentOS-环境变量配置错误" class="headerlink" title="CentOS 环境变量配置错误"></a>CentOS 环境变量配置错误</h1><p>今天在配置Maven时，写入一条环境变量，在重新应用环境变量后，发现只有cd命令可以用了。其它命令都不可用。解决办法如下：</p><h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/sudo /bin/vim /etc/profile</span><br></pre></td></tr></table></figure><p>把之前配置的环境变量删除</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/bin/sudo reboot</span><br></pre></td></tr></table></figure><p>重启服务器，重启后，应用新的环境变量。命令正常使用。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;CentOS-环境变量配置错误&quot;&gt;&lt;a href=&quot;#CentOS-环境变量配置错误&quot; class=&quot;headerlink&quot; title=&quot;CentOS 环境变量配置错误&quot;&gt;&lt;/a&gt;CentOS 环境变量配置错误&lt;/h1&gt;&lt;p&gt;今天在配置Maven时，写入一条环境
      
    
    </summary>
    
    
      <category term="linux" scheme="https://ywmy210.github.io/ywmy/tags/linux/"/>
    
  </entry>
  
</feed>
