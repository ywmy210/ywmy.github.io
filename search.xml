<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>C 语言数的表示（一）</title>
    <url>/2019/03/02/C-%E8%AF%AD%E8%A8%80%E6%95%B0%E7%9A%84%E8%A1%A8%E7%A4%BA%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    <content><![CDATA[<h2 id="c语言整数表示"><a href="#c语言整数表示" class="headerlink" title="c语言整数表示"></a>c语言整数表示</h2><p>写文章的目的在于整理c语言整数溢出时出现的知识。</p>
<h2 id="数据类型与表示方法"><a href="#数据类型与表示方法" class="headerlink" title="数据类型与表示方法"></a>数据类型与表示方法</h2><p>c语言中基本数据类型的表示有整型和浮点型，整型有short，int，long，还有一个修饰词，unsigned，即无符号。声明一个变量，即向内存申请一段数据类型相对应的存储地址，申请的变量类型及分配的内存大小，可以通过sizeof函数来得出。输出结果如下列表所示：</p>
<blockquote>
<p>Type short has a size of 2 bytes.<br>Type int has a size of 4 bytes.<br>Type long has a size of 8 bytes.<br>Type float has a size of 4 bytes.<br>Type double has a size of 8 bytes.<br>Type long long has size of 8 bytes  </p>
</blockquote>
<p>由此可看到各个不同类型数在系统申请内存的字节数。内存中存储的二进制值为机器数，其通过表示方法对应为十进制的真值。</p>
<h2 id="机器数和真值"><a href="#机器数和真值" class="headerlink" title="机器数和真值"></a>机器数和真值</h2><p>机器数和真值，在上面所列出的数据类型中，如short类，在内存申请的存储空间为2字节，即16bit位。在表示中，高位为符号位，0为正数，1为负数。</p>
<p>假定8位表示一个数，如数字7，为正数，转换为二进制为00000111，如果是-3，负数首位为1，转换为二进制为10000111。</p>
<p>如上3，－3为真值，00000111／10000111为其对应的机器数。</p>
<h2 id="原码、反码、补码"><a href="#原码、反码、补码" class="headerlink" title="原码、反码、补码"></a>原码、反码、补码</h2><h3 id="原码"><a href="#原码" class="headerlink" title="原码"></a>原码</h3><p>原码为符号位＋真值的绝对值，如[+1]原＝00000001，[-1]原＝10000001，则8位二进制原码取值范围为：[11111111-011111111]，即[-127~+127]。</p>
<h3 id="反码"><a href="#反码" class="headerlink" title="反码"></a>反码</h3><p>反码为正数的反码为其原码，负数的反码为在其原码的基础上，符号位不变，其余位依次取反。如[+1]反＝00000001，[-1]反＝11111110。</p>
<h3 id="补码"><a href="#补码" class="headerlink" title="补码"></a>补码</h3><p>正数的被码为其原码，负数的补码为反码＋1，如[+1]补＝00000001，[-1]补＝11111111。</p>
<h3 id="采用不同编码方式的原因"><a href="#采用不同编码方式的原因" class="headerlink" title="采用不同编码方式的原因"></a>采用不同编码方式的原因</h3><p>计算机中，因保持电路简单的设计，计算机只能执行简单的加法运算，减法运算，可以让参数符号位参与运算，即＋负数。</p>
<p>如上描述中，计算1－1＝0，对应的机器数原码操作为：</p>
<p>[00000001]原+[10000001]原=[10000010]原＝[－2]真，对应的真值为－2。即参与负数计算的真值中不正确的。</p>
<p>如使用反码参与减法计算，1-1则对应的机器数反码操作为：</p>
<p>[00000001]反＋[11111110]反＝[11111111]反＝[10000000]原＝[－0]真，让符号位参与运算，得到为－0的真值，即反码操作中，存在一个为－0的问题，－0是没有意义的，而原码和反码本身即都存在±0的表示。</p>
<p>为了解决±0的问题，即补码出现：</p>
<p>1－1＝1＋（－1）=》[00000001]原＋[10000001]原＝》[00000001]补+[11111111]补＝》[00000000]补=[00000000]原=[0]真。</p>
<p>即[00000000]表示0，同时可以使用[10000000]表示[-128]</p>
<p>即[-1]+[-127]=》[10000001]原＋[111111111]原=》[11111111]补＋[10000001]补=》[10000000]原。即使用-0的原码表示-128的补码。</p>
<p>实际-128没有原码和反码的对应值，使用补码不仅修复了原码和反码中存在0和计算的问题，还可以多使用一个低位数值，8位原码和反码的表示范围为[-127<del>+127]，补码的表示范围为[-128</del>+128]。</p>
<p>即采用补码计算中，数值的取值范围为[-2^(n-1)~2^(n-1)-1]。(n为位数)</p>
]]></content>
      <tags>
        <tag>code</tag>
      </tags>
  </entry>
  <entry>
    <title>C 语言数的表示（二）</title>
    <url>/2019/03/04/C-%E8%AF%AD%E8%A8%80%E6%95%B0%E7%9A%84%E8%A1%A8%E7%A4%BA%EF%BC%88%E4%BA%8C%EF%BC%89/</url>
    <content><![CDATA[<h2 id="C语言小数的表示"><a href="#C语言小数的表示" class="headerlink" title="C语言小数的表示"></a>C语言小数的表示</h2><h2 id="十进制与二进制的转换"><a href="#十进制与二进制的转换" class="headerlink" title="十进制与二进制的转换"></a>十进制与二进制的转换</h2><p>先记工式，任意一个二进制浮点数V可以表示成下面的形式；</p>
<p>V = (-1)^s<em>M</em>2^E</p>
<ol>
<li><p>(-1)^s表示符号位，当s=0时，V为正数，当s=1时，V为负数。</p>
</li>
<li><p>M表示有效数字，大于等于1，小于2。</p>
</li>
<li><p>2^E表示指数位。</p>
</li>
</ol>
<p>举例说明，十进制的5.0，写成二进制是101.0，相当于-1.01*2^2，那么，s=1，M=1.01，E＝2。</p>
<p>32位浮点数，最高1位是符号位S，接着8位是指数E，剩下23位为有效数字M。</p>
<p>64位浮点数，最高1位是符号位S，接着11位是指数E，剩下52位为有效数字M。</p>
<p>IEEE 754对有效数字M和指数E还有一些特别的规定：</p>
<h3 id="对于有效数字M"><a href="#对于有效数字M" class="headerlink" title="对于有效数字M"></a>对于有效数字M</h3><p>1&lt;=M&lt;2，也就是说M可以写成1.XXXX的形式，其中XXXX表示小数部分。在计算机内部保存M时，默认这个数的第一位总是1，因此可以被舍去，只保存后面的XXXX部分。比如保存1.01的时候，只存在01，等到读取的时候，再把第一位的1加上去。这样的目的，是节省1位有效数字。以32位浮点数为例留给M只有23位，将第1位舍去以后，等于可以保存24位有效数字。</p>
<h3 id="对于指数E"><a href="#对于指数E" class="headerlink" title="对于指数E"></a>对于指数E</h3><p>首先，E为一个无符号数(unsignedint)，如果E为8位，它的取值范围为[0,255]；如果E为11位，它的取值范围为[0,2047]。但是，我们知道，科学计数法中E是可以出负数的，所以IEEE 754规定，E的真实值必须再减去一个中间数，对于8位的E，这个中间数是127，对于11位的E，这个中间数是1023。</p>
<p>E－中间数得到的值即为指数领衔值(exponent bias),是指浮点数表示法中的指数域的编码值为实际值加上某个固定值，IEEE 754规定该固定值为2^(e-1)-1，其中e为存储指数的比特的长度。</p>
<p>比如2^10的E是10，保存的成32位的浮点数时，必须保存成10＋127＝137，即10001001。</p>
<p>采用指数的实际值加上固定领衔值的办法表示浮点数的指数，好处是可以用长度为e个比特的无符号数表示所有的指数取值，这使得两个浮点数的指数大小的比较更为容易，实际上可以按照字典充比较两个浮点数的大小，这种移码表示指数部分，中文称为阶码。</p>
<p>以单精度型阶码表示示例如下：</p>
<h4 id="例1"><a href="#例1" class="headerlink" title="例1"></a>例1</h4><p>如果我们要表示0，则有0＋127＝127，二进制表示为：0000 0000＋0111 1111＝0111 1111；</p>
<h4 id="例2"><a href="#例2" class="headerlink" title="例2"></a>例2</h4><p>如果我们要表示1，则有1＋127＝128，二进制表示为：0000 0001＋0111 1111＝1000 0000；</p>
<h4 id="例3"><a href="#例3" class="headerlink" title="例3"></a>例3</h4><p>如果我们要表示2，则有2＋127＝129，二进制表示为：0000 0010＋0111 1111＝1000 0001；</p>
<h4 id="例4"><a href="#例4" class="headerlink" title="例4"></a>例4</h4><p>如果我们要表示128，则有128＋127＝255，二进制表示为：1000 0000＋0111 1111＝1111 1111；</p>
<p>移码128即为8位二进制移位存储表示的最大正数。</p>
<p>我们再来看一下负数：</p>
<h4 id="例5"><a href="#例5" class="headerlink" title="例5"></a>例5</h4><p>如果我们要表示－1，则有－1＋127＝126，二进制表示为</p>
<p>然后，指数E还分三种情况：</p>
<ol>
<li><p>E不全为0或不全为1时，浮点数就彩上面的规则表示，即指数E的计算值减去127(或1023)，得到真实值，再奖有效数字M前加上第一位的1。</p>
</li>
<li><p>E全为0时，浮点数的指数E等于1－127(1-1023)，有效数字M不再加上第一位的1，而是还为0.XXXX的小数，这样作是为了表示±0，以及接近0的很小的数值。</p>
</li>
<li><p>E全为1时，如果有效数字M全为0，表示±无穷大(正负取决于符号s)；如果有效数字M不全为0，表示这个数不是一个数(NaN)。</p>
</li>
</ol>
]]></content>
      <tags>
        <tag>code</tag>
      </tags>
  </entry>
  <entry>
    <title>CentOS 环境变量配置错误</title>
    <url>/2019/04/09/CentOS-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E9%85%8D%E7%BD%AE%E9%94%99%E8%AF%AF/</url>
    <content><![CDATA[<h2 id="CentOS-环境变量配置错误"><a href="#CentOS-环境变量配置错误" class="headerlink" title="CentOS 环境变量配置错误"></a>CentOS 环境变量配置错误</h2><p>今天在配置Maven时，写入一条环境变量，在重新应用环境变量后，发现只有cd命令可以用了。其它命令都不可用。解决办法如下：</p>
<h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/bin/sudo /bin/vim /etc/profile</span><br></pre></td></tr></table></figure>
<p>把之前配置的环境变量删除</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/bin/sudo reboot</span><br></pre></td></tr></table></figure>
<p>重启服务器，重启后，应用新的环境变量。命令正常使用。</p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>GNS3添加网络设备</title>
    <url>/2019/05/14/GNS3%E6%B7%BB%E5%8A%A0%E7%BD%91%E7%BB%9C%E8%AE%BE%E5%A4%87/</url>
    <content><![CDATA[<h2 id="GNS3添加网络设备"><a href="#GNS3添加网络设备" class="headerlink" title="GNS3添加网络设备"></a>GNS3添加网络设备</h2><h3 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h3><ul>
<li><p>系统：ubuntu 18.04.2 LTS(Linux 4.15.0-48-generic #51-Ubuntu SMP Wed Apr 3 08:28:49 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux<br>)</p>
</li>
<li><p>GNS3 2.1.16</p>
</li>
<li><p>虚拟机virtualbox 6.0.4 r128413</p>
</li>
</ul>
<h3 id="GNS3安装"><a href="#GNS3安装" class="headerlink" title="GNS3安装"></a>GNS3安装</h3><p>ubuntu 直接添加PPA源安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:gns3/ppa</span><br><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get install gns3-gui</span><br></pre></td></tr></table></figure>
<p>安装结束后，会出现关于dynamips报错。解决办法：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo add-apt-repository ppa:gns3/ppa</span><br><span class="line">sudo dpkg --add-architecture i386</span><br><span class="line">sudo apt update</span><br><span class="line">sudo apt install dynamips:i386</span><br></pre></td></tr></table></figure>
<p>启动后，出现配置向导。</p>
<h3 id="添加设备"><a href="#添加设备" class="headerlink" title="添加设备"></a>添加设备</h3><p>添加模拟的设备可以通过本地的server，GNS3 VM来完成。</p>
<p>本地的server中的Dynamips中添加设备。</p>
<p>[edit]-&gt;[Preferences]-&gt;[Dynamips]-&gt;[IOS routers]</p>
<p>添加的设备即直接通过本地电脑的Dynapips来模拟。</p>
<h3 id="添加IOU"><a href="#添加IOU" class="headerlink" title="添加IOU"></a>添加IOU</h3><p>添加GNS3 VM设备，需要先导入GNS3 VM虚拟机。从官网下载GNS3 VM，如本文所示，选择virtualbox版本。</p>
<p>下载后，选择导入虚拟机，打开virtualbox，操作如下：</p>
<p>[管理]-&gt;[导入虚拟电脑]-&gt;[选择下载的GNS VM文件]-&gt;[点击导入]</p>
<p>导入后，在GNS3中选择GNS3 VM。操作如下：</p>
<p>[edit]-&gt;[Preferences]-&gt;[GNS3 VM]-&gt;[enable GNS3 VM]-&gt;[select Virtualizatiom engine Virtualbox]-&gt;[Settings]-&gt;[select imported VM named GNS3 VM]-&gt;[Apply setting]-&gt;[OK]</p>
<p>选择启动GNS3 VM，选择虚拟化引擎，选择导入的GNS3 VM。</p>
<p>尝试启动GNS3 VM，启动后直接报错，vboxnet0相关，无法启动GNS3 VM。</p>
<p>解决办法，添加网络vboxnet0。操作步骤：</p>
<p>[管理]-&gt;[主机网络管理器]-&gt;[网络]-&gt;[创建]</p>
<p>默认创建的网络就是vboxnet0。其余选项保持默认不变，启用DHCP服务。</p>
<p>再次打开GNS3 VM，正常启动。</p>
<p>解决GNS3 VM启动问题后，即可添加IOU（IOS ON UNIX）。</p>
<p>操作步骤：</p>
<p>[edit]-&gt;[Preferences]-&gt;[IOS on UNIX]-&gt;[type the license key]</p>
<p>添加IOU需要cisco的许可密钥，本例中的许可密码如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[license]</span><br><span class="line">gns3vm = 73635fd3b0a13ad0;</span><br></pre></td></tr></table></figure>
<p>许可密码可以通过以下方式生成：</p>
<ol>
<li><p>打开GNS3 VM，选择Shell菜单</p>
</li>
<li><p>下载生成脚本,并生成license:</p>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://www.ipvanquish.com/download/CiscoIOUKeygen3f.py</span><br><span class="line">python3 CiscoIOUKeygen3f.py</span><br></pre></td></tr></table></figure>
<p>生成的文件为.iourc。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Already copy to the file iourc.txt</span><br><span class="line"></span><br><span class="line">You can <span class="built_in">disable</span> the phone home feature with something like:</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;127.0.0.127 xml.cisco.com&#x27;</span> &gt;&gt; /etc/hosts</span><br></pre></td></tr></table></figure>
<p>把生成的GNS VM license添加到IOU on UNIX中，后，即可添加IOU设备。</p>
<p>操作方法：</p>
<p>[edit]-&gt;[Preferenses]-&gt;[IOS on UNIX]-&gt;[IOU devices]-&gt;[new]</p>
<p>添加IOU镜像，添加后，即可直接通过VM来运行l2 switch l3 router设备。</p>
<p>IOU和.iourc文件在哪里找，可以度之。</p>
<p>license gen直接给脚本吧：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="meta">#! /usr/bin/python3</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;*********************************************************************&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;Cisco IOU License Generator - Kal 2011, python port of 2006 C version&quot;</span>)</span><br><span class="line">import os</span><br><span class="line">import socket</span><br><span class="line">import hashlib</span><br><span class="line">import struct</span><br><span class="line"><span class="comment"># get the host id and host name to calculate the hostkey</span></span><br><span class="line">hostid=os.popen(<span class="string">&quot;hostid&quot;</span>).<span class="built_in">read</span>().strip()</span><br><span class="line">hostname = socket.gethostname()</span><br><span class="line">ioukey=int(hostid,16)</span><br><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> hostname:</span><br><span class="line"> ioukey = ioukey + ord(x)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;hostid=&quot;</span> + hostid +<span class="string">&quot;, hostname=&quot;</span>+ hostname + <span class="string">&quot;, ioukey=&quot;</span> + hex(ioukey)[2:])</span><br><span class="line"><span class="comment"># create the license using md5sum</span></span><br><span class="line">iouPad1 = b<span class="string">&#x27;\x4B\x58\x21\x81\x56\x7B\x0D\xF3\x21\x43\x9B\x7E\xAC\x1D\xE6\x8A&#x27;</span></span><br><span class="line">iouPad2 = b<span class="string">&#x27;\x80&#x27;</span> + 39*b<span class="string">&#x27;\0&#x27;</span></span><br><span class="line">md5input=iouPad1 + iouPad2 + struct.pack(<span class="string">&#x27;!i&#x27;</span>, ioukey) + iouPad1</span><br><span class="line">iouLicense=hashlib.md5(md5input).hexdigest()[:16]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;\nAdd the following text to ~/.iourc:&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;[license]\n&quot;</span> + hostname + <span class="string">&quot; = &quot;</span> + iouLicense + <span class="string">&quot;;\n&quot;</span>)</span><br><span class="line">with open(<span class="string">&quot;iourc.txt&quot;</span>, <span class="string">&quot;wt&quot;</span>) as out_file:</span><br><span class="line">   out_file.write(<span class="string">&quot;[license]\n&quot;</span> + hostname + <span class="string">&quot; = &quot;</span> + iouLicense + <span class="string">&quot;;\n&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nAlready copy to the file iourc.txt\n &quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;You can disable the phone home feature with something like:&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot; echo &#x27;127.0.0.127 xml.cisco.com&#x27; &gt;&gt; /etc/hosts\n&quot;</span>)</span><br></pre></td></tr></table></figure>
<p>好了，操作记录补充结束。</p>
]]></content>
      <tags>
        <tag>network</tag>
      </tags>
  </entry>
  <entry>
    <title>H3C MSR 3640配置</title>
    <url>/2018/08/12/H3C-MSR-3640%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h1 id="H3C-MSR-路由器操作小记"><a href="#H3C-MSR-路由器操作小记" class="headerlink" title="H3C MSR 路由器操作小记"></a>H3C MSR 路由器操作小记</h1><h2 id="0x001-系统信息及升级"><a href="#0x001-系统信息及升级" class="headerlink" title="0x001:系统信息及升级"></a>0x001:系统信息及升级</h2><h3 id="查看硬件信息"><a href="#查看硬件信息" class="headerlink" title="查看硬件信息"></a>查看硬件信息</h3><p>console口登录设备</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;XH-route&gt;display device manuinfo</span><br><span class="line"> Slot 0:</span><br><span class="line">DEVICE_NAME          : MSR 36-40</span><br><span class="line">DEVICE_SERIAL_NUMBER : 210235A0W8B166000422</span><br><span class="line">MAC_ADDRESS          : 84D9-31DE-01FD</span><br><span class="line">MANUFACTURING_DATE   : 2016-06-24</span><br><span class="line">VENDOR_NAME          : H3C</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="更改设备名称"><a href="#更改设备名称" class="headerlink" title="更改设备名称"></a>更改设备名称</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;XH-route&gt;system-view</span><br><span class="line">System View: return to User View with Ctrl+Z.</span><br><span class="line">[XH-route]sysname XH-route</span><br></pre></td></tr></table></figure>
<h3 id="重置设备"><a href="#重置设备" class="headerlink" title="重置设备"></a>重置设备</h3><p>退出特权模式</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;XH-route&gt;restore factory-default</span><br></pre></td></tr></table></figure>
<h3 id="固件升级"><a href="#固件升级" class="headerlink" title="固件升级"></a>固件升级</h3><p>固件升级所需要的文件，可以通过h3c售后服务提供h3c设备序列号以设备信息由于h3c售后提供下载链接。同意下载许可后，将新的版本文件通过tftp服务上传至路由器设备。并将新的固件设定为下一次启动的默认启动项。</p>
<h4 id="tftp服务"><a href="#tftp服务" class="headerlink" title="tftp服务"></a>tftp服务</h4><p>在电脑上安装tfpt服务器软件，可以使用一个小巧简单的服务器软件<a href="http://tftpd32.jounin.net/tftpd32_download.html">tftp32</a>。选择对应的系统版本和下载方式。安装结束后，运行tfpt32程序，设定tfpt服务器的目录，即已经下载的固件目录。如图所示：</p>
<p><img src="https://blog.ywmy.xyz/tftp.jpg" alt="tfpt设定">。</p>
<p>通过tfpt将固件上传到路由器目录下，操作在路由器上完成。命令如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;route&gt;tftp tftp-ip get 固件文件名</span><br></pre></td></tr></table></figure>
<p>操作如下图所示：</p>
<p><img src="https://blog.ywmy.xyz/ywmy/networktfpt_upload.png" alt="上传固件">。</p>
<p>上传固件名称为MSR36-CMW710-RO615P13.IPE。</p>
<p>上传结束后，通过命令可以查看上传固件的目录及目录下的文件，上传前也可以查看设备剩余存储空间是否满足固件大小。操作如下图所示：</p>
<p><img src="https://blog.ywmy.xyz/ywmy/network_dir.png" alt="查看目录内容">。</p>
<p>设定启动固件为新上传的固件。操作如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;route&gt;boot-loader file cfa0:&#x2F;MSR36-CMW710-R0615P13.IPE main</span><br></pre></td></tr></table></figure>
<p><img src="https://blog.ywmy.xyz/ywmy/network_upgrade_commit.png" alt="设定启动项">。</p>
<p>确认启动项的信息，并提交确认，重新启动设备。</p>
<p><img src="https://blog.ywmy.xyz/ywmy/network_set_bootup_version.png" alt="砍提交信息">。</p>
<p>重启后，新的固件生效。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;route&gt;reboot</span><br></pre></td></tr></table></figure>
<h2 id="0x002-基本配置"><a href="#0x002-基本配置" class="headerlink" title="0x002:基本配置"></a>0x002:基本配置</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;XH-route&gt;system-view</span><br><span class="line">System View: return to User View with Ctrl+Z.</span><br><span class="line">[XH-route]local-user admin     #设定本地用户</span><br><span class="line">[XH-route-luser-manage-admin]password simple [password]     #设定密码</span><br><span class="line">[XH-route-luser-manage-admin]authorization-attribute user-role network-admin      #设定用户级别</span><br><span class="line">[XH-route-luser-manage-admin]server-type telnet https　　　　　#设定登录方式</span><br></pre></td></tr></table></figure>
<p>启用https登录，更改默认登录端口：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[XH-route]ip https enable    #启用https服务</span><br><span class="line">[XH-route]ip https port [number]　　　#更变https端口</span><br></pre></td></tr></table></figure>
<p>基本配置如下所示（固定ip上网＋nat端口映射）：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;XH-route&gt;display current-configuration</span><br><span class="line">#</span><br><span class="line"> version 7.1.064, Release 0615P13</span><br><span class="line">#</span><br><span class="line"> sysname XH-route</span><br><span class="line">#</span><br><span class="line"> telnet server enable</span><br><span class="line">#</span><br><span class="line">nat address-group 1</span><br><span class="line"> address 112.17.128.126 112.17.128.126</span><br><span class="line">#</span><br><span class="line"> password-recovery enable</span><br><span class="line">#</span><br><span class="line">vlan 1</span><br><span class="line">#</span><br><span class="line">dhcp server ip-pool test</span><br><span class="line"> gateway-list 172.16.100.1</span><br><span class="line"> network 172.16.100.0 mask 255.255.255.0</span><br><span class="line"> dns-list 211.140.13.18 211.140.188.188</span><br><span class="line">#</span><br><span class="line">controller Cellular0&#x2F;0</span><br><span class="line">#</span><br><span class="line">controller Cellular0&#x2F;1</span><br><span class="line">#</span><br><span class="line">interface Aux0</span><br><span class="line">#</span><br><span class="line">interface Virtual-Template0</span><br><span class="line">#</span><br><span class="line">interface NULL0</span><br><span class="line">#</span><br><span class="line">interface Vlan-interface1</span><br><span class="line">#</span><br><span class="line">interface GigabitEthernet0&#x2F;0</span><br><span class="line"> port link-mode route</span><br><span class="line"> combo enable copper</span><br><span class="line"> ip address 112.17.128.126 255.255.255.128</span><br><span class="line"> nat outbound 3000 address-group 1</span><br><span class="line"> nat server protocol tcp global 112.17.128.126 655 inside 172.16.60.200 655</span><br><span class="line"> nat server protocol tcp global 112.17.128.126 5100 5700 inside 172.16.60.200 5100 5700</span><br><span class="line">#</span><br><span class="line">interface GigabitEthernet0&#x2F;1</span><br><span class="line"> port link-mode route</span><br><span class="line"> combo enable copper</span><br><span class="line"> ip address 172.16.100.1 255.255.255.0</span><br><span class="line">#</span><br><span class="line">interface GigabitEthernet0&#x2F;2</span><br><span class="line"> port link-mode route</span><br><span class="line">#</span><br><span class="line"> scheduler logfile size 16</span><br><span class="line">#</span><br><span class="line">line class aux</span><br><span class="line"> user-role network-admin</span><br><span class="line">#</span><br><span class="line">line class tty</span><br><span class="line"> user-role network-operator</span><br><span class="line">#</span><br><span class="line">line class vty</span><br><span class="line"> user-role network-operator</span><br><span class="line">#</span><br><span class="line">line aux 0</span><br><span class="line"> user-role network-admin</span><br><span class="line">#</span><br><span class="line">line vty 0 4</span><br><span class="line"> authentication-mode scheme</span><br><span class="line"> user-role network-operator</span><br><span class="line">#</span><br><span class="line">line vty 5 63</span><br><span class="line"> user-role network-operator</span><br><span class="line">#</span><br><span class="line"> ip route-static 0.0.0.0 0 112.17.128.1</span><br><span class="line"> ip route-static 172.16.60.0 24 172.16.100.100</span><br><span class="line"> ip route-static 192.168.35.0 24 172.16.100.100</span><br><span class="line">#</span><br><span class="line">acl advanced 3000</span><br><span class="line"> rule 0 permit ip</span><br><span class="line">#</span><br><span class="line">domain system</span><br><span class="line">#</span><br><span class="line"> domain default enable system</span><br><span class="line">#</span><br><span class="line">role name level-0</span><br><span class="line"> description Predefined level-0 role</span><br><span class="line">#</span><br><span class="line">role name level-1</span><br><span class="line"> description Predefined level-1 role</span><br><span class="line">#</span><br><span class="line">role name level-2</span><br><span class="line"> description Predefined level-2 role</span><br><span class="line">#</span><br><span class="line">role name level-3</span><br><span class="line"> description Predefined level-3 role</span><br><span class="line">#</span><br><span class="line">role name level-4</span><br><span class="line"> description Predefined level-4 role</span><br><span class="line">#</span><br><span class="line">role name level-5</span><br><span class="line"> description Predefined level-5 role</span><br><span class="line">#</span><br><span class="line">role name level-6</span><br><span class="line"> description Predefined level-6 role</span><br><span class="line">#</span><br><span class="line">role name level-7</span><br><span class="line"> description Predefined level-7 role</span><br><span class="line">#</span><br><span class="line">role name level-8</span><br><span class="line"> description Predefined level-8 role</span><br><span class="line">#</span><br><span class="line">role name level-9</span><br><span class="line"> description Predefined level-9 role</span><br><span class="line">#</span><br><span class="line">role name level-10</span><br><span class="line"> description Predefined level-10 role</span><br><span class="line">#</span><br><span class="line">role name level-11</span><br><span class="line"> description Predefined level-11 role</span><br><span class="line">#</span><br><span class="line">role name level-12</span><br><span class="line"> description Predefined level-12 role</span><br><span class="line">#</span><br><span class="line">role name level-13</span><br><span class="line"> description Predefined level-13 role</span><br><span class="line">#</span><br><span class="line">role name level-14</span><br><span class="line"> description Predefined level-14 role</span><br><span class="line">#</span><br><span class="line">user-group system</span><br><span class="line">#</span><br><span class="line">local-user admin class manage</span><br><span class="line"> password hash $h$6$imclxi6OjTWpT1cz$bFZaC5tFEwAq2RSrsHrdtzzYy3GrpqnPqcFcaWe&#x2F;iYO4JlF6LgJp7zWMUf6tQAZdd4o8xLQtfMvHhhgqkkSADQ&#x3D;&#x3D;</span><br><span class="line"> service-type telnet http https</span><br><span class="line"> authorization-attribute user-role network-admin</span><br><span class="line">#</span><br><span class="line">local-user test class manage</span><br><span class="line"> password hash $h$6$yYBLqOb6kZzPCsJG$05S4ylePhCojyow+&#x2F;HyG6wzxFkn9YI9PHEuRlHo82BDS7ZK7FL0uptb8ojicRVZ++lgYOQc2F+lN&#x2F;eO6jb7eWA&#x3D;&#x3D;</span><br><span class="line"> service-type http</span><br><span class="line"> authorization-attribute user-role network-operator</span><br><span class="line">#</span><br><span class="line"> ip https port [number]</span><br><span class="line"> ip http enable</span><br><span class="line"> ip https enable</span><br><span class="line">#</span><br><span class="line">wlan global-configuration</span><br><span class="line">#</span><br><span class="line">wlan ap-group default-group</span><br><span class="line">#</span><br><span class="line">return</span><br><span class="line"></span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>network</tag>
      </tags>
  </entry>
  <entry>
    <title>H3C SNMP配置举例</title>
    <url>/2018/12/27/H3C-SNMP%E9%85%8D%E7%BD%AE%E4%B8%BE%E4%BE%8B/</url>
    <content><![CDATA[<h1 id="配置举例"><a href="#配置举例" class="headerlink" title="配置举例"></a>配置举例</h1><p>基于H3C V7版本，举例包含SNMP V2。</p>
<h2 id="组网需求"><a href="#组网需求" class="headerlink" title="组网需求"></a>组网需求</h2><p><img src="https://blog.ywmy.xyz/network/network_topology.png" alt="network_topology"></p>
<h2 id="配置步骤"><a href="#配置步骤" class="headerlink" title="配置步骤"></a>配置步骤</h2><h3 id="snmp-v2c-agent"><a href="#snmp-v2c-agent" class="headerlink" title="snmp v2c agent"></a>snmp v2c agent</h3><ul>
<li>设置 Agent 使用的 SNMP 版本为 v2c、只读团体名为 readtest,读写团体名为 writetest。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;Agent&gt; system-view</span><br><span class="line">[Agent] snmp-agent sys-info version v2c</span><br><span class="line">[Agent] snmp-agent community <span class="built_in">read</span> readtest</span><br><span class="line">[Agent] snmp-agent community write writetest</span><br></pre></td></tr></table></figure>
<ul>
<li>设置设备的联系人和位置信息,以方便维护。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[Agent] snmp-agent sys-info contact Mr.Wang-Tel:3306</span><br><span class="line">[Agent] snmp-agent sys-info location telephone-closet,3rd-floor</span><br></pre></td></tr></table></figure>
<ul>
<li>设置允许向 NMS 发送告警信息,使用的团体名为 traptest。</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[Agent] snmp-agent <span class="built_in">trap</span> <span class="built_in">enable</span></span><br><span class="line">[Agent] snmp-agent target-host <span class="built_in">trap</span> address udp-domain 192.168.100.4 params securityname</span><br><span class="line">traptest</span><br></pre></td></tr></table></figure>
<h3 id="NMS-zabbix"><a href="#NMS-zabbix" class="headerlink" title="NMS zabbix"></a>NMS zabbix</h3><ul>
<li>添加设备</li>
</ul>
<p>登录zabbix后台 -&gt; Configuration -&gt; Hosts -&gt; Create host，操作如下图所示：</p>
<p><img src="https://blog.ywmy.xyz/network/hosts_list.png" alt="hosts_list"></p>
<p>点击创建后 -&gt; 输入监控设备相关的信息 -&gt; Host name -&gt; Visable name -&gt; Groups (选择已有的组或创建新的组) -&gt; 移除默认的Agent interface -&gt; 添加SNMP interface 勾选 Use bulk requests</p>
<p><img src="https://blog.ywmy.xyz/network/create_host.png" alt="create_host"></p>
<p>点击 Templates -&gt; 选择系统创建的SNMP模版 (zabbix内置了一些常用的模版，可以直接选择来使用)</p>
<p><img src="https://blog.ywmy.xyz/network/add_templates.png" alt="add_selected"></p>
<p>因默认模版中并未包含H3C相关的模版，所以，选用了通用的SNMP V2模版。</p>
<p><img src="https://blog.ywmy.xyz/template_selected.png" alt="template_selected"></p>
<p>最后点击add。完成添加主机，这时的主机监控也可能还不能用。取决于上例中Agent中community的设置，在默认的模版里，已经有对一些常用变量的，一些继承全局变量的值，需要在主机的宏变量中更改。</p>
<p>点击创建的主机 -&gt; Macros -&gt; Inherited and host macros -&gt; change -&gt; 输入设备上配置的名称 (建议只读共同体的值)</p>
<p><img src="https://blog.ywmy.xyz/network/Macros.png" alt="Macros"></p>
<p>更改完成后，可以看到已经添加的设备列表后面的SNMP标识已经变成绿色，说明监控模版已经在起作用。</p>
]]></content>
      <tags>
        <tag>network</tag>
      </tags>
  </entry>
  <entry>
    <title>HP DL380 G5安装centos 7</title>
    <url>/2018/11/27/HP-DL380-G5%E5%AE%89%E8%A3%85centos-7/</url>
    <content><![CDATA[<h1 id="背景"><a href="#背景" class="headerlink" title="背景"></a>背景</h1><p>公司有一台老旧的惠普服务器，三块盘做了RAID5，之前上面安装了一个windows系统。之前的规划中，起什么作用已经没人知道了，后面三块中的一块硬盘坏了，再后面开机都开了了，这台服务器就闲置了。最近自己刚好有点时间，去了下机房，看到那台未用的服务器，想着要不要这台旧服务器也能做点事情。于是就开始准备起来，试试看能不能让这台服务器运行起来。</p>
<hr>
<h2 id="step-one：开机检查"><a href="#step-one：开机检查" class="headerlink" title="step one：开机检查"></a>step one：开机检查</h2><p>要做的第一步自然是开机检查检查，还好，3块300GB的SAS硬盘，一块已经坏了，就直接取了下来，开机的时候，直接提示到硬盘错误，是否恢复或选择路过。因为坏的硬盘直接拿出来了，就不再想着恢复了，于是直接选择了重做RAID。</p>
<p>惠普的这台服务器中的RAID卡为smart array p400。参考下图所示：</p>
<p><img src="https://blog.ywmy.xyz/hp-raid-control.jpg" alt="P400"></p>
<p>在跳过恢复选项（F1／F2）后，按F8进入raid配置选项，默认有RAID 0，RAID 1＋0，RAID 5三个可选。还有块可用的盘，就直接将两块做了RAID 0，不浪费。</p>
<p>保存RAID配置后，听到两声蜂鸣声过后，可以先择F9进入BIOS设置。参考下图：</p>
<p><img src="https://blog.ywmy.xyz/hp-bios-setup.jpg" alt="BIOS"></p>
<p>可能是机器老旧的原因，这台服务器上的支持的启动项有限，光驱、软驱、硬盘和网络都有，就是没有看到USB支持的。尝试了一下，无论是自己用UTRLISO写入的硬盘镜像还是WINPE都无法引导。只能想想光驱的主意了，结果公司还没找到之前刻录的系统盘。最终把目光描准了自己的U盘，准备做个USB－CD量产。关于量产的细节，自己准备再补一篇，最终是成功量产了，也正常进入引导。好了，服务器检查、硬件及安装前的准备工作就已经都准备好了。引导如下图所示：</p>
<p><img src="https://blog.ywmy.xyz/install-centos.jpg" alt="bootup"></p>
<h2 id="step-two：系统安装"><a href="#step-two：系统安装" class="headerlink" title="step two：系统安装"></a>step two：系统安装</h2><p>正式从U盘引导启动后，就进入了熟悉的centos安装界面了，按提示操作，到了选择硬盘的时候，出现了一个问题，即安装系统中即认不到raid后的磁盘，也看到量产过后的U盘的信息，磁盘选择的地方是空的，没有可用的选择。这下好像是不是有些问题了？这台机器之前有安装过操作系统，那就一定是有办法的。想想，试着网上搜索了一下，发现这台服务器在安装centos 7的时候，确实会遇到这个问题，不过还好，有解决办法，解决办法参考<a href="https://tieba.baidu.com/p/5491102757?traceid=">链接</a>，问题的原因就是在raid上。</p>
<p>操作方法，进入install centos 界面后，近e键编辑引导基加入下面图像中画红线的竞价内容：</p>
<p><img src="https://blog.ywmy.xyz/edit-boot-configuration.jpg" alt="boot-conf"></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hpsa.hpsa_sample_mode=1 hpsa.hpsa_allow_anly=1</span><br></pre></td></tr></table></figure>
<p>注意与前面的配置内容之间的空格。</p>
<p>配置完成后按ctrl+x进入安装界面，如此可以选择服务器上的raid盘了。如下图所示：</p>
<p><img src="https://blog.ywmy.xyz/centos-select-disk.jpg" alt="select-disk"></p>
<p>接下来的操作就正常安装了，安装结束后，重启，把第一启动项改为本地磁盘（非必要）。改完后，发现仍然进入不了系统，原因如上面安装时一样。这时需要在启动选项的时候，按e，进入编辑模式，添加hpsa相关内容，如上图。配置结束后，按ctrl+x进入系统。</p>
<p>进入系统后，编辑grub文件，添加hpsa相关内容。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi /boot/grub2/grub.cfg</span><br><span class="line"><span class="comment"># 在LANG项的后面添加</span></span><br><span class="line">hpsa.hpsa_sample_mode=1 hpsa.hpsa_allow_anly=1</span><br></pre></td></tr></table></figure>
<p>保存配置文件，重启服务器，正常进入系统，如下图所示：</p>
<p><img src="https://blog.ywmy.xyz/boot-accessed.jpg" alt="boot-access"></p>
<p>至此安装结束！记录备忘！</p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>LVM 磁盘扩容</title>
    <url>/2018/12/04/LVM-%E7%A3%81%E7%9B%98%E6%89%A9%E5%AE%B9/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>之前给公司的同事配置了一台samba服务器，因为主要使用的是UI设计的同事，有大量的共享素材，磁盘很快的已经满了。前两天有同事来告知，映射的网络硬盘已经显示没有可用的空间了。想想那台主机里面的电源，应该可以再挂两个硬盘，于是，对磁盘扩容就玩起来了。</p>
<p>一张来来说明LVM管理：</p>
<p><img src="https://blog.ywmy.xyz/linux/LVM.png" alt="LVM"></p>
<hr>
<h2 id="添加硬盘"><a href="#添加硬盘" class="headerlink" title="添加硬盘"></a>添加硬盘</h2><p>关机，找到一块未用的硬笔，安装在主机里。</p>
<h2 id="查看硬盘使用情况"><a href="#查看硬盘使用情况" class="headerlink" title="查看硬盘使用情况"></a>查看硬盘使用情况</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">df -HT</span><br><span class="line">文件系统                类型      容量  已用  可用 已用% 挂载点</span><br><span class="line">/dev/mapper/centos-root xfs        54G  1.6G   53G    3% /</span><br><span class="line">devtmpfs                devtmpfs  2.0G     0  2.0G    0% /dev</span><br><span class="line">tmpfs                   tmpfs     2.0G     0  2.0G    0% /dev/shm</span><br><span class="line">tmpfs                   tmpfs     2.0G  9.2M  2.0G    1% /run</span><br><span class="line">tmpfs                   tmpfs     2.0G     0  2.0G    0% /sys/fs/cgroup</span><br><span class="line">/dev/sda1               xfs       518M  228M  290M   44% /boot</span><br><span class="line">/dev/mapper/centos-home xfs       942G  933G  9.1G  100% /home   //这里是重点，已经满了</span><br><span class="line">tmpfs                   tmpfs     398M     0  398M    0% /run/user/0</span><br></pre></td></tr></table></figure>
<h2 id="创建分区"><a href="#创建分区" class="headerlink" title="创建分区"></a>创建分区</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@server ~]<span class="comment"># fdisk /dev/sdb</span></span><br><span class="line">欢迎使用 fdisk (util-linux 2.23.2)。</span><br><span class="line"></span><br><span class="line">更改将停留在内存中，直到您决定将更改写入磁盘。</span><br><span class="line">使用写入命令前请三思。</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">命令(输入 m 获取帮助)：m</span><br><span class="line">命令操作</span><br><span class="line">   a   toggle a bootable flag</span><br><span class="line">   b   edit bsd disklabel</span><br><span class="line">   c   toggle the dos compatibility flag</span><br><span class="line">   d   delete a partition</span><br><span class="line">   g   create a new empty GPT partition table</span><br><span class="line">   G   create an IRIX (SGI) partition table</span><br><span class="line">   l   list known partition types</span><br><span class="line">   m   <span class="built_in">print</span> this menu</span><br><span class="line">   n   add a new partition</span><br><span class="line">   o   create a new empty DOS partition table</span><br><span class="line">   p   <span class="built_in">print</span> the partition table</span><br><span class="line">   q   quit without saving changes</span><br><span class="line">   s   create a new empty Sun disklabel</span><br><span class="line">   t   change a partition<span class="string">&#x27;s system id</span></span><br><span class="line"><span class="string">   u   change display/entry units</span></span><br><span class="line"><span class="string">   v   verify the partition table</span></span><br><span class="line"><span class="string">   w   write table to disk and exit</span></span><br><span class="line"><span class="string">   x   extra functionality (experts only)</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">命令(输入 m 获取帮助)：d</span></span><br><span class="line"><span class="string">已选择分区 1</span></span><br><span class="line"><span class="string">分区 1 已删除</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">命令(输入 m 获取帮助)：n</span></span><br><span class="line"><span class="string">Partition type:</span></span><br><span class="line"><span class="string">   p   primary (0 primary, 0 extended, 4 free)</span></span><br><span class="line"><span class="string">   e   extended</span></span><br><span class="line"><span class="string">Select (default p): p</span></span><br><span class="line"><span class="string">分区号 (1-4，默认 1)：</span></span><br><span class="line"><span class="string">起始 扇区 (2048-976773167，默认为 2048)：</span></span><br><span class="line"><span class="string">将使用默认值 2048</span></span><br><span class="line"><span class="string">Last 扇区, +扇区 or +size&#123;K,M,G&#125; (2048-976773167，默认为 976773167)：</span></span><br><span class="line"><span class="string">将使用默认值 976773167</span></span><br><span class="line"><span class="string">分区 1 已设置为 Linux 类型，大小设为 465.8 GiB</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">命令(输入 m 获取帮助)：t</span></span><br><span class="line"><span class="string">已选择分区 1</span></span><br><span class="line"><span class="string">Hex 代码(输入 L 列出所有代码)：L</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"> 0  空              24  NEC DOS         81  Minix / 旧 Linu bf  Solaris</span></span><br><span class="line"><span class="string"> 1  FAT12           27  隐藏的 NTFS Win  82  Linux 交换 / So c1  DRDOS/sec (FAT-</span></span><br><span class="line"><span class="string"> 2  XENIX root      39  Plan 9          83  Linux           c4  DRDOS/sec (FAT-</span></span><br><span class="line"><span class="string"> 3  XENIX usr       3c  PartitionMagic  84  OS/2 隐藏的 C:  c6  DRDOS/sec (FAT-</span></span><br><span class="line"><span class="string"> 4  FAT16 &lt;32M      40  Venix 80286     85  Linux 扩展      c7  Syrinx</span></span><br><span class="line"><span class="string"> 5  扩展            41  PPC PReP Boot   86  NTFS 卷集       da  非文件系统数据</span></span><br><span class="line"><span class="string"> 6  FAT16           42  SFS             87  NTFS 卷集       db  CP/M / CTOS / .</span></span><br><span class="line"><span class="string"> 7  HPFS/NTFS/exFAT 4d  QNX4.x          88  Linux 纯文本    de  Dell 工具</span></span><br><span class="line"><span class="string"> 8  AIX             4e  QNX4.x 第2部分  8e  Linux LVM       df  BootIt</span></span><br><span class="line"><span class="string"> 9  AIX 可启动      4f  QNX4.x 第3部分  93  Amoeba          e1  DOS 访问</span></span><br><span class="line"><span class="string"> a  OS/2 启动管理器 50  OnTrack DM      94  Amoeba BBT      e3  DOS R/O</span></span><br><span class="line"><span class="string"> b  W95 FAT32       51  OnTrack DM6 Aux 9f  BSD/OS          e4  SpeedStor</span></span><br><span class="line"><span class="string"> c  W95 FAT32 (LBA) 52  CP/M            a0  IBM Thinkpad 休 eb  BeOS fs</span></span><br><span class="line"><span class="string"> e  W95 FAT16 (LBA) 53  OnTrack DM6 Aux a5  FreeBSD         ee  GPT</span></span><br><span class="line"><span class="string"> f  W95 扩展 (LBA)  54  OnTrackDM6      a6  OpenBSD         ef  EFI (FAT-12/16/</span></span><br><span class="line"><span class="string">10  OPUS            55  EZ-Drive        a7  NeXTSTEP        f0  Linux/PA-RISC  </span></span><br><span class="line"><span class="string">11  隐藏的 FAT12    56  Golden Bow      a8  Darwin UFS      f1  SpeedStor</span></span><br><span class="line"><span class="string">12  Compaq 诊断     5c  Priam Edisk     a9  NetBSD          f4  SpeedStor</span></span><br><span class="line"><span class="string">14  隐藏的 FAT16 &lt;3 61  SpeedStor       ab  Darwin 启动     f2  DOS 次要</span></span><br><span class="line"><span class="string">16  隐藏的 FAT16    63  GNU HURD or Sys af  HFS / HFS+      fb  VMware VMFS</span></span><br><span class="line"><span class="string">17  隐藏的 HPFS/NTF 64  Novell Netware  b7  BSDI fs         fc  VMware VMKCORE</span></span><br><span class="line"><span class="string">18  AST 智能睡眠    65  Novell Netware  b8  BSDI swap       fd  Linux raid 自动</span></span><br><span class="line"><span class="string">1b  隐藏的 W95 FAT3 70  DiskSecure 多启 bb  Boot Wizard 隐  fe  LANstep</span></span><br><span class="line"><span class="string">1c  隐藏的 W95 FAT3 75  PC/IX           be  Solaris 启动    ff  BBT</span></span><br><span class="line"><span class="string">1e  隐藏的 W95 FAT1 80  旧 Minix</span></span><br><span class="line"><span class="string">Hex 代码(输入 L 列出所有代码)：df</span></span><br><span class="line"><span class="string">已将分区“Linux”的类型更改为“BootIt”</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">命令(输入 m 获取帮助)：w</span></span><br><span class="line"><span class="string">The partition table has been altered!</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">Calling ioctl() to re-read partition table.</span></span><br><span class="line"><span class="string">正在同步磁盘。</span></span><br><span class="line"><span class="string">[root@server ~]# fdisk /dev/sdb</span></span><br><span class="line"><span class="string">欢迎使用 fdisk (util-linux 2.23.2)。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">更改将停留在内存中，直到您决定将更改写入磁盘。</span></span><br><span class="line"><span class="string">使用写入命令前请三思。</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">命令(输入 m 获取帮助)：p</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">磁盘 /dev/sdb：500.1 GB, 500107862016 字节，976773168 个扇区</span></span><br><span class="line"><span class="string">Units = 扇区 of 1 * 512 = 512 bytes</span></span><br><span class="line"><span class="string">扇区大小(逻辑/物理)：512 字节 / 512 字节</span></span><br><span class="line"><span class="string">I/O 大小(最小/最佳)：512 字节 / 512 字节</span></span><br><span class="line"><span class="string">磁盘标签类型：dos</span></span><br><span class="line"><span class="string">磁盘标识符：0xc738c738</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">   设备 Boot      Start         End      Blocks   Id  System</span></span><br><span class="line"><span class="string">/dev/sdb1            2048   976773167   488385560   df  BootIt</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">命令(输入 m 获取帮助)：q</span></span><br></pre></td></tr></table></figure>
<h3 id="查看分区信息"><a href="#查看分区信息" class="headerlink" title="查看分区信息"></a>查看分区信息</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@server ~]<span class="comment"># fdisk -l</span></span><br><span class="line">磁盘 /dev/sda：1000.2 GB, 1000204886016 字节，1953525168 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 4096 字节</span><br><span class="line">I/O 大小(最小/最佳)：4096 字节 / 4096 字节</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0x000b0c67</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sda1   *        2048     1026047      512000   83  Linux</span><br><span class="line">/dev/sda2         1026048  1953523711   976248832   8e  Linux LVM</span><br><span class="line"></span><br><span class="line">磁盘 /dev/sdb：500.1 GB, 500107862016 字节，976773168 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 512 字节</span><br><span class="line">I/O 大小(最小/最佳)：512 字节 / 512 字节</span><br><span class="line">磁盘标签类型：dos</span><br><span class="line">磁盘标识符：0xc738c738</span><br><span class="line"></span><br><span class="line">   设备 Boot      Start         End      Blocks   Id  System</span><br><span class="line">/dev/sdb1            2048   976773167   488385560   df  BootIt</span><br><span class="line"></span><br><span class="line">磁盘 /dev/mapper/centos-root：53.7 GB, 53687091200 字节，104857600 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 4096 字节</span><br><span class="line">I/O 大小(最小/最佳)：4096 字节 / 4096 字节</span><br><span class="line"></span><br><span class="line">磁盘 /dev/mapper/centos-swap：4160 MB, 4160749568 字节，8126464 个扇区</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 4096 字节</span><br><span class="line">I/O 大小(最小/最佳)：4096 字节 / 4096 字节</span><br><span class="line"></span><br><span class="line">磁盘 /dev/mapper/centos-home：941.8 GB, 941759660032 字节，1839374336 个扇区  //记住这个</span><br><span class="line">Units = 扇区 of 1 * 512 = 512 bytes</span><br><span class="line">扇区大小(逻辑/物理)：512 字节 / 4096 字节</span><br><span class="line">I/O 大小(最小/最佳)：4096 字节 / 4096 字节</span><br></pre></td></tr></table></figure>
<h3 id="查看volume-group-信息"><a href="#查看volume-group-信息" class="headerlink" title="查看volume group 信息"></a>查看volume group 信息</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@server ~]<span class="comment"># vgdisplay</span></span><br><span class="line">  --- Volume group ---</span><br><span class="line">  VG Name               centos          //记住这个</span><br><span class="line">  System ID</span><br><span class="line">  Format                lvm2</span><br><span class="line">  Metadata Areas        1</span><br><span class="line">  Metadata Sequence No  4</span><br><span class="line">  VG Access             <span class="built_in">read</span>/write</span><br><span class="line">  VG Status             resizable</span><br><span class="line">  MAX LV                0</span><br><span class="line">  Cur LV                3</span><br><span class="line">  Open LV               3</span><br><span class="line">  Max PV                0</span><br><span class="line">  Cur PV                1</span><br><span class="line">  Act PV                1</span><br><span class="line">  VG Size               &lt;931.02 GiB</span><br><span class="line">  PE Size               4.00 MiB</span><br><span class="line">  Total PE              238341</span><br><span class="line">  Alloc PE / Size       238325 / &lt;930.96 GiB</span><br><span class="line">  Free  PE / Size       16 / 64.00 MiB</span><br><span class="line">  VG UUID               pSvviC-2h2k-AA3P-OUpk-OvtT-SXWd-qZ2dQa</span><br></pre></td></tr></table></figure>
<h3 id="查看logical-volume"><a href="#查看logical-volume" class="headerlink" title="查看logical volume"></a>查看logical volume</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@server ~]<span class="comment"># vgdisplay</span></span><br><span class="line">  --- Volume group ---</span><br><span class="line">  VG Name               centos</span><br><span class="line">  System ID</span><br><span class="line">  Format                lvm2</span><br><span class="line">  Metadata Areas        1</span><br><span class="line">  Metadata Sequence No  4</span><br><span class="line">  VG Access             <span class="built_in">read</span>/write</span><br><span class="line">  VG Status             resizable</span><br><span class="line">  MAX LV                0</span><br><span class="line">  Cur LV                3</span><br><span class="line">  Open LV               3</span><br><span class="line">  Max PV                0</span><br><span class="line">  Cur PV                1</span><br><span class="line">  Act PV                1</span><br><span class="line">  VG Size               &lt;931.02 GiB</span><br><span class="line">  PE Size               4.00 MiB</span><br><span class="line">  Total PE              238341</span><br><span class="line">  Alloc PE / Size       238325 / &lt;930.96 GiB</span><br><span class="line">  Free  PE / Size       16 / 64.00 MiB</span><br><span class="line">  VG UUID               pSvviC-2h2k-AA3P-OUpk-OvtT-SXWd-qZ2dQa</span><br></pre></td></tr></table></figure>
<h2 id="创建physical-volume"><a href="#创建physical-volume" class="headerlink" title="创建physical volume"></a>创建physical volume</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@server ~]<span class="comment"># pvcreate /dev/sdb1</span></span><br><span class="line">  Physical volume <span class="string">&quot;/dev/sdb1&quot;</span> successfully created.</span><br></pre></td></tr></table></figure>
<h2 id="将physical-volume扩展到volume-group"><a href="#将physical-volume扩展到volume-group" class="headerlink" title="将physical volume扩展到volume group"></a>将physical volume扩展到volume group</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@server ~]<span class="comment"># vgextend centos /dev/sdb1    //centos 为volume group名称</span></span><br><span class="line">  Volume group <span class="string">&quot;centos&quot;</span> successfully extended</span><br></pre></td></tr></table></figure>
<h2 id="将sdb1容量扩展至-home"><a href="#将sdb1容量扩展至-home" class="headerlink" title="将sdb1容量扩展至/home"></a>将sdb1容量扩展至/home</h2><h3 id="查看physical-volume"><a href="#查看physical-volume" class="headerlink" title="查看physical volume"></a>查看physical volume</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@server ~]<span class="comment"># pvdisplay </span></span><br><span class="line">  --- Physical volume ---</span><br><span class="line">  PV Name               /dev/sda2</span><br><span class="line">  VG Name               centos</span><br><span class="line">  PV Size               931.02 GiB / not usable 4.00 MiB</span><br><span class="line">  Allocatable           yes </span><br><span class="line">  PE Size               4.00 MiB</span><br><span class="line">  Total PE              238341</span><br><span class="line">  Free PE               16</span><br><span class="line">  Allocated PE          238325</span><br><span class="line">  PV UUID               9PCjzM-KHZJ-mDF2-Qb8d-E6Ye-4elf-AdDi4O</span><br><span class="line"></span><br><span class="line">  --- Physical volume ---</span><br><span class="line">  PV Name               /dev/sdb1</span><br><span class="line">  VG Name               centos</span><br><span class="line">  PV Size               465.76 GiB / not usable 3.02 MiB   //新挂的500GB盘</span><br><span class="line">  Allocatable           yes </span><br><span class="line">  PE Size               4.00 MiB</span><br><span class="line">  Total PE              119234</span><br><span class="line">  Free PE               119234</span><br><span class="line">  Allocated PE          0</span><br><span class="line">  PV UUID               eWCdST-avv3-6Asl-KrdI-fS0O-Kmqm-bjosEU</span><br></pre></td></tr></table></figure>
<h3 id="查看logical-volume信息"><a href="#查看logical-volume信息" class="headerlink" title="查看logical volume信息"></a>查看logical volume信息</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@server ~]<span class="comment"># lvdisplay </span></span><br><span class="line">  --- Logical volume ---</span><br><span class="line">  LV Path                /dev/centos/swap</span><br><span class="line">  LV Name                swap</span><br><span class="line">  VG Name                centos</span><br><span class="line">  LV UUID                VGPZIE-CFT1-70zk-1MGp-s0ce-330x-jytZpX</span><br><span class="line">  LV Write Access        <span class="built_in">read</span>/write</span><br><span class="line">  LV Creation host, time localhost.localdomain, 2018-09-26 15:02:00 +0800</span><br><span class="line">  LV Status              available</span><br><span class="line">  <span class="comment"># open                 2</span></span><br><span class="line">  LV Size                &lt;3.88 GiB</span><br><span class="line">  Current LE             992</span><br><span class="line">  Segments               1</span><br><span class="line">  Allocation             inherit</span><br><span class="line">  Read ahead sectors     auto</span><br><span class="line">  - currently <span class="built_in">set</span> to     256</span><br><span class="line">  Block device           253:1</span><br><span class="line"></span><br><span class="line">  --- Logical volume ---</span><br><span class="line">  LV Path                /dev/centos/home</span><br><span class="line">  LV Name                home</span><br><span class="line">  VG Name                centos</span><br><span class="line">  LV UUID                S3dfG3-rZyv-nR1t-WuLo-0TBt-y6PM-1ZU7Fh</span><br><span class="line">  LV Write Access        <span class="built_in">read</span>/write</span><br><span class="line">  LV Creation host, time localhost.localdomain, 2018-09-26 15:02:01 +0800</span><br><span class="line">  LV Status              available</span><br><span class="line">  <span class="comment"># open                 1</span></span><br><span class="line">  LV Size                877.08 GiB       //这里是之前已经满的那块盘</span><br><span class="line">  Current LE             224533</span><br><span class="line">  Segments               1</span><br><span class="line">  Allocation             inherit</span><br><span class="line">  Read ahead sectors     auto</span><br><span class="line">  - currently <span class="built_in">set</span> to     256</span><br><span class="line">  Block device           253:2</span><br><span class="line"></span><br><span class="line">  --- Logical volume ---</span><br><span class="line">  LV Path                /dev/centos/root</span><br><span class="line">  LV Name                root</span><br><span class="line">  VG Name                centos</span><br><span class="line">  LV UUID                IKM0LU-JsZh-LYJ1-bacl-oV8t-lySs-sEUGlS</span><br><span class="line">  LV Write Access        <span class="built_in">read</span>/write</span><br><span class="line">  LV Creation host, time localhost.localdomain, 2018-09-26 15:02:05 +0800</span><br><span class="line">  LV Status              available</span><br><span class="line">  <span class="comment"># open                 1</span></span><br><span class="line">  LV Size                50.00 GiB      //这里是新挂的盘</span><br><span class="line">  Current LE             12800</span><br><span class="line">  Segments               1</span><br><span class="line">  Allocation             inherit</span><br><span class="line">  Read ahead sectors     auto</span><br><span class="line">  - currently <span class="built_in">set</span> to     256</span><br><span class="line">  Block device           253:0</span><br></pre></td></tr></table></figure>
<h3 id="查看系统挂载信息"><a href="#查看系统挂载信息" class="headerlink" title="查看系统挂载信息"></a>查看系统挂载信息</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat /etc/fstab </span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># /etc/fstab</span></span><br><span class="line"><span class="comment"># Created by anaconda on Wed Sep 26 15:02:07 2018</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># Accessible filesystems, by reference, are maintained under &#x27;/dev/disk&#x27;</span></span><br><span class="line"><span class="comment"># See man pages fstab(5), findfs(8), mount(8) and/or blkid(8) for more info</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">/dev/mapper/centos-root /                       xfs     defaults        0 0</span><br><span class="line">UUID=ad148335-aa47-4c16-a2bf-9e4727e98749 /boot                   xfs     defaults        0 0</span><br><span class="line">/dev/mapper/centos-home /home                   xfs     defaults        0 0    //看这里</span><br><span class="line">/dev/mapper/centos-swap swap                    swap    defaults        0 0</span><br></pre></td></tr></table></figure>
<p>将新挂的盘整个扩容到/home下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lvextend -l +100%FREE /dev/mapper/centos-home</span><br><span class="line">  Size of logical volume centos/home changed from 877.08 GiB (224533 extents) to 1.31 TiB (343783 extents).</span><br><span class="line">  Logical volume centos/home successfully resized.   //容量已经从877GB更为1.31TB了。</span><br></pre></td></tr></table></figure>
<h3 id="确认磁盘使用情况"><a href="#确认磁盘使用情况" class="headerlink" title="确认磁盘使用情况"></a>确认磁盘使用情况</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@server ~]<span class="comment"># df -HT</span></span><br><span class="line">文件系统                类型      容量  已用  可用 已用% 挂载点</span><br><span class="line">/dev/mapper/centos-root xfs        54G  1.6G   53G    3% /</span><br><span class="line">devtmpfs                devtmpfs  2.0G     0  2.0G    0% /dev</span><br><span class="line">tmpfs                   tmpfs     2.0G     0  2.0G    0% /dev/shm</span><br><span class="line">tmpfs                   tmpfs     2.0G  9.2M  2.0G    1% /run</span><br><span class="line">tmpfs                   tmpfs     2.0G     0  2.0G    0% /sys/fs/cgroup</span><br><span class="line">/dev/sda1               xfs       518M  228M  290M   44% /boot</span><br><span class="line">/dev/mapper/centos-home xfs       942G  933G  9.1G  100% /home      //好像还是没有变化，新的盘没有挂上来</span><br><span class="line">tmpfs                   tmpfs     398M     0  398M    0% /run/user/0</span><br></pre></td></tr></table></figure>
<h3 id="刷新文件系统"><a href="#刷新文件系统" class="headerlink" title="刷新文件系统"></a>刷新文件系统</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@server ~]<span class="comment"># xfs_growfs /dev/mapper/centos-home </span></span><br><span class="line">meta-data=/dev/mapper/centos-home isize=256    agcount=4, agsize=57480448 blks</span><br><span class="line">         =                       sectsz=4096  attr=2, projid32bit=1</span><br><span class="line">         =                       crc=0        finobt=0 spinodes=0</span><br><span class="line">data     =                       bsize=4096   blocks=229921792, imaxpct=25</span><br><span class="line">         =                       sunit=0      swidth=0 blks</span><br><span class="line">naming   =version 2              bsize=4096   ascii-ci=0 ftype=0</span><br><span class="line"><span class="built_in">log</span>      =internal               bsize=4096   blocks=112266, version=2</span><br><span class="line">         =                       sectsz=4096  sunit=1 blks, lazy-count=1</span><br><span class="line">realtime =none                   extsz=4096   blocks=0, rtextents=0</span><br><span class="line">data blocks changed from 229921792 to 352033792</span><br></pre></td></tr></table></figure>
<p>因为centos默认的文件系统为xfs。如果创建的文件系统为ext3/ext4则使用下面命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">resize2fs /dev/mapper/centos-home</span><br></pre></td></tr></table></figure>
<h3 id="再次确认磁盘使用信息"><a href="#再次确认磁盘使用信息" class="headerlink" title="再次确认磁盘使用信息"></a>再次确认磁盘使用信息</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">df -HT</span><br><span class="line">文件系统                类型      容量  已用  可用 已用% 挂载点</span><br><span class="line">/dev/mapper/centos-root xfs        54G  1.6G   53G    3% /</span><br><span class="line">devtmpfs                devtmpfs  2.0G     0  2.0G    0% /dev</span><br><span class="line">tmpfs                   tmpfs     2.0G     0  2.0G    0% /dev/shm</span><br><span class="line">tmpfs                   tmpfs     2.0G  9.2M  2.0G    1% /run</span><br><span class="line">tmpfs                   tmpfs     2.0G     0  2.0G    0% /sys/fs/cgroup</span><br><span class="line">/dev/sda1               xfs       518M  228M  290M   44% /boot</span><br><span class="line">/dev/mapper/centos-home xfs       1.5T  933G  510G   65% /home      //看这里，磁盘已经加到1.5TB</span><br><span class="line">tmpfs                   tmpfs     398M     0  398M    0% /run/user/0</span><br></pre></td></tr></table></figure>
<p>扩容完成，参考链接请戳：</p>
<p>参考1：<a href="https://linux.cn/article-9168-1.html">LVM逻辑卷管理</a></p>
<p>参考2：<a href="https://blog.csdn.net/u012439646/article/details/73380197">Centos 7 利用LVM实现动态扩容</a></p>
<h2 id="小结"><a href="#小结" class="headerlink" title="小结"></a>小结</h2><ol>
<li><p>创建分区                                        #fdisk /dev/sdb</p>
</li>
<li><p>创建物理卷                                      #pvcreat /dev/sdb1</p>
</li>
<li><p>查看卷组名称及使用情况                            #vgdisplay</p>
</li>
<li><p>将物理卷扩展到卷组                               #vgextend centos /dev/sdb1   (此处‘centos’是卷组名称)</p>
</li>
<li><p>将卷组中空闲空间扩展到 /home                     #lvextend -l +100%FREE /dev/mapper/centos-home</p>
</li>
<li><p>刷新文件系统是扩容生效                           #xfs_growfs /dev/mapper/centos-home    (ext4使用这个)resize2fs /dev/mapper/centos-home</p>
</li>
</ol>
<p>注：使用reiserfs 文件系统代替ext3/ext4：<em>resize_reiserfs /dev/mapper/drore-home</em></p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>LVM命令相关</title>
    <url>/2018/12/10/LVM%E5%91%BD%E4%BB%A4%E7%9B%B8%E5%85%B3/</url>
    <content><![CDATA[<h2 id="LVM常用命令"><a href="#LVM常用命令" class="headerlink" title="LVM常用命令"></a>LVM常用命令</h2><table>
<thead>
<tr>
<th>功能/命令</th>
<th>物理卷管理</th>
<th>卷管理</th>
<th>逻辑卷管理</th>
</tr>
</thead>
<tbody><tr>
<td>扫描</td>
<td>pvscan</td>
<td>vgscan</td>
<td>lvscan</td>
</tr>
<tr>
<td>建立</td>
<td>pvcreate</td>
<td>vgcreate</td>
<td>lvcreate</td>
</tr>
<tr>
<td>显示</td>
<td>pvdisplay</td>
<td>vgdisplay</td>
<td>lvdisplay</td>
</tr>
<tr>
<td>删除</td>
<td>pvremove</td>
<td>vgremove</td>
<td>lvremove</td>
</tr>
<tr>
<td>扩展</td>
<td></td>
<td>vgextend</td>
<td>lvextend</td>
</tr>
<tr>
<td>缩小</td>
<td></td>
<td>vgreduce</td>
<td>lvreduce</td>
</tr>
</tbody></table>
<h2 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h2><ul>
<li>物理卷Physical volume (PV)：可以在上面建立卷组的媒介，可以是硬盘分区，也可以是硬盘本身或者回环文件（loopback file）。物理卷包括一个特殊的header，其余部分被切割为一块块物理区域（physical extents）。</li>
<li>卷组Volume group (VG)：将一组物理卷收集为一个管理单元。</li>
<li>逻辑卷Logical volume (LV)：虚拟分区，由物理区域（physical extents）组成。</li>
<li>物理区域Physical extent (PE)：硬盘可供指派给逻辑卷的最小单位（通常为4MB）。</li>
</ul>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>U盘多启动</title>
    <url>/2018/12/01/U%E7%9B%98%E5%A4%9A%E5%90%AF%E5%8A%A8/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>接着前面U盘量产的工作，既然都已经到了量产了，好像不多做一点事情，总觉得对不起自己的折腾，于是再找关于U盘多启动方面的作法。以前想给自己的系统做维护，基本上就是做一个PE盘。里面集成PE工具，现在已经对U盘做了量产，即在数据盘上做一个PE，那就是两个启动了。是否可以多启动呢？想了两个方案：</p>
<ol>
<li>是否可以量产多个光驱？</li>
<li>单盘多引导</li>
</ol>
<p>关于第一个想法，自己网上能找到的基本上都是关于三启动的，即量产为一个USB－CDROM，USB－ZIP，USB－HDD。不过量产为多光驱的还真的有一个，参考<a href="1">链接</a>;教程中把一个慧荣主控的U盘量产为7个光驱。而刚好自己的小米U盘为慧荣的主控，按教程上的说法，也是可以通过更变参数改为其它的量产参数的，不过文中提到了有风险，即数据分区通常在格式化上会出现问题。参考自己也只有一个慧荣的U盘，还有以前量产失败的经验，就先不尝试此方法。可以查看上面的链接中的教程内容，里面有详细的更变参数，以及U盘的各参数的说明。</p>
<p>关于第二个相法，有过双系统（windows + linux）的经验，自然想到了GRUB2。按照这个思路，找到两个工具，EASY2BOOT和AIO BOOT CREATOR。通过名字就知道了，这会是两个多系统引导的好工具。特别是第二个，all in one。</p>
<h2 id="EASY2BOOT启动引导"><a href="#EASY2BOOT启动引导" class="headerlink" title="EASY2BOOT启动引导"></a>EASY2BOOT启动引导</h2><h3 id="操作步骤如下"><a href="#操作步骤如下" class="headerlink" title="操作步骤如下"></a>操作步骤如下</h3><ol>
<li><p>下载<a href="2">链接</a></p>
</li>
<li><p>安装</p>
</li>
<li><p>打开程序（插入U盘后）如下图所示</p>
<p> <img src="https://blog.ywmy.xyz/windows/easy2boot.png" alt="easy2boot"></p>
<p> 选择语言，选择U盘，创建启动盘。</p>
</li>
<li><p>在弹出的CMD窗口选择已经识别的U盘，如图所示：</p>
<p> <img src="https://blog.ywmy.xyz/windows/erase-usb-drive.png" alt="erase-usb-drive"></p>
<p> 如图实别的USB设备编号为1，所选择1。</p>
</li>
<li><p>是否格式化，选择Y，此处忘记截图。</p>
</li>
<li><p>选择格式化的磁盘分区类型</p>
<p> <img src="https://blog.ywmy.xyz/windows/format-partition.png" alt="format-partition"></p>
<p> 此处选择了FAT32，即F。<br> 参考这一句：</p>
<p> <strong>For UEFI-booting, convert the ISO using the MPI_FAT32 Desktop shortcut.</strong></p>
<p> 就是说，如果你需要UEFI启动模式的话，那么转换ISO的时候，需要使用MPI_FAT32的快捷工具。</p>
</li>
<li><p>确认格式化，参考下图：</p>
<p> <img src="https://blog.ywmy.xyz/windows/confirm_action.png" alt="confirm_active"></p>
</li>
<li><p>选择语言</p>
<p> <img src="https://blog.ywmy.xyz/windows/select-language.png" alt="select_language"></p>
</li>
<li><p>选择键盘</p>
<p> <img src="https://blog.ywmy.xyz/windows/choose_keyboard_type.png" alt="choose_keyboard_type"></p>
</li>
<li><p>选择是否显示扩展名</p>
<p><img src="https://blog.ywmy.xyz/windows/show-filename-extensions.png" alt="show-filename-extensions"></p>
</li>
<li><p>显示E2B图标样式</p>
<p><img src="https://blog.ywmy.xyz/windows/display-icon.png" alt="display-icon"></p>
</li>
<li><p>是否写入配置文件</p>
<p><img src="https://blog.ywmy.xyz/windows/write-configure-file.png" alt="write-configure-file"></p>
</li>
<li><p>填充linux镜像</p>
<p><img src="https://blog.ywmy.xyz/windows/create-iso-file.png" alt="create-iso-file"></p>
<p>这里需求填充一个3.9GB的镜像文件，输入数值0为不填充，或者输入一个大于3.9GB的数据，小于4GB，大于4096会报错，参考数据盘格式化为FAT32。</p>
</li>
<li><p>完成制作</p>
<p><img src="https://blog.ywmy.xyz/windows/completed-configure.png" alt="completed-configure"></p>
<p>至此，完成E2B U盘多启动的操作。</p>
</li>
</ol>
<h3 id="UEFI启动支持"><a href="#UEFI启动支持" class="headerlink" title="UEFI启动支持"></a>UEFI启动支持</h3><p>操作步骤：</p>
<ol>
<li><p>下载MTI工具，链接<a href="3">请戳</a></p>
</li>
<li><p>解压缩下载的工具包，进入ImDisk目录，安装ImDisk程序，参考图片：</p>
<p> <img src="https://blog.ywmy.xyz/windows/install_imDisk_virtual_driver.png" alt="install_imDisk_virtual_driver"></p>
</li>
<li><p>然后回到上级目录，运行 MPI_Tool_Pack_Plus_CloverLite_086\CreateDesktopShortcuts.cmd，这个CMD命令会在你的桌面上创建三个快捷方式，不过需要注意的是，需要用右键点击，然后使用管理员模式运行，参考下图：</p>
<p> <img src="https://blog.ywmy.xyz/windows/CreateDesktopShortcuts.png" alt="CreateDesktopShortcuts"></p>
<p> 此命令会在桌面上创建三个快捷方式，即MakePartImage，MPI_FAT32，MPI_NTFS，三个程序的快捷方式。</p>
</li>
<li><p>将你需要创建的 UEFI 启动镜像，拖拽到 MPI_FAT32 这个快捷方式上，就会自动创建出 .imgPTN 格式的镜像文件了。在创建大小的时候按回车确认即可。参考下图：</p>
<p> <img src="https://blog.ywmy.xyz/windows/mpi_option_2.png" alt="mpi_option"></p>
</li>
<li><p>将ISO或者imgPTN文件拷贝到U盘中的对应目录即可，或者直接都扔到了 _ISO\MAINMENU 这个文件夹中。</p>
</li>
<li><p>完成操作后，从U盘启动，成果如下（默认UEFI支持的，可能需要关闭BIOS中的默认secret启动）：</p>
<p> <img src="https://blog.ywmy.xyz/windows/E2B_BOOT_UP.jpg" alt="E2B_BOOT_UP"></p>
</li>
</ol>
<h2 id="AIO-BOOT-启动引导"><a href="#AIO-BOOT-启动引导" class="headerlink" title="AIO BOOT 启动引导"></a>AIO BOOT 启动引导</h2><h3 id="操作如下："><a href="#操作如下：" class="headerlink" title="操作如下："></a>操作如下：</h3><p>这个是一个真神器，绿色，不用安装，还自带中文，如名称所说，AIO all in one。</p>
<ol>
<li><p>下载工具，链接<a href="4">请戳</a></p>
</li>
<li><p>运行，操作如下图所示：</p>
<p> <img src="https://blog.ywmy.xyz/windows/choose-usb-drive.png" alt="choose-usb-drive"></p>
<p> 切换语言，选择U盘，勾选自动安装bootloader，点击OK，完成操作。</p>
</li>
<li><p>接下来就是在U盘的目录下操作了，操作大致如下图所示：</p>
<p> <img src="https://blog.ywmy.xyz/AIOcreator.png" alt="AIOcreator"></p>
<p> <img src="https://blog.ywmy.xyz/windows/boot_creator.jpg" alt="boot_creator"></p>
<p> <img src="https://blog.ywmy.xyz/windows/tool_bar.jpg" alt="tool_bar"></p>
</li>
<li><p>最后，给一张U盘启动后的图片，这是一个相当结力的工具。</p>
<p> <img src="https://blog.ywmy.xyz/windows/AIO_BOOT_UP.jpg" alt="AIO_BOOT_UP"></p>
</li>
</ol>
<h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>EASY2BOOT和AIO BOOT CREATOR这两款工具都是基于grub2和grub4dos工具为基础的，easy2boot基本以命令行操作为主，linux系统下也可以使用。AIO BOOT CREATOR这个工具，基本满足了我的所有需求，简单，功能强大，操作方便。一个绿色包，直接运行，还自带中文，这个就非常方便了。后面直接使用了AIO把我想要集成的多启动系统都集成在了U盘，包括ANDROID（phoenixos），linux（Kail, ubuntu），windows（windows 7, windows server 2016）等。系统安装，live环境应有尽有，可以说是一步到位了。</p>
]]></content>
      <tags>
        <tag>windows usb</tag>
      </tags>
  </entry>
  <entry>
    <title>U盘量产</title>
    <url>/2018/12/01/U%E7%9B%98%E9%87%8F%E4%BA%A7/</url>
    <content><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>需求回到上一篇文章，惠普服务器的安装中，因为设备比较旧，对启动的支持有限，即尝试了U盘量产，希望能将U盘量产为USB－CDROM以实现从光驱启动的目的。自己手里有两个U盘，一个16GB的金士顿，还有一个小米家的32GB小米U盘。之前有过量产挂盘的经历后，对于这次的量产，还是比较小心的，从16GB的开始，没想，还真的没之前的问题。将16GB的量产结束了，接着对32GB的U盘也做了量产，都没有问题。记录量产过程如下：</p>
<h2 id="金士顿16GB量产"><a href="#金士顿16GB量产" class="headerlink" title="金士顿16GB量产"></a>金士顿16GB量产</h2><p>量产的前期准备，需求检测U盘的主控芯片，这个有一个通用的工具，叫<strong>芯片精灵</strong>可以检测到U盘主控相关的信息。下载请戳<a href="http://www.upantool.com/test/xinpian/2011/ChipGenius_V4.html">链接</a>。</p>
<p>通过芯片精灵检测到主控芯片后，即可以去上面芯片精灵的网站，下载相应的量产工具，如自己16GB的金士顿，主控芯片为群联，即可从网站搜索群联的量产工具，有两个，MPALL和一个傻瓜转换工具ModeConverter。<br>量产方式参考<a href="http://www.upantool.com/jiaocheng/liangchan/Phison/5108.html">链接</a>。</p>
<h2 id="小米32GB量产"><a href="#小米32GB量产" class="headerlink" title="小米32GB量产"></a>小米32GB量产</h2><p>同上一样，通过使用芯片精灵，读取相应的主控信息。接下来去量产网站下载相应的量产工具，小米32GB的U盘，采用的是慧荣的主控芯片。量产工具为：SM3267AE_2.5.54。</p>
<p>量产方式参考<a href="http://www.upantool.com/liangchan/SMI/2016/8732.html">链接</a>。</p>
<hr>
<p>附上两张量产后的图（小米的量产）：</p>
<p><img src="https://blog.ywmy.xyz/windows/USB_mass_production.png" alt="USB_MASS_PRODUCTION"></p>
<p><img src="https://blog.ywmy.xyz/disk_manager.png" alt="DISK_MANAGER"></p>
<p>U盘量产为一个5GB的光驱和一个28GB的数据盘。数据盘又给我做了多启动，通过多启动来实现系统维护，即AIOBOOT和AIO——UEFI两个分区。</p>
]]></content>
      <tags>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>centos 6 更换网卡</title>
    <url>/2020/02/22/centos-6-%E6%9B%B4%E6%8D%A2%E7%BD%91%E5%8D%A1/</url>
    <content><![CDATA[<h2 id="CentOS-6-更换网卡"><a href="#CentOS-6-更换网卡" class="headerlink" title="CentOS 6 更换网卡"></a>CentOS 6 更换网卡</h2><p>开年上班了，到公司第一件事情就是处理过年期间挂掉的几台服务器。其中一台在自己尝试BIOS电池放电、换内存、换电源都没办法点亮后，就只能想着找一块一样的主板换上，试试能不能正常启来。还好主板是有的，换上后，正常开机了。启动后的一个问题，换主板了，网卡信息就变更了，这样新的网卡就没办法正常启用。</p>
<ul>
<li>备份udev下的70-persistent-net.rules文件</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mv /etc/udev/rules.d/70-persistent-net.rules /etc/udev/rules.d/70-persistent-net.rules_backup</span><br></pre></td></tr></table></figure>
<ul>
<li>重启服务器</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">init 6</span><br></pre></td></tr></table></figure>
<ul>
<li>修改新生成的70-persistent-net.rules文件，将NAME硬件名称更改为eth0 </li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi /etc/udev/rules.d/70-persistent-net.rules</span><br><span class="line"></span><br><span class="line"><span class="comment"># This file was automatically generated by the /lib/udev/write_net_rules</span></span><br><span class="line"><span class="comment"># program, run by the persistent-net-generator.rules rules file.</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># You can modify it, as long as you keep each rule on a single</span></span><br><span class="line"><span class="comment"># line, and change only the value of the NAME= key.</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># PCI device 0x10ec:0x8168 (r8169)</span></span><br><span class="line">SUBSYSTEM==<span class="string">&quot;net&quot;</span>, ACTION==<span class="string">&quot;add&quot;</span>, DRIVERS==<span class="string">&quot;?*&quot;</span>, ATTR&#123;address&#125;==<span class="string">&quot;c8:60:00:aa:bb:cc&quot;</span>, ATTR&#123;<span class="built_in">type</span>&#125;==<span class="string">&quot;1&quot;</span>, KERNEL==<span class="string">&quot;eth*&quot;</span>, NAME=<span class="string">&quot;eth0&quot;</span></span><br></pre></td></tr></table></figure>
<ul>
<li>修改network-script下的ifcfg-eth0文件，将mac地址更改为新的网卡mac地址</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi /etc/sysconfig/network-scripts/ifcfg-eth0</span><br><span class="line"></span><br><span class="line">DEVICE=eth0</span><br><span class="line">HWADDR=C8:60:00:aa:bb:cc</span><br><span class="line">TYPE=Ethernet</span><br><span class="line">UUID=21e445f2-209e-4a80-aa32-8c06bde93917</span><br><span class="line">ONBOOT=yes</span><br><span class="line">NM_CONTROLLED=yes</span><br><span class="line">BOOTPROTO=static</span><br><span class="line">IPADDR=192.168.121.121</span><br><span class="line">NETMASK=255.255.255.0</span><br><span class="line">GATEWAY=192.168.121.1</span><br><span class="line">DNS1=221.12.1.227</span><br></pre></td></tr></table></figure>
<ul>
<li>重启</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">reboot 或 init 6</span><br></pre></td></tr></table></figure>
<p>重启后，网卡正常工作，结束 。</p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>centos 7 zabbix proxy</title>
    <url>/2019/04/04/centos-7-zabbix-proxy/</url>
    <content><![CDATA[<h2 id="CentOS-7-安装配置Zabbix-Proxy"><a href="#CentOS-7-安装配置Zabbix-Proxy" class="headerlink" title="CentOS 7 安装配置Zabbix Proxy"></a>CentOS 7 安装配置Zabbix Proxy</h2><p>最近想重新搭建一台zabbix代理，发现zabbix官方的源已经没有办法访问了，试了一下，把zabbix源换成阿里云的，结果安装的时候部分依赖的还是有问题。想想还是直接下载源码包安装省事。之前搭建的zabbix是3.4.15版本的，就下载了3.4.15的源码。安装如下操作，备忘。</p>
<h3 id="安装数据库"><a href="#安装数据库" class="headerlink" title="安装数据库"></a>安装数据库</h3><p>  安装mariadb </p>
<p>可以参考链接<a href="https://www.ywmy.xyz/2018/08/20/centos%E5%AE%89%E8%A3%85mariadb/">centos 安装 mariadb</a>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install mariadb mariadb-server</span><br></pre></td></tr></table></figure>
<ul>
<li>启用服务</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start mariadb</span><br><span class="line">systemctl status mariadb </span><br><span class="line">systemctl <span class="built_in">enable</span> mariadb    //开机自启动</span><br></pre></td></tr></table></figure>
<h3 id="安装zabbix守护进程"><a href="#安装zabbix守护进程" class="headerlink" title="安装zabbix守护进程"></a>安装zabbix守护进程</h3><p>1 下载源代码归档</p>
<p>下载地址<a href="https://www.zabbix.com/cn/download_sources">zabbix proxy download page</a>，下载，解压源码。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zxvf zabbix-3.4.15.tar.gz</span><br></pre></td></tr></table></figure>
<p>2 创建用户</p>
<p>对于zabbix的守护进程，需要一个无特权的用户。如果zabbix守护进程以一个无特权的用户启动，那么它会使用该用户运行。<br>然而，如果守护进程以root用户启动，它会切换为zabbix用户账户，且这个用户必须存在。创建如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">groupadd --system zabbix</span><br><span class="line">useradd --system -g zabbix -d /usr/lib/zabbix -s /sbin/nologin -C <span class="string">&quot;Zabbix Monitoring System&quot;</span>  zabbix</span><br></pre></td></tr></table></figure>
<p>3 创建数据库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line">password</span><br><span class="line">mysql &gt; create database zabbix_proxy character <span class="built_in">set</span> utf8 collate utf8_bin;</span><br><span class="line">mysql &gt; grant all privileges on zabbix_proxy.* to zabbix@localhost identified by <span class="string">&#x27;password&#x27;</span>;</span><br><span class="line">mysql &gt; quit;</span><br></pre></td></tr></table></figure>
<p>4 导入数据库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -u zabbix -p</span><br><span class="line">password:</span><br><span class="line">mysql &gt; use zabbix_proxy;</span><br><span class="line">mysql &gt; <span class="built_in">source</span> zabbix源码数据库文件路径/schema.sql</span><br><span class="line">mysql &gt; quit;</span><br></pre></td></tr></table></figure>
<p>zabbix proxy只需要导入schemas.sql就可以了。</p>
<p>5 安装信赖程序</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install -y curl wget gcc gcc-c++ vim curl-devel net-snmp-devel nc libxml2 ssh2 libssh2 libssh2-devel</span><br></pre></td></tr></table></figure>
<p>6 编译安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./configure --enable-proxy --enable-agent --with-mysql --enable-ipv6 --with-net-snmp --with-libcurl --with-libxml2 --prefix=/usr/<span class="built_in">local</span>/zabbix</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>
<p>7 配置zabbix proxy配置文件 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">grep -Ev <span class="string">&quot;^$ | ^[#,;]&quot;</span> zabbix_proxy.conf</span><br><span class="line">Server=A.B.C.D  <span class="comment">#zabbix server ip</span></span><br><span class="line">Hostname=zabbix_proxy</span><br><span class="line">LogFile=/tmp/zabbix_proxy.log</span><br><span class="line">PidFile=/tmp/zabbix_proxy.pid</span><br><span class="line">DBName=zabbix_proxy</span><br><span class="line">DBPassword=your_password</span><br><span class="line">SNMPTrapperFile=/tmp/zabbix_traps.tmp</span><br><span class="line">Timeout=4</span><br><span class="line">LogSlowQueris=3000</span><br></pre></td></tr></table></figure>
<p>8 防火墙配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent --add-port=10050/tcp</span><br><span class="line">firelwall-cmd --permanent --add-port=10051/tcp</span><br><span class="line">firewall-cmd --complete-reload</span><br></pre></td></tr></table></figure>
<p>9 启动服务 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/lib/systemd/system</span><br><span class="line">vi zabbix-proxy.service</span><br><span class="line"></span><br><span class="line">自定义服务</span><br><span class="line">[Unit]</span><br><span class="line">Description=Zabbix Proxy</span><br><span class="line">After=rsyslog.target</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User=zabbix</span><br><span class="line">Group=zabbix</span><br><span class="line">Environment=<span class="string">&quot;CONFFILE=/usr/local/zabbix/etc/zabbix_proxy.conf&quot;</span></span><br><span class="line">Type=forking</span><br><span class="line">Restart=on-failure</span><br><span class="line">PIDFile=/tmp/zabbix_proxy.pid</span><br><span class="line">KillMode=control-group</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/zabbix/sbin/zabbix_proxy -c <span class="variable">$CONFFILE</span></span><br><span class="line">ExecStop=/bin/<span class="built_in">kill</span> -SIGTERM <span class="variable">$MAINPID</span></span><br><span class="line">RestartSec=10s</span><br><span class="line">TimeoutSec=0</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line"></span><br><span class="line">systemctl <span class="built_in">enable</span> zabbix-proxy</span><br><span class="line">systemctl start zabbix-proxy</span><br></pre></td></tr></table></figure>
<p>最后就简单了。zabbix server上面添加代理程序就可以了。好了，结束。</p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>centos 7 更换阿里源</title>
    <url>/2018/10/26/centos-7-%E6%9B%B4%E6%8D%A2%E9%98%BF%E9%87%8C%E6%BA%90/</url>
    <content><![CDATA[<h2 id="操作如下"><a href="#操作如下" class="headerlink" title="操作如下"></a>操作如下</h2><h2 id="备份源"><a href="#备份源" class="headerlink" title="备份源"></a>备份源</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mv /etc/yum.repos.d/CentOS-Base.repo /etc/yum.repos.d/CentOS-Base.repo.backup</span><br></pre></td></tr></table></figure>
<h2 id="下载源"><a href="#下载源" class="headerlink" title="下载源"></a>下载源</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget -O /etc/yum.repos.d/CentOS-Base.repo http://mirrors.aliyun.com/repo/Centos-7.repo</span><br></pre></td></tr></table></figure>
<h3 id="刷新缓存"><a href="#刷新缓存" class="headerlink" title="刷新缓存"></a>刷新缓存</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum makecache</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>centos 7 双网卡共享上网</title>
    <url>/2019/03/27/centos-7-%E5%8F%8C%E7%BD%91%E5%8D%A1%E5%85%B1%E4%BA%AB%E4%B8%8A%E7%BD%91/</url>
    <content><![CDATA[<h2 id="centos-7-为私网提共nat网关服务"><a href="#centos-7-为私网提共nat网关服务" class="headerlink" title="centos 7 为私网提共nat网关服务"></a>centos 7 为私网提共nat网关服务</h2><p>前言，公司的一个项目需要，只有三台服务器和一个上一家中标单位提供的公网IP，除此之外没有其余的硬件。公司的应用部署需求是，一台应用两台数据库，可能还有后期数据库从项目本身内网设备中取数据的需求。在没有网络设备的情况下，想到一个办法，因为服务器都是四网卡，可以从把一台服务器配置双网卡，一网卡配置公司IP，一网卡配置私网IP。私网IP连另外两台服务器接一个小的四口交换机连内网。</p>
<h2 id="配置如下"><a href="#配置如下" class="headerlink" title="配置如下"></a>配置如下</h2><h3 id="服务器一"><a href="#服务器一" class="headerlink" title="服务器一"></a>服务器一</h3><h4 id="IP配置"><a href="#IP配置" class="headerlink" title="IP配置"></a>IP配置</h4><ul>
<li>em1:218.108.88.88     项目公网地址</li>
<li>em2:10.10.100.10      项目私网网段</li>
</ul>
<h4 id="配置IP转发"><a href="#配置IP转发" class="headerlink" title="配置IP转发"></a>配置IP转发</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/sysctl.conf</span><br><span class="line"><span class="comment"># 追加一行内容</span></span><br><span class="line"><span class="comment"># Controls IP packet forwarding</span></span><br><span class="line">net.ipv4.ip_forward = 1</span><br></pre></td></tr></table></figure>
<h4 id="启用转发配置"><a href="#启用转发配置" class="headerlink" title="启用转发配置"></a>启用转发配置</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sysctl -w net.ipv4.ip_forward=1</span><br></pre></td></tr></table></figure>
<h4 id="防火墙域控制"><a href="#防火墙域控制" class="headerlink" title="防火墙域控制"></a>防火墙域控制</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=external --add-interface=em0 --permanent</span><br><span class="line">firewall-cmd --zone=internal --add-interface=em1 --permanent</span><br></pre></td></tr></table></figure>
<p>分别把公网的网卡添加到external域，私网网卡添加到internal域。</p>
<h4 id="更新防火墙配置"><a href="#更新防火墙配置" class="headerlink" title="更新防火墙配置"></a>更新防火墙配置</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --complete-reload</span><br></pre></td></tr></table></figure>
<h4 id="添加IP伪装"><a href="#添加IP伪装" class="headerlink" title="添加IP伪装"></a>添加IP伪装</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --zone=external --add-masquerade --permanent</span><br></pre></td></tr></table></figure>
<p>启用公网IP伪装。</p>
<h4 id="启用NAT规则"><a href="#启用NAT规则" class="headerlink" title="启用NAT规则"></a>启用NAT规则</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent --direct --passthrough ipv4 -t nat -I POSTROUTING -o em0 -j MASQUERADE -s 10.10.100.0/24</span><br></pre></td></tr></table></figure>
<p>启用私网段IP NAT转发。</p>
<h4 id="放通服务器上必要的端口"><a href="#放通服务器上必要的端口" class="headerlink" title="放通服务器上必要的端口"></a>放通服务器上必要的端口</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent --zone=internal --add-service=tftp</span><br><span class="line">firewall-cmd --permanent --zone=internal --add-service=ssh</span><br></pre></td></tr></table></figure>
<p>如tftp，ssh等。</p>
<h4 id="更新防火墙配置-1"><a href="#更新防火墙配置-1" class="headerlink" title="更新防火墙配置"></a>更新防火墙配置</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --complete-reload</span><br></pre></td></tr></table></figure>
<p>至此nat配置结束。</p>
<h3 id="服务器二配置"><a href="#服务器二配置" class="headerlink" title="服务器二配置"></a>服务器二配置</h3><p>配置服务器网串口IP为私网IP，如10.10.10.9。</p>
<blockquote>
<p>TYPE=Ethernet<br>PROXY_METHOD=none<br>BROWSER_ONLY=no<br>BOOTPROTO=static<br>DEFROUTE=yes<br>IPV4_FAILURE_FATAL=no<br>IPV6INIT=yes<br>IPV6_AUTOCONF=yes<br>IPV6_DEFROUTE=yes<br>IPV6_FAILURE_FATAL=no<br>IPV6_ADDR_GEN_MODE=stable-privacy<br>NAME=em1<br>UUID=09560695-2f1b-4052-854d-3d0840c00d6a<br>DEVICE=em1<br>ONBOOT=yes<br>IPADDR=10.10.100.9<br>NETMASK=255.255.255.0<br>GATEWAY=10.10.100.10<br>DNS1=223.5.5.5.5<br>DNS2=114.114.114.114<br>PREFIX=24<br>ZONE=internal  </p>
</blockquote>
<h3 id="服务器三配置"><a href="#服务器三配置" class="headerlink" title="服务器三配置"></a>服务器三配置</h3><p>参考服务器二，配置网关指向服务器一的私网IP。至此，三台服务器均可上网，服务器配置公司业务。</p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>centos 7 配置ntp服务</title>
    <url>/2019/03/31/centos-7-%E9%85%8D%E7%BD%AEntp%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<h2 id="CentOS配置ntp-server"><a href="#CentOS配置ntp-server" class="headerlink" title="CentOS配置ntp server"></a>CentOS配置ntp server</h2><p>网络时间协议 - NTP - 是运行在传输层 123 号端口的 UDP 协议，它允许计算机通过网络同步准确时间。随着时间的流逝，计算机内部时间会出现漂移，这会导致时间不一致问题，尤其是对于服务器和客户端日志文件，或者你想要复制服务器的资源或数据库。</p>
<h2 id="安装和配置ntp-serve"><a href="#安装和配置ntp-serve" class="headerlink" title="安装和配置ntp serve"></a>安装和配置ntp serve</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>可直接通过官方yum安装。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">sudo yum install ntp</span><br></pre></td></tr></table></figure>
<h3 id="选择NTP-SERVER"><a href="#选择NTP-SERVER" class="headerlink" title="选择NTP SERVER"></a>选择NTP SERVER</h3><p>NTP Public Pool Time Servers，安装NTP后，可以在NTP公共服务器池中选择所在地理位置的服务器列表。服务池链接[请戳][1]。</p>
<p>如中国的服务器池为：</p>
<blockquote>
<p>0.cn.pool.ntp.org<br>1.cn.pool.ntp.org<br>2.cn.pool.ntp.org<br>3.cn.pool.ntp.org  </p>
</blockquote>
<h3 id="更改ntp服务配置文件"><a href="#更改ntp服务配置文件" class="headerlink" title="更改ntp服务配置文件"></a>更改ntp服务配置文件</h3><p>配置文件为/etc/ntp.conf：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/ntp.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># For more information about this file, see the man pages</span></span><br><span class="line"><span class="comment"># ntp.conf(5), ntp_acc(5), ntp_auth(5), ntp_clock(5), ntp_misc(5), ntp_mon(5).</span></span><br><span class="line"></span><br><span class="line">driftfile /var/lib/ntp/drift</span><br><span class="line"></span><br><span class="line"><span class="comment"># Permit time synchronization with our time source, but do not</span></span><br><span class="line"><span class="comment"># permit the source to query or modify the service on this system.</span></span><br><span class="line">restrict default nomodify notrap nopeer noquery</span><br><span class="line"></span><br><span class="line"><span class="comment"># Permit all access over the loopback interface.  This could</span></span><br><span class="line"><span class="comment"># be tightened as well, but to do so would effect some of</span></span><br><span class="line"><span class="comment"># the administrative functions.</span></span><br><span class="line">restrict 127.0.0.1 </span><br><span class="line">restrict ::1</span><br><span class="line"></span><br><span class="line"><span class="comment"># Hosts on local network are less restricted.</span></span><br><span class="line"><span class="comment">#restrict 192.168.1.0 mask 255.255.255.0 nomodify notrap</span></span><br><span class="line"></span><br><span class="line">restrict 172.17.10.0 mask 255.255.255.0 nomodify notrap</span><br><span class="line">restrict 52.109.3.0 mask 255.255.255.0 nomodify notrap</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use public servers from the pool.ntp.org project.</span></span><br><span class="line"><span class="comment"># Please consider joining the pool (http://www.pool.ntp.org/join.html).</span></span><br><span class="line">server 0.cn.pool.ntp.org</span><br><span class="line">server 1.cn.pool.ntp.org</span><br><span class="line">server 2.cn.pool.ntp.org</span><br><span class="line">server 3.cn.pool.ntp.org</span><br><span class="line"></span><br><span class="line"><span class="comment">#broadcast 192.168.1.255 autokey        # broadcast server</span></span><br><span class="line"><span class="comment">#broadcastclient                        # broadcast client</span></span><br><span class="line"><span class="comment">#broadcast 224.0.1.1 autokey            # multicast server</span></span><br><span class="line"><span class="comment">#multicastclient 224.0.1.1              # multicast client</span></span><br><span class="line"><span class="comment">#manycastserver 239.255.254.254         # manycast server</span></span><br><span class="line"><span class="comment">#manycastclient 239.255.254.254 autokey # manycast client</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable public key cryptography.</span></span><br><span class="line"><span class="comment">#crypto</span></span><br><span class="line"></span><br><span class="line">includefile /etc/ntp/crypto/pw</span><br><span class="line"></span><br><span class="line"><span class="comment"># Key file containing the keys and key identifiers used when operating</span></span><br><span class="line"><span class="comment"># with symmetric key cryptography. </span></span><br><span class="line">keys /etc/ntp/keys</span><br><span class="line"></span><br><span class="line"><span class="comment"># Specify the key identifiers which are trusted.</span></span><br><span class="line"><span class="comment">#trustedkey 4 8 42</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Specify the key identifier to use with the ntpdc utility.</span></span><br><span class="line"><span class="comment">#requestkey 8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Specify the key identifier to use with the ntpq utility.</span></span><br><span class="line"><span class="comment">#controlkey 8</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable writing of statistics records.</span></span><br><span class="line"><span class="comment">#statistics clockstats cryptostats loopstats peerstats</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Disable the monitoring facility to prevent amplification attacks using ntpdc</span></span><br><span class="line"><span class="comment"># monlist command when default restrict does not include the noquery flag. See</span></span><br><span class="line"><span class="comment"># CVE-2013-5211 for more details.</span></span><br><span class="line"><span class="comment"># Note: Monitoring will not be disabled with the limited restriction flag.</span></span><br><span class="line"><span class="built_in">disable</span> monitor</span><br><span class="line"></span><br><span class="line">logfile /var/<span class="built_in">log</span>/ntp.log</span><br></pre></td></tr></table></figure>
<p>更改如上所示：</p>
<blockquote>
<p>restrict 172.17.10.0 mask 255.255.255.0 nomodify notrap</p>
</blockquote>
<p>nomodify notrap 语句意味着不允许你的客户端配置服务器或者作为同步时间的节点。</p>
<blockquote>
<p>logfile /var/log/ntp.log  </p>
</blockquote>
<p>如果需要用于错误处理的额外信息，以防你的 NTP 守护进程出现问题，添加一个 logfile 语句，用于记录所有 NTP 服务器问题到一个指定的日志文件。</p>
<p>保存配置文件。</p>
<h2 id="启用服务以及防火墙配置"><a href="#启用服务以及防火墙配置" class="headerlink" title="启用服务以及防火墙配置"></a>启用服务以及防火墙配置</h2><h3 id="开放NTP-SERVE端口"><a href="#开放NTP-SERVE端口" class="headerlink" title="开放NTP SERVE端口"></a>开放NTP SERVE端口</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo firewall-cmd --add-service=ntp --permanent</span><br><span class="line">sudo firewall-cmd --complete-reload</span><br></pre></td></tr></table></figure>
<h3 id="启用NTP-SERVER"><a href="#启用NTP-SERVER" class="headerlink" title="启用NTP SERVER"></a>启用NTP SERVER</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl start ntpd</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> ntpd</span><br><span class="line">sudo systemctl status ntpd</span><br><span class="line"></span><br><span class="line">● ntpd.service - Network Time Service</span><br><span class="line">   Loaded: loaded (/usr/lib/systemd/system/ntpd.service; enabled; vendor preset: disabled)</span><br><span class="line">   Active: active (running) since Sun 2019-03-31 14:33:27 CST; 23min ago</span><br><span class="line"> Main PID: 14926 (ntpd)</span><br><span class="line">   CGroup: /system.slice/ntpd.service</span><br><span class="line">           └─14926 /usr/sbin/ntpd -u ntp:ntp -g</span><br><span class="line"></span><br><span class="line">Mar 31 14:33:27 ntp-server systemd[1]: Starting Network Time Service...</span><br><span class="line">Mar 31 14:33:27 ntp-server systemd[1]: Started Network Time Service.</span><br><span class="line">Mar 31 14:33:27 ntp-server ntpd[14926]: proto: precision = 0.054 usec</span><br><span class="line">Mar 31 14:33:27 ntp-server ntpd[14926]: 0.0.0.0 c01d 0d kern kernel time sync enabled</span><br></pre></td></tr></table></figure>
<h2 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@ntp-server ~]<span class="comment"># ntpq -p</span></span><br><span class="line">     remote           refid      st t when poll reach   delay   offset  jitter</span><br><span class="line">==============================================================================</span><br><span class="line"> ntp1.ams1.nl.le 130.133.1.10     2 u  309  128  104  286.324  -30.954   2.799</span><br><span class="line">*electrode.felix 89.231.96.83     2 u   79  128  177  245.661   -4.341  11.315</span><br><span class="line"> 118.190.21.209  .STEP.          16 u    - 1024    0    0.000    0.000   0.000</span><br><span class="line"> biisoni.miuku.n .STEP.          16 u    - 1024    0    0.000    0.000   0.000</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@ntp-server ~]<span class="comment"># date -R</span></span><br><span class="line">Sun, 31 Mar 2019 15:06:12 +0800</span><br></pre></td></tr></table></figure>
<p>查询ntp服务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[root@ntp-server ~]<span class="comment"># ntpdate -q 0.cn.pool.ntp.org</span></span><br><span class="line">server 78.46.102.180, stratum 2, offset -0.004452, delay 0.25752</span><br><span class="line">server 51.15.238.170, stratum 0, offset 0.000000, delay 0.00000</span><br><span class="line">server 199.182.204.197, stratum 0, offset 0.000000, delay 0.00000</span><br><span class="line">server 94.130.49.186, stratum 3, offset -0.021914, delay 0.32487</span><br><span class="line">31 Mar 15:09:05 ntpdate[24663]: adjust time server 78.46.102.180 offset -0.004452 sec</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>centos 7上安装webmin</title>
    <url>/2019/01/15/centos-7%E4%B8%8A%E5%AE%89%E8%A3%85webadmin/</url>
    <content><![CDATA[<h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>webmin是一个基于浏览器界面的类Unix系统配置管理工具。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://prdownloads.sourceforge.net/webadmin/webmin-1.900-1.noarch.rpm</span><br></pre></td></tr></table></figure>
<h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install perl perl-Net-SSLeay openssl perl-IO-Tty perl-Encode-Detect</span><br></pre></td></tr></table></figure>
<h3 id="安装程序"><a href="#安装程序" class="headerlink" title="安装程序"></a>安装程序</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rpm -U webmin-1.900-1.noarch.rpm</span><br></pre></td></tr></table></figure>
<p>程序安装位置：/usr/libexec/webmin</p>
<p>程序默认通过https访问，端口10000 TCP，按访问需求放通。</p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>centos+rsyslog+loganalyzer</title>
    <url>/2019/08/07/centos-rsyslog-loganalyzer/</url>
    <content><![CDATA[<h2 id="Rsyslog-Analyzer搭建"><a href="#Rsyslog-Analyzer搭建" class="headerlink" title="Rsyslog+Analyzer搭建"></a>Rsyslog+Analyzer搭建</h2><p>一个项目上需求，需要内部网络上设备的日志存储满足180天，且支持日志报表导出。于是想到搭建一个日志应用。再加上日志报表分析，想到一个组合，rsyslog+loganalyzer。</p>
<p>操作如下：</p>
<h3 id="系统环境"><a href="#系统环境" class="headerlink" title="系统环境"></a>系统环境</h3><p>CentOS Linux release 7.6.1810 (Core) </p>
<h3 id="依赖安装"><a href="#依赖安装" class="headerlink" title="依赖安装"></a>依赖安装</h3><h4 id="设置时间同步"><a href="#设置时间同步" class="headerlink" title="设置时间同步"></a>设置时间同步</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install ntpdate epel-release vim curl wget</span><br><span class="line">ntpdate cn.ntp.org.cn</span><br><span class="line">hwclock -w</span><br></pre></td></tr></table></figure>
<p>配置crontab任务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/crontab</span><br><span class="line">00 23 * * * ntpdate cn.ntp.org.cn</span><br><span class="line">30 00 * * * hwclock -w</span><br></pre></td></tr></table></figure>
<h4 id="安装apache、php、mariadb-server"><a href="#安装apache、php、mariadb-server" class="headerlink" title="安装apache、php、mariadb-server"></a>安装apache、php、mariadb-server</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install php php-mysql php-gd php-mbstring php-mcrypt php-devel php-xml mariadb-server httpd</span><br></pre></td></tr></table></figure>
<p>设置开机启动</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> httpd</span><br><span class="line">systemctl <span class="built_in">enable</span> mariadb</span><br><span class="line">systemctl start httpd</span><br><span class="line">systemctl start mariadb</span><br></pre></td></tr></table></figure>
<p>配置mariadb-server</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql_secure_installation</span><br></pre></td></tr></table></figure>
<h4 id="安装rsyslog-mysql"><a href="#安装rsyslog-mysql" class="headerlink" title="安装rsyslog-mysql"></a>安装rsyslog-mysql</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install rsyslog rsyslog-mysql -y</span><br></pre></td></tr></table></figure>
<h4 id="创建rsyslog数据库和用户"><a href="#创建rsyslog数据库和用户" class="headerlink" title="创建rsyslog数据库和用户"></a>创建rsyslog数据库和用户</h4><p>导入rsyslog数据库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -u root -p &lt; /usr/share/doc/rsyslog-8.24.0/mysql-createDB.sql </span><br></pre></td></tr></table></figure>
<p>创建rsyslog用户，并授权</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br><span class="line">mysql&gt; GRANT ALL ON  Syslog.* TO <span class="string">&#x27;rsyslog&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class="string">&#x27;MYSQLPASSOWRD&#x27;</span>;</span><br><span class="line">mysql&gt; FLUSH PRIVILEGES;</span><br><span class="line">mysql&gt; <span class="built_in">exit</span>;</span><br></pre></td></tr></table></figure>
<h4 id="设置rsyslog-mysql"><a href="#设置rsyslog-mysql" class="headerlink" title="设置rsyslog-mysql"></a>设置rsyslog-mysql</h4><p>修改rsyslog配置文件，启用rsyslog mysql 模块，配置mysql 连接信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vim /etc/rsyslog.conf</span><br><span class="line"><span class="comment"># 添加下面的信息</span></span><br><span class="line"><span class="variable">$ModLoad</span> ommysql</span><br><span class="line">*.* :ommysql:127.0.0.1,Syslog,rsyslog,MYSQLPASSWORD</span><br></pre></td></tr></table></figure>
<p>最终如下所示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># rsyslog configuration file</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># For more information see /usr/share/doc/rsyslog-*/rsyslog_conf.html</span></span><br><span class="line"><span class="comment"># If you experience problems, see http://www.rsyslog.com/doc/troubleshoot.html</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#### MODULES ####</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The imjournal module bellow is now used as a message source instead of imuxsock.</span></span><br><span class="line"><span class="variable">$ModLoad</span> imuxsock <span class="comment"># provides support for local system logging (e.g. via logger command)</span></span><br><span class="line"><span class="variable">$ModLoad</span> imjournal <span class="comment"># provides access to the systemd journal</span></span><br><span class="line"><span class="variable">$ModLoad</span> imklog <span class="comment"># reads kernel messages (the same are read from journald)</span></span><br><span class="line"><span class="variable">$ModLoad</span> immark  <span class="comment"># provides --MARK-- message capability</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Provides UDP syslog reception</span></span><br><span class="line"><span class="variable">$ModLoad</span> imudp</span><br><span class="line"><span class="variable">$UDPServerRun</span> 514</span><br><span class="line"></span><br><span class="line"><span class="comment"># Provides TCP syslog reception</span></span><br><span class="line"><span class="variable">$ModLoad</span> imtcp</span><br><span class="line"><span class="variable">$InputTCPServerRun</span> 514</span><br><span class="line"><span class="comment"># 新启用的rsyslog mysql模块</span></span><br><span class="line"><span class="variable">$Modload</span> ommysql</span><br><span class="line">*.* :ommysql:localhost,Syslog,rsyslog,MYSQLPASSWORD</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#### GLOBAL DIRECTIVES ####</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Where to place auxiliary files</span></span><br><span class="line"><span class="variable">$WorkDirectory</span> /var/lib/rsyslog</span><br><span class="line"></span><br><span class="line"><span class="comment"># Use default timestamp format</span></span><br><span class="line"><span class="variable">$ActionFileDefaultTemplate</span> RSYSLOG_TraditionalFileFormat</span><br><span class="line"></span><br><span class="line"><span class="comment"># File syncing capability is disabled by default. This feature is usually not required,</span></span><br><span class="line"><span class="comment"># not useful and an extreme performance hit</span></span><br><span class="line"><span class="comment">#$ActionFileEnableSync on</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Include all config files in /etc/rsyslog.d/</span></span><br><span class="line"><span class="variable">$IncludeConfig</span> /etc/rsyslog.d/*.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># Turn off message reception via local log socket;</span></span><br><span class="line"><span class="comment"># local messages are retrieved through imjournal now.</span></span><br><span class="line"><span class="variable">$OmitLocalLogging</span> on</span><br><span class="line"></span><br><span class="line"><span class="comment"># File to store the position in the journal</span></span><br><span class="line"><span class="variable">$IMJournalStateFile</span> imjournal.state</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#### RULES ####</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Log all kernel messages to the console.</span></span><br><span class="line"><span class="comment"># Logging much else clutters up the screen.</span></span><br><span class="line"><span class="comment">#kern.*                                                 /dev/console</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Log anything (except mail) of level info or higher.</span></span><br><span class="line"><span class="comment"># Don&#x27;t log private authentication messages!</span></span><br><span class="line">*.info;mail.none;authpriv.none;cron.none                /var/<span class="built_in">log</span>/messages</span><br><span class="line"></span><br><span class="line"><span class="comment"># The authpriv file has restricted access.</span></span><br><span class="line">authpriv.*                                              /var/<span class="built_in">log</span>/secure</span><br><span class="line"></span><br><span class="line"><span class="comment"># Log all the mail messages in one place.</span></span><br><span class="line">mail.*                                                  -/var/<span class="built_in">log</span>/maillog</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># Log cron stuff</span></span><br><span class="line">cron.*                                                  /var/<span class="built_in">log</span>/cron</span><br><span class="line"></span><br><span class="line"><span class="comment"># Everybody gets emergency messages</span></span><br><span class="line">*.emerg                                                 :omusrmsg:*</span><br><span class="line"></span><br><span class="line"><span class="comment"># Save news errors of level crit and higher in a special file.</span></span><br><span class="line">uucp,news.crit                                          /var/<span class="built_in">log</span>/spooler</span><br><span class="line"></span><br><span class="line"><span class="comment"># Save boot messages also to boot.log</span></span><br><span class="line">local7.*                                                /var/<span class="built_in">log</span>/boot.log</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ### begin forwarding rule ###</span></span><br><span class="line"><span class="comment"># The statement between the begin ... end define a SINGLE forwarding</span></span><br><span class="line"><span class="comment"># rule. They belong together, do NOT split them. If you create multiple</span></span><br><span class="line"><span class="comment"># forwarding rules, duplicate the whole block!</span></span><br><span class="line"><span class="comment"># Remote Logging (we use TCP for reliable delivery)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># An on-disk queue is created for this action. If the remote host is</span></span><br><span class="line"><span class="comment"># down, messages are spooled to disk and sent when it is up again.</span></span><br><span class="line"><span class="comment">#$ActionQueueFileName fwdRule1 # unique name prefix for spool files</span></span><br><span class="line"><span class="comment">#$ActionQueueMaxDiskSpace 1g   # 1gb space limit (use as much as possible)</span></span><br><span class="line"><span class="comment">#$ActionQueueSaveOnShutdown on # save messages to disk on shutdown</span></span><br><span class="line"><span class="comment">#$ActionQueueType LinkedList   # run asynchronously</span></span><br><span class="line"><span class="comment">#$ActionResumeRetryCount -1    # infinite retries if host is down</span></span><br><span class="line"><span class="comment"># remote host is: name/ip:port, e.g. 192.168.0.1:514, port optional</span></span><br><span class="line"><span class="comment">#*.* @@remote-host:514</span></span><br><span class="line"><span class="comment"># ### end of the forwarding rule ###</span></span><br></pre></td></tr></table></figure>
<h4 id="重新启用rsyslog服务"><a href="#重新启用rsyslog服务" class="headerlink" title="重新启用rsyslog服务"></a>重新启用rsyslog服务</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart rsyslog</span><br></pre></td></tr></table></figure>
<p>至此，rsyslog的日志存储已经可以在mysql中查看，接下来我们还需要对存储的日志可视化操作。即安装loganalyzer。</p>
<h3 id="安装loganalyzer"><a href="#安装loganalyzer" class="headerlink" title="安装loganalyzer"></a>安装loganalyzer</h3><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~/download</span><br><span class="line">wget http://download.adiscon.com/loganalyzer/loganalyzer-4.1.7.tar.gz</span><br><span class="line">tar -xzf loganalyzer-4.1.7.tar.gz</span><br></pre></td></tr></table></figure>
<p>把安装源文件复制到本地站点目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp -r /loganalyzer-4.1.7/src /var/www/html/loganalyzer</span><br></pre></td></tr></table></figure>
<h4 id="创建loganalyzer的配置文件"><a href="#创建loganalyzer的配置文件" class="headerlink" title="创建loganalyzer的配置文件"></a>创建loganalyzer的配置文件</h4><p>创建配置文件的时候，先把selinux关闭，不然后面写入配置文件的时候会有问题。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /var/www/html/loganalyzer</span><br><span class="line">touch config.php</span><br><span class="line">chown apache:apache ./*</span><br><span class="line">chmod 666 config.php</span><br></pre></td></tr></table></figure>
<h4 id="安装引导"><a href="#安装引导" class="headerlink" title="安装引导"></a>安装引导</h4><p>打开安装引导页面</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">http://server-ip/loganalyzer/install.php</span><br></pre></td></tr></table></figure>
<p>根据引导页面开始安装，安装过程中，如果遇到config.php的问题，参考selinux配置，即需要关闭，重启后操作。</p>
<p>连接数据库后，有一个配置创建第一个rsyslog信息源。注意表名SystemEvents这个表名，不确定的，可以登录mysql查看Syslog表名确认。不然这里的创建后面登录后，查不到日志信息。</p>
<p>引导页面安装结束，即可以看到日志。</p>
<p>如果查询不到日志，提示以下错误：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">“Could not find the configured table, maybe misspelled or the table names are <span class="keyword">case</span> sensitive”</span><br></pre></td></tr></table></figure>
<p>解决方法如下：</p>
<p>更改loganalyzer 的config.php文件，更改如下行内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="variable">$CFG</span>[‘Sources’][‘Source1’][‘DBTableName’] = ‘systemevents’; =&gt; ‘SystemEvents’</span><br></pre></td></tr></table></figure>
<p>更新数据库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -u rsyslog -p</span><br><span class="line">mysql&gt; update logcon_sources <span class="built_in">set</span> DBTableName =’SystemEvents’ <span class="built_in">where</span> ID=1;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line">Rows matched: 1 Changed: 1 Warnings: 0</span><br></pre></td></tr></table></figure>
<h3 id="配置其它主机的日志"><a href="#配置其它主机的日志" class="headerlink" title="配置其它主机的日志"></a>配置其它主机的日志</h3><p>添加一台主机，把日志存储到laganalyzer主机上，只需要配置主机的rsyslog配置文件，配置文件如下例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># An on-disk queue is created for this action. If the remote host is</span></span><br><span class="line"><span class="comment"># down, messages are spooled to disk and sent when it is up again.</span></span><br><span class="line"><span class="comment">#$ActionQueueFileName fwdRule1 # unique name prefix for spool files</span></span><br><span class="line"><span class="comment">#$ActionQueueMaxDiskSpace 1g   # 1gb space limit (use as much as possible)</span></span><br><span class="line"><span class="comment">#$ActionQueueSaveOnShutdown on # save messages to disk on shutdown</span></span><br><span class="line"><span class="comment">#$ActionQueueType LinkedList   # run asynchronously</span></span><br><span class="line"><span class="comment">#$ActionResumeRetryCount -1    # infinite retries if host is down</span></span><br><span class="line"><span class="comment"># remote host is: name/ip:port, e.g. 192.168.0.1:514, port optional</span></span><br><span class="line"><span class="comment">#*.* @@remote-host:514</span></span><br><span class="line">*.* @loganalyzer-IP:514</span><br><span class="line"><span class="comment"># ### end of the forwarding rule ###</span></span><br></pre></td></tr></table></figure>
<p>开放loganalyzer服务器的514端口</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent --add-port=514/tcp</span><br><span class="line">firewall-cmd --permanent --add-port=514/udp</span><br><span class="line">firewall-cmd --complete-reload</span><br></pre></td></tr></table></figure>
<p><img src="https://blog.ywmy.xyz/linux/Loganalyzer.png" alt="loganzlyzer"></p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>centos samba配置</title>
    <url>/2018/10/21/centos-samba%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="centos-samba配置小记"><a href="#centos-samba配置小记" class="headerlink" title="centos samba配置小记"></a>centos samba配置小记</h2><h2 id="基本更新"><a href="#基本更新" class="headerlink" title="基本更新"></a>基本更新</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum update</span><br><span class="line">yum install epel-release</span><br><span class="line">yum install wget curl vim</span><br></pre></td></tr></table></figure>
<h2 id="安装samba"><a href="#安装samba" class="headerlink" title="安装samba"></a>安装samba</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install samba samba-server samba-common</span><br><span class="line">systemctl start smb</span><br><span class="line">systemctl <span class="built_in">enable</span> smb</span><br></pre></td></tr></table></figure>
<h2 id="配置需求"><a href="#配置需求" class="headerlink" title="配置需求"></a>配置需求</h2><p>部门通过账号登录共享服务器并访问部门共享(如创建ui部门和运维部门)。配置参考如下：</p>
<h3 id="以部门创建用户"><a href="#以部门创建用户" class="headerlink" title="以部门创建用户"></a>以部门创建用户</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">useradd ui -d /home/ui -s /usr/sbin/nologin -m</span><br><span class="line">useradd ops -d /home/ops -s /usr/sbin/nologin -m</span><br></pre></td></tr></table></figure>
<p>-d:指定用户目录<br>-s:指定登录shell（nologin禁止登录）<br>-m:无目录创建</p>
<h3 id="给samba用户添加密码"><a href="#给samba用户添加密码" class="headerlink" title="给samba用户添加密码"></a>给samba用户添加密码</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pdbedit -a ui</span><br><span class="line">pdbedit -a ops</span><br></pre></td></tr></table></figure>
<p>pdbedit -a username：新建一个samba帐户<br>pdbedit -x username：删除一个samba帐户<br>pdbedit -L：列出samba帐户，读取passdb.tdb数据库文件<br>pdbedit -Lv：列出samba用户列表的详细信息<br>pdbedit -c “[D]” -u username：暂停该samba用户账号<br>pdbedit -c “[]” -u username：恢复该samba用户账号</p>
<p>pdbedit -Lv详细配置如图</p>
<p><img src="https://blog.ywmy.xyz/pdbedit-Lv.png" alt="pdbedit -Lv"></p>
<h3 id="更改samba配置文件"><a href="#更改samba配置文件" class="headerlink" title="更改samba配置文件"></a>更改samba配置文件</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cp /etc/samba/smb.config /etc/samba/smb.config-backup</span><br><span class="line">vim /etc/samba/smb.config</span><br></pre></td></tr></table></figure>
<p>配置内容如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># See smb.conf.example for a more detailed config file or</span></span><br><span class="line"><span class="comment"># read the smb.conf manpage.</span></span><br><span class="line"><span class="comment"># Run &#x27;testparm&#x27; to verify the config is correct after</span></span><br><span class="line"><span class="comment"># you modified it.</span></span><br><span class="line"></span><br><span class="line">[global]</span><br><span class="line">        workgroup = SAMBA</span><br><span class="line">        security = user</span><br><span class="line"></span><br><span class="line">        passdb backend = tdbsam</span><br><span class="line"></span><br><span class="line">        printing = cups</span><br><span class="line">        printcap name = cups</span><br><span class="line">        load printers = yes</span><br><span class="line">        cups options = raw</span><br><span class="line"></span><br><span class="line">[homes]</span><br><span class="line">        comment = Home Directories</span><br><span class="line">        valid users = %S, %D%w%S</span><br><span class="line">        browseable = No</span><br><span class="line">        <span class="built_in">read</span> only = No</span><br><span class="line">        inherit acls = Yes</span><br><span class="line"></span><br><span class="line">[printers]</span><br><span class="line">        comment = All Printers</span><br><span class="line">        path = /var/tmp</span><br><span class="line">        printable = Yes</span><br><span class="line">        create mask = 0600</span><br><span class="line">        browseable = No</span><br><span class="line"></span><br><span class="line">[<span class="built_in">print</span>$]</span><br><span class="line">        comment = Printer Drivers</span><br><span class="line">        path = /var/lib/samba/drivers</span><br><span class="line">        write list = @printadmin root</span><br><span class="line">        force group = @printadmin</span><br><span class="line">        create mask = 0664</span><br><span class="line">        directory mask = 0775</span><br><span class="line"></span><br><span class="line">[ui]</span><br><span class="line">        comment = ui</span><br><span class="line">        path = /home/ui</span><br><span class="line">        browseable = yes</span><br><span class="line">        write list = ui</span><br><span class="line">        writable = yes</span><br><span class="line">        <span class="built_in">read</span> only = no</span><br><span class="line">        valid users = ui</span><br><span class="line"></span><br><span class="line">[ops]</span><br><span class="line">        comment = ops</span><br><span class="line">        path = /home/ops</span><br><span class="line">        browseable = yes</span><br><span class="line">        write list = ops</span><br><span class="line">        writable = yes</span><br><span class="line">        <span class="built_in">read</span> only = no</span><br><span class="line">        valid users = ops</span><br></pre></td></tr></table></figure>
<p>测试samba用例如下如图</p>
<p><img src="https://blog.ywmy.xyz/ywmy/linuxtestparm.png" alt="testpram"></p>
<h3 id="防火墙放开samba服务端口"><a href="#防火墙放开samba服务端口" class="headerlink" title="防火墙放开samba服务端口"></a>防火墙放开samba服务端口</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent --add-service=samba</span><br><span class="line">firewall-cmd --reload</span><br></pre></td></tr></table></figure>
<h3 id="selinux和文件夹访问权限"><a href="#selinux和文件夹访问权限" class="headerlink" title="selinux和文件夹访问权限"></a>selinux和文件夹访问权限</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">setsebool -P samba_enable_home_dirs on</span><br><span class="line"></span><br><span class="line">chown -Rf ui.ui /home/ui</span><br><span class="line">chown -Rf ops.ops /home/ops</span><br></pre></td></tr></table></figure>
<p>查看firewall开放端口信息如图</p>
<p><img src="https://blog.ywmy.xyz/ywmy/linuxfirewall-cmd.png" alt="firewall-cmd"></p>
<h2 id="连接测试"><a href="#连接测试" class="headerlink" title="连接测试"></a>连接测试</h2><p>windows平台可以直接在支持中输入\192.168.31.250\ui。输入用户名和密码，进入samba目录。测试如图所示，</p>
<p><img src="https://blog.ywmy.xyz/ywmy/linuxsamba_test.PNG" alt="samba测试"><br>完成连接后，可以在资源管理器中添加映射网络驱动。将共享直接挂载到磁盘目录。</p>
<p>linux，可以在文件管理器中输入smb://192.168.31.250/ui,选择已注册用户，输入用户名和密码，完成连接。<br>也可以通过挂载来完成文件目录的访问，操作如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir ui</span><br><span class="line">sudo mount -t cifs -o username=ui,password=<span class="string">&quot;password&quot;</span> //192.168.31.250/ui /home/yourname/ui</span><br></pre></td></tr></table></figure>
<p>取消挂载</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo umount /home/yourname/ui</span><br></pre></td></tr></table></figure>
<p>挂载后如图片</p>
<p><img src="https://blog.ywmy.xyz/ywmy/linuxlinux_mount.png" alt="挂载"><br>所示。</p>
<h2 id="特别注意"><a href="#特别注意" class="headerlink" title="特别注意"></a>特别注意</h2><p>在创建共享的过程中，防火墙和selinux这两个是一定要注意的，端口开放，和selinux的权配置会导致访问的权限问题。</p>
]]></content>
      <tags>
        <tag>linux samba</tag>
      </tags>
  </entry>
  <entry>
    <title>centos 安装增强功能</title>
    <url>/2019/02/20/centos-%E5%AE%89%E8%A3%85%E5%A2%9E%E5%BC%BA%E5%8A%9F%E8%83%BD/</url>
    <content><![CDATA[<h2 id="virtualbox-centos-安装增强功能"><a href="#virtualbox-centos-安装增强功能" class="headerlink" title="virtualbox centos 安装增强功能"></a>virtualbox centos 安装增强功能</h2><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>系统：ubuntu 18.04<br>虚拟机：virtualbox</p>
<h2 id="操作步骤"><a href="#操作步骤" class="headerlink" title="操作步骤"></a>操作步骤</h2><h3 id="挂载虚拟增强工具包镜像"><a href="#挂载虚拟增强工具包镜像" class="headerlink" title="挂载虚拟增强工具包镜像"></a>挂载虚拟增强工具包镜像</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir vbox_tool</span><br><span class="line">mount /dev/cdrom ./vbox_tool</span><br></pre></td></tr></table></figure>
<h3 id="安装信赖关系"><a href="#安装信赖关系" class="headerlink" title="安装信赖关系"></a>安装信赖关系</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum update kernel //升级内核</span><br><span class="line">sudo yum update</span><br><span class="line">sudo yum install bzip2 tar gcc make perl kernel-devel kernel-headers</span><br></pre></td></tr></table></figure>
<p>最小化安装的centos安装增强功能时，会提示依赖如下图所示：</p>
<p><img src="https://blog.ywmy.xyz/linuxcentos_vbox_addition_install.png" alt="centos_vbox_install_adition"></p>
<p>注意内核版本的匹配问题，安装完成后，重启虚拟机。参考:<a href="1">链接</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">uname -r</span><br><span class="line">yum install kernel-devel-`uname -r`</span><br><span class="line">yum install kernel-headers-`uname -r`</span><br><span class="line">rpm -qa | grep -e kernel-devel -e kernel-headers</span><br></pre></td></tr></table></figure>
<p>如果遇到内核版本与header版本不一致的，可以直接导出内核的环境变量：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">export</span> KERN_DIR=/usr/src/kernels/$(uname -r)</span><br></pre></td></tr></table></figure>
<p>建议重启虚拟机。</p>
<h3 id="安装增强功能"><a href="#安装增强功能" class="headerlink" title="安装增强功能"></a>安装增强功能</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./VBoxLinuxAdditions.run</span><br></pre></td></tr></table></figure>
<p>完成安装：</p>
<p><img src="https://blog.ywmy.xyz/linuxadditions_installed.png" alt="additions_installed"></p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>centos安装mariadb</title>
    <url>/2018/08/20/centos%E5%AE%89%E8%A3%85mariadb/</url>
    <content><![CDATA[<h2 id="centos安装mariadb操作小记"><a href="#centos安装mariadb操作小记" class="headerlink" title="centos安装mariadb操作小记"></a>centos安装mariadb操作小记</h2><h2 id="0x01-安装"><a href="#0x01-安装" class="headerlink" title="0x01:安装"></a>0x01:安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># yum install mariadb mariadb-server</span></span><br></pre></td></tr></table></figure>
<p>安装过程中输入y确认安装mariadb相关的包。</p>
<h2 id="0x02-启用"><a href="#0x02-启用" class="headerlink" title="0x02:启用"></a>0x02:启用</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># systemctl start mariadb</span></span><br><span class="line"><span class="comment"># systemclt enable mariadb</span></span><br><span class="line"><span class="comment"># systemctl status mariadb</span></span><br></pre></td></tr></table></figure>
<p>启用后的状态应如下图所示内容：</p>
<p><img src="https://blog.ywmy.xyz/ywmy/linuxmariadb.png" alt="mariadb status"></p>
<h2 id="0x03-安全配置"><a href="#0x03-安全配置" class="headerlink" title="0x03:安全配置"></a>0x03:安全配置</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># mysql_secure_installation</span></span><br></pre></td></tr></table></figure>
<p>配置参考下图所示：</p>
<p><img src="https://blog.ywmy.xyz/mysql_secure_installation.png" alt="mysql_secure_installation"></p>
<p>以上图中，设置 MariaDB 的 root 账户密码（选y设置），禁用 root 远程登录，删除测试数据库以及测试帐号，最后需要使用下面的命令重新加载权限。</p>
<h2 id="0x04-登录数据库"><a href="#0x04-登录数据库" class="headerlink" title="0x04:登录数据库"></a>0x04:登录数据库</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># mysql -u root -p</span></span><br></pre></td></tr></table></figure>
<p>连接登录后，如下图所示：<br><img src="https://blog.ywmy.xyz/ywmy/linux_login_database.png" alt="登录数据库"></p>
]]></content>
      <tags>
        <tag>database</tag>
      </tags>
  </entry>
  <entry>
    <title>centos默认防火墙使用指南</title>
    <url>/2018/10/20/centos%E9%BB%98%E8%AE%A4%E9%98%B2%E7%81%AB%E5%A2%99%E4%BD%BF%E7%94%A8%E6%8C%87%E5%8D%97/</url>
    <content><![CDATA[<h2 id="firewall-cmd操作小记"><a href="#firewall-cmd操作小记" class="headerlink" title="firewall-cmd操作小记"></a>firewall-cmd操作小记</h2><h2 id="0x01-基本操作"><a href="#0x01-基本操作" class="headerlink" title="0x01:基本操作"></a>0x01:基本操作</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># systemctl start firewalld //启动</span></span><br><span class="line"><span class="comment"># systemctl status firewalld //状态</span></span><br><span class="line"><span class="comment"># systemctl disable firewalld //禁用</span></span><br><span class="line"><span class="comment"># systemctl stop firewalld //停止</span></span><br></pre></td></tr></table></figure>
<h2 id="0x02-systemctl"><a href="#0x02-systemctl" class="headerlink" title="0x02:systemctl"></a>0x02:systemctl</h2><p>systemctl是centos中必不可少的管理工具，它具备service和chkconfig的所有功能</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># systemctl start firewalld.service //启动某个服务</span></span><br><span class="line"><span class="comment"># systemctl stop firewalld.service //关闭某个服务</span></span><br><span class="line"><span class="comment"># systemctl restart firewalld.service //重启某个服务</span></span><br><span class="line"><span class="comment"># systemctl status firewalld.service //显示某个服务的状态</span></span><br><span class="line"><span class="comment"># systemctl enable firewalld.service //开机时随机自启动</span></span><br><span class="line"><span class="comment"># systemctl disable firewalld.service //禁止开机启动</span></span><br><span class="line"><span class="comment"># systemctl is-enabled firewalld.service //查看是否开机启动</span></span><br><span class="line"><span class="comment"># systemctl list-unit-files|grep enabled //查看已经启动的服列表</span></span><br><span class="line"><span class="comment"># systemctl --failed //查看启动失败的服务列表</span></span><br></pre></td></tr></table></figure>
<h2 id="0x03-基本配置firewall-cmd"><a href="#0x03-基本配置firewall-cmd" class="headerlink" title="0x03:基本配置firewall-cmd"></a>0x03:基本配置firewall-cmd</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># firewall-cmd --version //查看防火墙版本</span></span><br><span class="line"><span class="comment"># firewall-cmd --help //查看命令操作帮助</span></span><br><span class="line"><span class="comment"># firewall-cmd --state //显示当前状态</span></span><br><span class="line"><span class="comment"># firewall-cmd --zone=public --list-ports //查看所有打开运行的端口</span></span><br><span class="line"><span class="comment"># firewall-cmd --reload //不重启立即加载</span></span><br><span class="line"><span class="comment"># firewall-cmd --list-all-zones | more //查看区域信息情况</span></span><br><span class="line"><span class="comment"># firewall-cmd --get-zone-of-interface=eth0 //查看指定接口所属区域</span></span><br><span class="line"><span class="comment"># firewall-cmd --panic-on //拒绝所有包</span></span><br><span class="line"><span class="comment"># firewall-cmd --panic-off //取消拒绝状态</span></span><br><span class="line"><span class="comment"># firewall-cmd --query-panic //查看是否拒绝</span></span><br></pre></td></tr></table></figure>
<h2 id="0x04-基本举例"><a href="#0x04-基本举例" class="headerlink" title="0x04:基本举例"></a>0x04:基本举例</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># firewall-cmd --zone=public --add-port=3306/tcp --permanent //添加3306端口（--permanent）永久生效，没有此参数重启后失效</span></span><br><span class="line"><span class="comment"># firewall-cmd --reload //不重启立即加载</span></span><br><span class="line"><span class="comment"># firewall-cmd --zone= public --query-port=3306/tcp //查看加入3306端口状态</span></span><br><span class="line"><span class="comment"># firewall-cmd --zone= public --remove-port=3306/tcp --permanent //删除刚刚加入的防火墙规则3306</span></span><br><span class="line"><span class="comment"># firewall-cmd --permanent --remove-icmp-block=echo-request //删除禁ping</span></span><br><span class="line"><span class="comment"># firewall-cmd --permanent --add-icmp-block=echo-request //开启禁ping</span></span><br><span class="line"><span class="comment"># firewall-cmd --get-service //查看已被允许的信息</span></span><br></pre></td></tr></table></figure>
<h2 id="具体管理规则"><a href="#具体管理规则" class="headerlink" title="具体管理规则"></a>具体管理规则</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"> <span class="comment"># firewall-cmd --help</span></span><br><span class="line">firewall-cmd高级功能可以到官方资料库了解更多信息。</span><br><span class="line">https://fedoraproject.org/wiki/FirewallD/zh-cn</span><br><span class="line">https://access.redhat.com/documentation/zh-CN/Red_Hat_Enterprise_Linux/7/html/Security_Guide/sec-Using_Firewalls.html</span><br><span class="line">https://www.ibm.com/developerworks/cn/linux/1507_caojh/</span><br></pre></td></tr></table></figure>]]></content>
  </entry>
  <entry>
    <title>cisco 恢复 enable 密码</title>
    <url>/2021/02/01/cisco-%E6%81%A2%E5%A4%8D-enable-%E5%AF%86%E7%A0%81/</url>
    <content><![CDATA[<h2 id="cisco-4507-enable-密码恢复"><a href="#cisco-4507-enable-密码恢复" class="headerlink" title="cisco 4507 enable 密码恢复"></a>cisco 4507 enable 密码恢复</h2><p>公司项目上的一个问题，一台cisco 4507的交换机，被其它维护单位更改了enable密码，后面问到是否有更改密码，对方坚持说没有改过。着急配置，没办法只能着手恢复enable密码。</p>
<p><strong>Tips:恢复enable密码的操作不会丢失配置信息。建议通过tftp备份配置后操作。</strong></p>
<h3 id="1、重启设备加电"><a href="#1、重启设备加电" class="headerlink" title="1、重启设备加电"></a>1、重启设备加电</h3><p>重启后进入引导界面，5秒内按住<strong>Ctrl-C</strong>键，防止自动引导，进入ROM监视提示模式。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">!--- Here, you power cycle the switch.</span><br><span class="line"></span><br><span class="line">********************************************************** </span><br><span class="line"> *                                                        * </span><br><span class="line"> * Welcome to ROM Monitor <span class="keyword">for</span> WS-X4014 System.            * </span><br><span class="line"> * Copyright (c) 1999-2000, 2001 by Cisco Systems, Inc.   * </span><br><span class="line"> * All rights reserved.                                   * </span><br><span class="line"> *                                                        * </span><br><span class="line"> **********************************************************</span><br><span class="line"> </span><br><span class="line"> ROM Monitor Program Version 12.1(10r)EY(1.21) </span><br><span class="line"></span><br><span class="line"> Board <span class="built_in">type</span> 1, Board revision 7</span><br><span class="line"> Swamp FPGA revision 16, Dagobah FPGA revision 43 </span><br><span class="line"> </span><br><span class="line"> Timer interrupt <span class="built_in">test</span> passed.</span><br><span class="line"></span><br><span class="line"> MAC Address  : 00-02-b9-83-af-fe </span><br><span class="line"> IP Address   : 172.16.84.122 </span><br><span class="line"> Netmask      : 255.255.255.0 </span><br><span class="line"> Gateway      : 172.16.84.1 </span><br><span class="line"> TftpServer   : Not <span class="built_in">set</span>. </span><br><span class="line"> Main Memory  : 256 MBytes</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> ***** The system will autoboot <span class="keyword">in</span> 5 seconds *****</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> Type control-C to prevent autobooting. </span><br><span class="line"></span><br><span class="line">!--- At this point, press Ctrl-C.</span><br><span class="line"></span><br><span class="line">Autoboot cancelled......... please <span class="built_in">wait</span>!!!</span><br><span class="line">Autoboot cancelled......... please <span class="built_in">wait</span>!!!</span><br><span class="line">rommon 1 &gt; [interrupt]  </span><br><span class="line"></span><br><span class="line">!--- The module ended <span class="keyword">in</span> the ROMmon.</span><br><span class="line"></span><br><span class="line">rommon 1 &gt; [interrupt]</span><br></pre></td></tr></table></figure>
<h3 id="2、在common模式下使用confreg配置"><a href="#2、在common模式下使用confreg配置" class="headerlink" title="2、在common模式下使用confreg配置"></a>2、在common模式下使用confreg配置</h3><p>使重新启动从新的寄存器中加载配置。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rommon 1 &gt; <span class="built_in">set</span></span><br><span class="line">rommon 1 &gt; confreg</span><br><span class="line"></span><br><span class="line"> Configuration Summary : </span><br><span class="line"> =&gt; load ROM after netboot fails</span><br><span class="line"> =&gt; console baud: 9600</span><br><span class="line"> =&gt; autoboot from: commands specified <span class="keyword">in</span> <span class="string">&#x27;BOOT&#x27;</span> environment variable</span><br><span class="line"></span><br><span class="line"> <span class="keyword">do</span> you wish to change the configuration? y/n  [n]:  **y**</span><br><span class="line"> <span class="built_in">enable</span>  <span class="string">&quot;diagnostic mode&quot;</span>? y/n  [n]:  **n**</span><br><span class="line"> <span class="built_in">enable</span>  <span class="string">&quot;use net in IP bcast address&quot;</span>? y/n  [n]:  **n**</span><br><span class="line"> <span class="built_in">disable</span> <span class="string">&quot;load ROM after netboot fails&quot;</span>? y/n  [n]:  **n**</span><br><span class="line"> <span class="built_in">enable</span>  <span class="string">&quot;use all zero broadcast&quot;</span>? y/n  [n]:  **n**</span><br><span class="line"> <span class="built_in">enable</span>  <span class="string">&quot;break/abort has effect&quot;</span>? y/n  [n]:  **n**</span><br><span class="line"> <span class="built_in">enable</span>  <span class="string">&quot;ignore system config info&quot;</span>? y/n  [n]:  **y**</span><br><span class="line"></span><br><span class="line"> change console baud rate? y/n  [n]:  **n**</span><br><span class="line"></span><br><span class="line"> change the boot characteristics? y/n  [n]:  **n**</span><br><span class="line"></span><br><span class="line"> Configuration Summary : </span><br><span class="line"> =&gt; load ROM after netboot fails</span><br><span class="line"> =&gt; ignore system config info</span><br><span class="line"> =&gt; console baud: 9600</span><br><span class="line"> =&gt; autoboot from: commands specified <span class="keyword">in</span> <span class="string">&#x27;BOOT&#x27;</span> environment variable</span><br><span class="line"></span><br><span class="line"> <span class="keyword">do</span> you wish to save this configuration? y/n  [n]:  y</span><br><span class="line"> You must reset or power cycle <span class="keyword">for</span> new configuration to take effect</span><br><span class="line">Note: You can also use the confreg 0x2142 <span class="built_in">command</span> at the ROMmon prompt <span class="keyword">in</span> order to <span class="built_in">set</span> the configuration register value to bypass the startup configuration stored <span class="keyword">in</span> NVRAM.</span><br><span class="line"></span><br><span class="line">rommon 1 &gt;confreg 0x2142  <span class="comment">#记住这里寄存器的位置</span></span><br><span class="line">You must reset or power cycle <span class="keyword">for</span> the new configuration to take effect.</span><br></pre></td></tr></table></figure>
<h3 id="3、重启设备"><a href="#3、重启设备" class="headerlink" title="3、重启设备"></a>3、重启设备</h3><p>使用reset命令重新引导模块，因为第二步中配置忽略系统配置信息，这里将不会引导已保存的配置信息。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">rommon 2 &gt; reset</span><br><span class="line"></span><br><span class="line">Resetting .......</span><br><span class="line"></span><br><span class="line">rommon 3 &gt;</span><br><span class="line"></span><br><span class="line"> ********************************************************** </span><br><span class="line"> *                                                        * </span><br><span class="line"> * Welcome to ROM Monitor <span class="keyword">for</span> WS-X4014 System.            * </span><br><span class="line"> * Copyright (c) 1999-2000, 2001 by Cisco Systems, Inc.   * </span><br><span class="line"> * All rights reserved.                                   * </span><br><span class="line"> *                                                        * </span><br><span class="line"> **********************************************************</span><br><span class="line"></span><br><span class="line">!--- Output suppressed.</span><br><span class="line"></span><br><span class="line">Press RETURN to get started! </span><br><span class="line"></span><br><span class="line">!--- Press Return.</span><br><span class="line"></span><br><span class="line">00:00:21: %SYS-5-RESTART: System restarted --</span><br><span class="line">Cisco Internetwork Operating System Software </span><br><span class="line">IOS (tm) Catalyst 4000 L3 Switch Software (cat4000-IS-M), </span><br><span class="line">   Version 12.1(8a)EW,  RELEASE SOFTWARE (fc1)</span><br><span class="line">TAC Support: http://www.cisco.com/tac</span><br><span class="line">Copyright (c) 1986-2002 by cisco Systems, Inc.</span><br><span class="line">Compiled Thu 24-Jan-02 17:34 by ccai</span><br><span class="line">00:00:21: %SNMP-5-COLDSTART: SNMP agent on host Switch </span><br><span class="line">   is undergoing a cold start</span><br><span class="line">Switch&gt;</span><br></pre></td></tr></table></figure>
<h3 id="4、加载"><a href="#4、加载" class="headerlink" title="4、加载"></a>4、加载</h3><p>此值使设备从Flash启动，而无需加载已保存的配置。在Switch提示符下发出enable命令进入启用模式。然后，使用show version命令以检查配置寄存器值。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Switch&gt; <span class="built_in">enable</span></span><br><span class="line">Switch<span class="comment">#show version</span></span><br><span class="line">Cisco Internetwork Operating System Software </span><br><span class="line">IOS (TM) Catalyst 4000 L3 Switch Software (cat4000-IS-M),</span><br><span class="line">   Version 12.1(8a)EW,  RELEASE SOFTWARE (fc1)</span><br><span class="line">TAC Support: http://www.cisco.com/tac</span><br><span class="line">Copyright (c) 1986-2002 by cisco Systems, Inc.</span><br><span class="line">Compiled Thu 24-Jan-02 17:34 by ccai</span><br><span class="line">Image text-base: 0x00000000, data-base: 0x00AA2B8C</span><br><span class="line"></span><br><span class="line">ROM: 12.1(10r)EY(1.21)</span><br><span class="line">Switch uptime is 5 minutes</span><br><span class="line">System returned to ROM by reload</span><br><span class="line">Running default software</span><br><span class="line"></span><br><span class="line">cisco WS-C4006 (MPC8245) processor (revision 7) with 262144K bytes of memory.</span><br><span class="line">Processor board ID FOX04183666</span><br><span class="line">Last reset from Reload</span><br><span class="line">32 Gigabit Ethernet/IEEE 802.3 interface(s)</span><br><span class="line">467K bytes of non-volatile configuration memory.</span><br><span class="line"></span><br><span class="line">Configuration register is 0x2142  <span class="comment">#查看加载的寄存器地址</span></span><br><span class="line"></span><br><span class="line">Switch<span class="comment">#</span></span><br></pre></td></tr></table></figure>
<h3 id="5、将配置恢复到内存中"><a href="#5、将配置恢复到内存中" class="headerlink" title="5、将配置恢复到内存中"></a>5、将配置恢复到内存中</h3><p>使用configure memory命令或copy startup-config running-config命令将NVRAM复制到内存中。<br>请勿使用configure terminal命令，该命令显示模块的默认配置。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Switch<span class="comment">#configure memory</span></span><br><span class="line"></span><br><span class="line">Uncompressed configuration from 1307 bytes to 3014 bytes</span><br><span class="line">Switch<span class="comment">#</span></span><br><span class="line">00:13:52: %SYS-5-CONFIG_I: Configured from memory by console</span><br><span class="line">c-4006-SUPIII<span class="comment">#</span></span><br></pre></td></tr></table></figure>
<h3 id="6、检查接口状态"><a href="#6、检查接口状态" class="headerlink" title="6、检查接口状态"></a>6、检查接口状态</h3><p>使用show ip interface brief命令以确保之前使用的接口显示“ up up ”状态。<br>如果在密码恢复之前使用的任何接口显示“ down ”，请在该接口上发出no shutdown命令以启动接口。</p>
<h3 id="7、检查配置文件"><a href="#7、检查配置文件" class="headerlink" title="7、检查配置文件"></a>7、检查配置文件</h3><p>使用write terminal命令和show running-config命令检查配置。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">c-4006-SUPIII<span class="comment">#show running-config </span></span><br><span class="line">Building configuration...</span><br><span class="line"></span><br><span class="line">Current configuration : 3014 bytes</span><br><span class="line">!</span><br><span class="line">version 12.1</span><br><span class="line">no service pad</span><br><span class="line">service timestamps debug uptime</span><br><span class="line">service timestamps <span class="built_in">log</span> uptime</span><br><span class="line">no service password-encryption</span><br><span class="line">service compress-config</span><br><span class="line">!</span><br><span class="line">hostname c-4006-SUPIII</span><br><span class="line">!</span><br><span class="line">boot system flash bootflash:</span><br><span class="line">!</span><br><span class="line">vtp mode transparent</span><br><span class="line"></span><br><span class="line">!--- Output suppressed.</span><br><span class="line"></span><br><span class="line">line con 0</span><br><span class="line"> stopbits 1</span><br><span class="line">line vty 0 4</span><br><span class="line"> login</span><br><span class="line">!</span><br><span class="line">end</span><br><span class="line"></span><br><span class="line">c-4006-SUPIII<span class="comment">#</span></span><br></pre></td></tr></table></figure>
<p>现在可以更改密码了。</p>
<h3 id="更改密码"><a href="#更改密码" class="headerlink" title="更改密码"></a>更改密码</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">c-4006-SUPIII<span class="comment">#configure terminal </span></span><br><span class="line">Enter configuration commands, one per line.  End with CNTL/Z.</span><br><span class="line">c-4006-SUPIII(config)<span class="comment">#no enable secret  #删除旧密码</span></span><br><span class="line"></span><br><span class="line">!--- This step is necessary <span class="keyword">if</span> the switch had an <span class="built_in">enable</span> !--- secret password.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">c-4006-SUPIII(config)<span class="comment">#enable secret &lt; password &gt;  设置新密码</span></span><br><span class="line">[Choose a strong password with at least one capital letter,</span><br><span class="line"> one number, and one special character.]</span><br><span class="line"></span><br><span class="line">!--- This <span class="built_in">command</span> sets the new password.</span><br></pre></td></tr></table></figure>
<h3 id="确保将配置寄存器的值改回0x2102"><a href="#确保将配置寄存器的值改回0x2102" class="headerlink" title="确保将配置寄存器的值改回0x2102"></a>确保将配置寄存器的值改回0x2102</h3><p>在config模式下更改寄存器的值，并查看下一次启动引导寄存器位置是否正确。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">c-4006-SUPIII(config)<span class="comment">#config-register 0x2102</span></span><br><span class="line">c-4006-SUPIII(config)<span class="comment"># ^Z</span></span><br><span class="line">c-4006-SUPIII<span class="comment">#</span></span><br><span class="line">00:19:01: %SYS-5-CONFIG_I: Configured from console by console</span><br><span class="line">c-4006-SUPIII<span class="comment">#write memory </span></span><br><span class="line"></span><br><span class="line">!--- This step saves the configuration.</span><br><span class="line"></span><br><span class="line">Building configuration...</span><br><span class="line">Compressed configuration from 3061 bytes to 1365 bytes[OK]</span><br><span class="line">c-4006-SUPIII<span class="comment">#show version </span></span><br><span class="line"></span><br><span class="line">!--- This step verifies the value change.</span><br><span class="line"></span><br><span class="line">Cisco Internetwork Operating System Software </span><br><span class="line">IOS (TM) Catalyst 4000 L3 Switch Software (cat4000-IS-M), </span><br><span class="line">Version 12.1(8a)EW,  RELEASE SOFTWARE (fc1)</span><br><span class="line">TAC Support: http://www.cisco.com/tac</span><br><span class="line">Copyright (c) 1986-2002 by cisco Systems, Inc.</span><br><span class="line">Compiled Thu 24-Jan-02 17:34 by ccai</span><br><span class="line">Image text-base: 0x00000000, database: 0x00AA2B8C</span><br><span class="line"></span><br><span class="line">ROM: 12.1(10r)EY(1.21)</span><br><span class="line">c-4006-SUPIII uptime is 20 minutes</span><br><span class="line">System returned to ROM by reload</span><br><span class="line">Running default software</span><br><span class="line"></span><br><span class="line">cisco WS-C4006 (MPC8245) processor (revision 7) with 262144K bytes of memory.</span><br><span class="line">Processor board ID FOX04183666</span><br><span class="line">Last reset from Reload</span><br><span class="line">32 Gigabit Ethernet/IEEE 802.3 interface(s)</span><br><span class="line">467K bytes of nonvolatile configuration memory.</span><br><span class="line"></span><br><span class="line">Configuration register is 0x2142 (will be 0x2102 at next reload)</span><br><span class="line"></span><br><span class="line">c-4006-SUPIII<span class="comment">#</span></span><br></pre></td></tr></table></figure>
<p>到这一步，已经完成enable密码更改了。</p>
<p>参考<a href="https://www.cisco.com/c/en/us/support/docs/switches/catalyst-4000-series-switches/21229-pswdrec-cat4000-supiii-21229.html">链接</a>，<a href="https://www.hello2099.com/1913.html">链接</a></p>
]]></content>
      <tags>
        <tag>network</tag>
      </tags>
  </entry>
  <entry>
    <title>cisco 设备配置文件的保存和恢复</title>
    <url>/2019/07/27/cisco-%E8%AE%BE%E5%A4%87%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%9A%84%E4%BF%9D%E5%AD%98%E5%92%8C%E6%81%A2%E5%A4%8D/</url>
    <content><![CDATA[<h2 id="cisco-配置文件的保存和恢复"><a href="#cisco-配置文件的保存和恢复" class="headerlink" title="cisco 配置文件的保存和恢复"></a>cisco 配置文件的保存和恢复</h2><h3 id="保存配置文件"><a href="#保存配置文件" class="headerlink" title="保存配置文件"></a>保存配置文件</h3><p>思科保存配置文件目录结构大概如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">R1<span class="comment">#dir</span></span><br><span class="line">Directory of nvram:/</span><br><span class="line"></span><br><span class="line">  508  -rw-        2190                    &lt;no date&gt;  startup-config</span><br><span class="line">  509  ----          24                         &lt;no date&gt;  private-config</span><br><span class="line">  510  -rw-        2190                    &lt;no date&gt;  underlying-config</span><br><span class="line">    1  ----             34                         &lt;no date&gt;  persistent-data</span><br><span class="line">    2  -rw-           4                          &lt;no date&gt;  rf_cold_starts</span><br><span class="line">    3  -rw-           0                         &lt;no date&gt;  ifIndex-table</span><br></pre></td></tr></table></figure>
<p>启动配置文件为start-config</p>
<p>要保存当前配置文件的逻辑是先备份当前的启动文件startup-config </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">R1<span class="comment">#copy startup-config nvram:20190826.backup</span></span><br><span class="line">Destination filename [20190826.backup]? </span><br><span class="line"></span><br><span class="line">2190 bytes copied <span class="keyword">in</span> 1.136 secs (1928 bytes/sec)</span><br></pre></td></tr></table></figure>
<p>保存的配置文件如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">R1<span class="comment">#dir</span></span><br><span class="line">Directory of nvram:/</span><br><span class="line"></span><br><span class="line">  508  -rw-        2190                    &lt;no date&gt;  startup-config</span><br><span class="line">  509  ----          24                         &lt;no date&gt;  private-config</span><br><span class="line">  510  -rw-        2190                    &lt;no date&gt;  underlying-config</span><br><span class="line">    1  ----             34                         &lt;no date&gt;  persistent-data</span><br><span class="line">    2  -rw-           4                           &lt;no date&gt;  rf_cold_starts</span><br><span class="line">    3  -rw-           0                           &lt;no date&gt;  ifIndex-table</span><br><span class="line">    4  -rw-           2190                    &lt;no date&gt;  20190826.backup</span><br><span class="line"></span><br><span class="line">522232 bytes total (513822 bytes free)</span><br></pre></td></tr></table></figure>
<p>将当前配置保存为启动配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">R1<span class="comment">#copy running-config nvram:startup-config</span></span><br><span class="line">Destination filename [startup-config]?</span><br><span class="line">Building configuration...</span><br><span class="line">[OK]</span><br></pre></td></tr></table></figure>
<h3 id="恢复配置文件"><a href="#恢复配置文件" class="headerlink" title="恢复配置文件"></a>恢复配置文件</h3><p>例如恢复到20190826的配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">R1<span class="comment">#copy nvram:/20190826.backup startup-config</span></span><br><span class="line">Destination filename [startup-config]? y</span><br><span class="line"></span><br><span class="line">2190 bytes copied <span class="keyword">in</span> 1.108 secs (1977 bytes/sec)</span><br></pre></td></tr></table></figure>
<p>重启交换机，不需要保存运行中的配置：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">R1<span class="comment">#reload </span></span><br><span class="line">Proceed with reload? [confirm]y</span><br><span class="line">*Jul 27 02:14:18.199: %SYS-5-RELOAD: Reload requested by console. Reload Reason: Reload Command.</span><br><span class="line"></span><br><span class="line">                ROM: reload requested...</span><br></pre></td></tr></table></figure>
<h3 id="H3C-化为的操作思路"><a href="#H3C-化为的操作思路" class="headerlink" title="H3C 化为的操作思路"></a>H3C 化为的操作思路</h3><p>保存文件，选用配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;F1070&gt;save 20190828.cfg</span><br><span class="line">The current configuration will be saved to flash:/20190828.cfg. Continue? [Y/N]:y</span><br><span class="line">Now saving current configuration to the device.</span><br><span class="line">Saving configuration flash:/20190828.cfg.Please <span class="built_in">wait</span>...</span><br><span class="line">Configuration is saved to device successfully.</span><br></pre></td></tr></table></figure>
<p>配置启动项：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;F1070&gt;startup saved-configuration 20190828.cfg </span><br><span class="line">Please <span class="built_in">wait</span>...... Done.</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>network</tag>
      </tags>
  </entry>
  <entry>
    <title>conky 配置透明度</title>
    <url>/2019/04/24/conky-%E9%85%8D%E7%BD%AE%E9%80%8F%E6%98%8E%E5%BA%A6/</url>
    <content><![CDATA[<h2 id="conky-配置透明度"><a href="#conky-配置透明度" class="headerlink" title="conky 配置透明度"></a>conky 配置透明度</h2><p>配置conky后，桌面上会有一个半透明的窗口，在更换壁纸后，半透明窗口内的显示背景仍然为之前的壁纸部分。更改为全透明，即更换壁纸后，窗口一直透明不受壁纸影响操作如下：</p>
<p>conky 可以使用own_window_argb_visual、own_window_argb_value、own_window_transparent来调节透明特性。这需要窗口管理器支持Xorg复合特性，比如使用compiz或者启用metacity复合特性。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">own_window_argb_visual：布尔值。当为<span class="literal">true</span>时启用真透明特性</span><br><span class="line">own_window_argb_value：当启用真透明时设定不透明度。值的范围是0-255。0是0%不透明度，255是100%不透明</span><br><span class="line">own_window_transparent：布尔值。当该值为<span class="literal">true</span>，并且启用真透明时，设置不透明度为0%</span><br></pre></td></tr></table></figure>
<p>注意：不要和own_window_type override一起使用。根据conky的文档，这在大多数情况下是无效的，我这里尝试的结果也是如此。<br>所以，如果希望得到完全透明的conky，可以这样设置:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">own_window_argb_visual <span class="literal">true</span></span><br><span class="line">own_window_transparent <span class="literal">true</span></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>dpkg 清除已卸载程序的配置信息</title>
    <url>/2021/02/22/dpkg-%E6%B8%85%E9%99%A4%E5%B7%B2%E5%8D%B8%E8%BD%BD%E7%A8%8B%E5%BA%8F%E7%9A%84%E9%85%8D%E7%BD%AE%E4%BF%A1%E6%81%AF/</url>
    <content><![CDATA[<h2 id="ubuntu清除已卸载程序的配置文件"><a href="#ubuntu清除已卸载程序的配置文件" class="headerlink" title="ubuntu清除已卸载程序的配置文件"></a>ubuntu清除已卸载程序的配置文件</h2><p>ubuntu 上卸载软件后，后有一些残留的配置文件信息在电脑里面，操作清除配置文件。</p>
<p>1、使用dpkg -l 列出系统安装包信息</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dpkg -l</span><br><span class="line">期望状态=未知(u)/安装(i)/删除(r)/清除(p)/保持(h)</span><br><span class="line">| 状态=未安装(n)/已安装(i)/仅存配置(c)/仅解压缩(U)/配置失败(F)/不完全安装(H)/触发器等待(W)/触发器未决(T)</span><br><span class="line">|/ 错误?=(无)/须重装(R) (状态，错误：大写=故障)</span><br><span class="line">||/ 名称                                          版本                                     体系结构     描述</span><br><span class="line">+++-=============================================-========================================-============-======================================================================================</span><br><span class="line">================</span><br><span class="line">ii  accountsservice                               0.6.55-0ubuntu12~20.04.4                 amd64        query and manipulate user account information</span><br><span class="line">ii  acl                                           2.2.53-6                                 amd64        access control list - utilities</span><br><span class="line">ii  acpi-support                                  0.143                                    amd64        scripts <span class="keyword">for</span> handling many ACPI events</span><br><span class="line">ii  acpid                                         1:2.0.32-1ubuntu1                        amd64        Advanced Configuration and Power Interface event daemon</span><br><span class="line">ii  adb                                           1:8.1.0+r23-5ubuntu2                     amd64        Android Debug Bridge</span><br><span class="line"><span class="comment">### 示例</span></span><br></pre></td></tr></table></figure>
<p>2、选出已经删除的但有配置残留的包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pkg -l | grep <span class="string">&quot;^rc&quot;</span></span><br><span class="line">rc  spark-typeeasy:i386                           1.0                                      i386         Typeeasy on Deepin Wine</span><br><span class="line">rc  wechat                                        2.0.0                                    amd64        微信</span><br></pre></td></tr></table></figure>
<p>卸载过的微信uos版客户端的金山打字通。</p>
<p>3、清除配置文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dpkg -l | grep <span class="string">&quot;^rc&quot;</span> | awk <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> | xargs sudo aptitude -y purge</span><br><span class="line">[sudo] ian 的密码： </span><br><span class="line">下列软件包将被“删除”：           </span><br><span class="line">  spark-typeeasy:i386&#123;p&#125; wechat&#123;p&#125; </span><br><span class="line">0 个软件包被升级，新安装 0 个，2 个将被删除， 同时 0 个将不升级。</span><br><span class="line">需要获取 0 B 的存档。解包后将要使用 0 B。</span><br><span class="line">(正在读取数据库 ... 系统当前共安装有 815779 个文件和目录。)</span><br><span class="line">正在清除 wechat (2.0.0) 的配置文件 ...</span><br><span class="line">正在清除 spark-typeeasy:i386 (1.0) 的配置文件 ...</span><br></pre></td></tr></table></figure>
<p>如上示例：</p>
<p>dpkg -l 列出所有包的状态，grep 提取开头为rc的包，awk命令打印这些包的第二个字段，即包的名字，再通过xargs命令传递到 sudo aptitude -y purge后面，purge命令会消除配置文件。-y参数自动对后面aptitude命令提示回答yes。</p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>firewall-cmd</title>
    <url>/2018/08/21/firewall-cmd/</url>
    <content><![CDATA[<h1 id="安装使用"><a href="#安装使用" class="headerlink" title="安装使用"></a>安装使用</h1><p>安装firewall防火墙</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install firewalld</span><br></pre></td></tr></table></figure>
<p>开启服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemclt start firewalld.service</span><br></pre></td></tr></table></figure>
<p>关闭防火墙</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop firewalld.service</span><br></pre></td></tr></table></figure>
<p>开机自启动</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl <span class="built_in">enable</span> firewalld.service</span><br></pre></td></tr></table></figure>
<p>关闭开机启动</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemclt <span class="built_in">disable</span> firewalld.service</span><br></pre></td></tr></table></figure>
<h2 id="使用firewall-cmd命令"><a href="#使用firewall-cmd命令" class="headerlink" title="使用firewall-cmd命令"></a>使用firewall-cmd命令</h2><p>查看状态</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --state</span><br></pre></td></tr></table></figure>
<p>running表示运行中，not running表示未运行。</p>
<p>获取活动的区域</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --get-active-zones</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>linux firewall</tag>
      </tags>
  </entry>
  <entry>
    <title>history 环境变量</title>
    <url>/2021/02/22/history-%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F/</url>
    <content><![CDATA[<h2 id="linux-添加history-环境变量"><a href="#linux-添加history-环境变量" class="headerlink" title="linux 添加history 环境变量"></a>linux 添加history 环境变量</h2><p>在linux下，我们可以通过history命令来查看用户的历史操作记录，在未进行配置的情况下，history只能查看历史操作记录，不记录时间及用户。可以从审计的角度来做一些事情。让history日志记录更细化。</p>
<p>1、命令历史记录中添加时间、源、用户信息</p>
<p>在/etc/profile.d目录下创建history.sh文件,不建议直接修改profile文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># history</span></span><br><span class="line">USER_IP=`who -u am i 2&gt;/dev/null | awk <span class="string">&#x27;&#123;print $NF&#125;&#x27;</span> | sed -e <span class="string">&#x27;s/[()]//g&#x27;</span>`</span><br><span class="line"><span class="keyword">if</span> [ -z <span class="variable">$USER_IP</span> ]</span><br><span class="line"><span class="keyword">then</span></span><br><span class="line">USER_IP=`hostname`</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">export</span> HISTTIMEFORMAT=<span class="string">&quot;[%Y.%m.%d %H:%M:%S][<span class="variable">$&#123;USER_IP&#125;</span>-<span class="variable">$&#123;LOGNAME&#125;</span>]&quot;</span></span><br></pre></td></tr></table></figure>
<p>2、重新加载新的环境变量</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sour /etc/profile</span><br></pre></td></tr></table></figure>
<p>更新完成后，执行history命令，即可看到history命令输出日志、时间、源IP、用户，以及运行的命令信息。</p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>iproute2</title>
    <url>/2018/08/05/iproute2/</url>
    <content><![CDATA[<h1 id="iproute2常用"><a href="#iproute2常用" class="headerlink" title="iproute2常用"></a>iproute2常用</h1><ul>
<li>显示所有已连接的接口</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip link show</span><br></pre></td></tr></table></figure>
<ul>
<li>停用或启用接口</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ip link <span class="built_in">set</span> down wlp4s0</span><br><span class="line">sudo ip link <span class="built_in">set</span> up wlp4s0</span><br></pre></td></tr></table></figure>
<ul>
<li>为网络接口分配IPv4地址</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ip addr add 192.168.31.123/24 dev wlp4s0</span><br><span class="line"><span class="comment"># 可以同时给一个接口分配多个IP(ifconfig IP别名)例如</span></span><br><span class="line">sudo ip addr add 192.168.31.124/24 dev wlp4s0</span><br><span class="line">sudo ip addr add 192.168.31.125/24 dev wlp4s0</span><br></pre></td></tr></table></figure>
<ul>
<li>移除网络接口IPv4地址</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ip addr del 192.168.31.123/24 dev wlp4s0</span><br></pre></td></tr></table></figure>
<ul>
<li>显示网络接口的IPv4地址</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip addr show dev wlp4s0</span><br></pre></td></tr></table></figure>
<ul>
<li>为网络接口分配IPv6地址</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ip -6 addr add 2003:0db5:0:f102::1/64 dev wlp4s0</span><br></pre></td></tr></table></figure>
<p>添加多条同上</p>
<ul>
<li>显示网络接口的IPv6地址</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip -6 addr show dev wlp4s0</span><br></pre></td></tr></table></figure>
<ul>
<li>移除网络设备的IPv6地址</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ip -6 addr del 2003:0db5:0:f102::1/64 dev wlp4s0</span><br></pre></td></tr></table></figure>
<p>删除多条同上</p>
<ul>
<li>更改网络接口的MAC地址</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ip link <span class="built_in">set</span> dev wlp4s0 address 08:00:27:75:2a:67</span><br></pre></td></tr></table></figure>
<p>适用范围，如更换计算网络或主板等情况下，需要更改MAC地址，更改请需要停用网络接口，操作参考第二条内容</p>
<ul>
<li>查看IP路由表</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip route show</span><br></pre></td></tr></table></figure>
<ul>
<li>更改默认路由</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ip route add defautl via 192.168.31.1 wlp4s0</span><br><span class="line">sudo ip route replace default via 192.168.31.2 dev wlp4s0</span><br></pre></td></tr></table></figure>
<ul>
<li>添加静态路由和移除静态路由</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ip route add 172.16.32.0/24 via 172.16.32.1 dev wlp4s0</span><br><span class="line">sudo ip route del 172.16.32.0/24</span><br></pre></td></tr></table></figure>
<ul>
<li>查看管套字统计信息</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ss</span><br><span class="line">ss -l</span><br></pre></td></tr></table></figure>
<ul>
<li>查看arp表</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ip neigh</span><br></pre></td></tr></table></figure>
<ul>
<li>添加或删除静态arp表</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ip neigh add 192.168.1.100 lladdr 00:0c:29:c0:5a:ef dev wlp4s0</span><br><span class="line">sudo ip neigh del 192.168.1.100 dev wlp4s0</span><br></pre></td></tr></table></figure>
<ul>
<li>添加或删除多播地址</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ip maddr add 33:44:00:00:00:01 dev wlp4s0</span><br><span class="line">sudo ip maddr del 33:44:00:00:00:01 dev wlp4s0</span><br><span class="line">ip maddr list dev wlp4s0</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>network</tag>
      </tags>
  </entry>
  <entry>
    <title>iptables详解</title>
    <url>/2018/08/22/iptables%E8%AF%A6%E8%A7%A3/</url>
    <content><![CDATA[<h1 id="linux-之软件防火墙iptables详解"><a href="#linux-之软件防火墙iptables详解" class="headerlink" title="linux 之软件防火墙iptables详解"></a>linux 之软件防火墙iptables详解</h1><blockquote>
<p>netfilter是由rusth russell提出的linux 2.4内核防火墙框架，该框架既简洁又灵活，可实现安全策略应用中的许多功能，如数据包过滤、数据包处理、地址伪装、透明代理、动态网络地址转换（network address translation, nat）,以及基于用户及媒体访问控制（media access control, mac）地址的过滤和基于状态的过滤、包速率限制等。iptables/netfilter的这些规则可以通过灵活组合，形成非常多的功能、涵盖各个方面，这一切都利益于它的优秀设计思想。</p>
</blockquote>
<h2 id="0x01：filter和iptables"><a href="#0x01：filter和iptables" class="headerlink" title="0x01：filter和iptables"></a>0x01：filter和iptables</h2><p>netfilter是linux操作系统核心层内部的一个数据包处理模块，它具有如下功能：</p>
<ul>
<li>网络地址转换（network address translation）</li>
<li>数据包内容修改</li>
<li>以及数据包过滤的防火墙功能</li>
</ul>
<p>netfilter平台中制定了数据包的五个挂载点（hook poing，我们可以理解为回调函数点，数据包到达这些位置的时候会主动调用我们的boov，使我们有机会能在数据包路由的时候改变它们的方向、内容），这５个挂载点分别是pre_routing、input、output、forward、post_routing。</p>
<p>netfilter所设置的规则是存放在内核内存中的，而iptables是一个应用层的应用程序，它通过netfilter放出的接口来对存放在内核中的xxtables（netfilter的配置表）进行修改。这个xxtables由表tables、链chains、规则rules组成，iptables在应用层负责修改这个规则文件。类似应用程序还有firewall、ufw。</p>
<p><img src="http://blog.ywmy.xyz/ywmy/linuxiptables_and_kernel.png" alt="iptables与内核"></p>
<h3 id="1-1-filter、nat、mangle-raw规则表"><a href="#1-1-filter、nat、mangle-raw规则表" class="headerlink" title="1.1:filter、nat、mangle raw规则表"></a>1.1:filter、nat、mangle raw规则表</h3><h4 id="filter表"><a href="#filter表" class="headerlink" title="filter表"></a>filter表</h4><p>主要用于对数据包进行过滤，根据具体的规则决定是否放行该数据包（如drop、accept、reject、log）。filter表对应的内核模块为iptable_filter，包含三个规则链：</p>
<ul>
<li>input链：input针对那些目的地是本地的包</li>
<li>forward链：forward过滤所胡不是本地产生的并且旷日持久地不是本地（即本机只负责转发）的包</li>
<li>output链：output是用来过滤所有本地生成的包</li>
</ul>
<h4 id="nat表"><a href="#nat表" class="headerlink" title="nat表"></a>nat表</h4><p>主要用于修改数据包的ip地址、端口等信息（网络地址转换、如snat、dnat、masquerade、redirect）。属于一个流的包（因为包的大小限制导致数据可能会被分成多个数据包）只会经过这个表一次。如果第一个包被允许做nat或masqueraded，那个余下的包都会自动地被做相同的操作，也就是说，余下的包不会再通过这个表。表对应的内核模块为iptable_nat，包含三个链：</p>
<ul>
<li>prerouting链：作用是在包刚刚到达防火墙时改变它的目的地址</li>
<li>output链：改变本地产生的包的目的地址</li>
<li>postrouting链：在包就要离开防火墙之前改变其源地址</li>
</ul>
<h4 id="mangle表"><a href="#mangle表" class="headerlink" title="mangle表"></a>mangle表</h4><p>主要用于修改数据包的tos（type oof service，服务类型）、ttl（time to live，生存周期）值以及为数据包设置mark标记，以实现qos（quality of service，服务质量）调整以及策略路由等应用，由于需要相应的路由设备支持，因此应用并不广泛。包含一个规则链－－prerouting、postrouting、input、output、forward。</p>
<h4 id="raw表"><a href="#raw表" class="headerlink" title="raw表"></a>raw表</h4><p>是自1.2.9以后版本的iptables新增的表，主要用决定数据包是否被状态跟踪机制处理。在匹配数据包时，raw表的规则要优先于其它表。包含两条规则链－－output、prerouting</p>
<p>iptables中数据包和４种被跟踪连接的４种不同状态：</p>
<ul>
<li>new：该包想要形如一个连接（重新连接或将连接重定向）</li>
<li>related：该包是属于某个已经建立的连接所建立的新连接。例如：ftp的数据传输连接就是控制连接　所related出来的连接。–icmp-type 0（ping 应答）就是icmp-type 8（ping 请求）所　related出来的。</li>
<li>established：只要发送并接到应用，一个数据连接从new变为established，而且该状态会纠结匹配这个连接的后续数据包。</li>
<li>invalid：数据包不能被识别属于哪个连接或没有任何状态。比如内存举出，收到不知属于哪个连接的icmp错误信息，一般应该drop这个状态的任何数据。</li>
</ul>
<h3 id="1-2-input、forward等规则链和规则"><a href="#1-2-input、forward等规则链和规则" class="headerlink" title="1.2:input、forward等规则链和规则"></a>1.2:input、forward等规则链和规则</h3><p>在处理各种数据包时，根据防火墙规则的不同介入时机，iptables代涉及５种默认规则链，从应用时间点的角度理解这些链：</p>
<ul>
<li>input链：当接收到防火墙本地地址的数据包（入站）时，应用此链中的规则。</li>
<li>output链：当防火墙本机向外发送数据包（出站）时，应用此链中的规则。</li>
<li>forward链：当接收到需要通过防火墙发送给其它地址的数据包（转发）时，应用此链中的规则。</li>
<li>prerouting链：在对数据包作路由选择之前，应用此链中的规则，如dnat。</li>
<li>postrouting链：在对数据包作路由选择之后，应用此链中的规则，如snat。</li>
</ul>
<p>防火墙处理数据包的方式（规则）：</p>
<ul>
<li><p>accept：允许数据包通过。</p>
</li>
<li><p>drop：直接丢弃数据包，不给任何回应信息。</p>
</li>
<li><p>reject：拒绝数据包通过，必要时会给数据发送端一个响应信息。</p>
</li>
<li><p>snat：源地址转换在进入路由层面的route之前，重新改写一个源地址，目标地址不变，并在本机建立nat表项，当数据返回时，根据nat表将目的地址数据改定为数据发送出去时候的源地址，并发送给主机。解决内网用户用同一个公网地址上网的问题。</p>
</li>
<li><p>dnat：目标地址转换。和snat相反，ip包经过route之后、出本地的网络栈之前，重新修改目标地址，源地址不变，在本机建立nat表项，当数据返回时，根据nat表将源地址修改为熂发送过来的时候的目标地址，并发给远程主机。可以隐藏后端服务器的真实地址。</p>
<p>  redirect:是dnat的一种特殊形式，将网络包转发到本地host上（不管ip头部指定的目标地址是什么），方便在本机做端口转发。</p>
</li>
<li><p>log：在/var/log/messages文件中记录日志信息，然后将数据包传递给下一个规则。</p>
</li>
</ul>
<h2 id="0x02：linux数据包路由原理"><a href="#0x02：linux数据包路由原理" class="headerlink" title="0x02：linux数据包路由原理"></a>0x02：linux数据包路由原理</h2><p>我们已经知道了netfilter和iptables的架构和作用，并且学习了控制netfilter行为和xtables表的结构，那么这个xtables表是怎么在内核协议栈的数据包路由中直作用的呢？</p>
<p>风口数据包由底层的网卡nic（network interface card）接收，通过数据链路层的解包之后（去除数据链路帧头），就进入了tcp/ip协议栈（本质就是一个处理网络数据的内核驱动）和netfilter混合的数据处理流程中了。数据包的接收、处理、转发流程构成了一个有限状态微量机，经过一些列的内核处理函数、以及netfilter hook点，最后被转发、或者本次上层的应用程序消化掉。是时候看这张图了</p>
]]></content>
      <tags>
        <tag>linux iptables</tag>
      </tags>
  </entry>
  <entry>
    <title>lanproxy 配置</title>
    <url>/2019/04/25/lanproxy-%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="ubuntu-18-04搭建lanproxy服务"><a href="#ubuntu-18-04搭建lanproxy服务" class="headerlink" title="ubuntu 18.04搭建lanproxy服务"></a>ubuntu 18.04搭建lanproxy服务</h2><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>lanproxy是一个内网穿透工具。支持TCP流量转发。用于替代第三方付费工具，比如anydesk、teamview、花生壳等。这些第三方工具在个人使用上存在各种各样的限制，有的时候还非常不便，所以为了顺手，就有了自己搭内网穿透的想法。在内网穿透有选择上，选择了lanproxy。工具主页<a href="https://github.com/ffay/lanproxy">请戳</a>。</p>
<h3 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h3><ol>
<li>一台公网服务器(运行lanproxy server)</li>
<li>一台内网PC或服务器(lanproxy client测试)</li>
</ol>
<h3 id="服务端配置"><a href="#服务端配置" class="headerlink" title="服务端配置"></a>服务端配置</h3><p>lanproxy 后端信赖JAVA。需要选安装jdk，再安装lanproxy。操作如下：</p>
<h4 id="java安装"><a href="#java安装" class="headerlink" title="java安装"></a>java安装</h4><p>操作系统环境如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">uname -a</span><br><span class="line">Linux vultr_vps_server 4.15.0-47-generic <span class="comment">#50-Ubuntu SMP Wed Mar 13 10:44:52 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux</span></span><br></pre></td></tr></table></figure>
<p>直接通过apt源安装openjdk。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install openjdk-11-jdk</span><br></pre></td></tr></table></figure>
<p>查看JAVA环境：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">java -version</span><br><span class="line">openjdk version <span class="string">&quot;11.0.2&quot;</span> 2019-01-15</span><br><span class="line">OpenJDK Runtime Environment (build 11.0.2+9-Ubuntu-3ubuntu118.04.3)</span><br><span class="line">OpenJDK 64-Bit Server VM (build 11.0.2+9-Ubuntu-3ubuntu118.04.3, mixed mode, sharing)</span><br></pre></td></tr></table></figure>
<h4 id="lanproxy-server安装"><a href="#lanproxy-server安装" class="headerlink" title="lanproxy server安装"></a>lanproxy server安装</h4><p>下载地址<a href="https://seafile.io2c.com/d/2e81550ebdbd416c933f/">请戳</a>，选择server的程序包。下载后上传到服务器上。</p>
<p>解压缩程序包至需要安装的目录，比如本文示例/usr/bin/proxy-server/</p>
<p>配置文件在程序目录下的conf目录下，名称：config.properties。编辑配置文件，更改登录的用户名和密码。</p>
<p>配置文件如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">server.bind=0.0.0.0</span><br><span class="line"></span><br><span class="line"><span class="comment">#与代理客户端通信端口</span></span><br><span class="line">server.port=4900</span><br><span class="line"></span><br><span class="line"><span class="comment">#ssl相关配置</span></span><br><span class="line">server.ssl.enable=<span class="literal">true</span></span><br><span class="line">server.ssl.bind=0.0.0.0</span><br><span class="line">server.ssl.port=4993</span><br><span class="line">server.ssl.jksPath=test.jks</span><br><span class="line">server.ssl.keyStorePassword=123456</span><br><span class="line">server.ssl.keyManagerPassword=123456</span><br><span class="line"></span><br><span class="line"><span class="comment">#这个配置可以忽略</span></span><br><span class="line">server.ssl.needsClientAuth=<span class="literal">false</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#WEB在线配置管理相关信息</span></span><br><span class="line">config.server.bind=0.0.0.0</span><br><span class="line">config.server.port=8090</span><br><span class="line">config.admin.username=admin</span><br><span class="line">config.admin.password=admin</span><br></pre></td></tr></table></figure>
<h4 id="启动服务"><a href="#启动服务" class="headerlink" title="启动服务"></a>启动服务</h4><p>在程序目录下的bin目录有服务启动脚本，添加执行权限后，直接运行启动服务。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/usr/bin/proxy-server/bin</span><br><span class="line">chmod +x startup.sh</span><br><span class="line">./startup.sh</span><br></pre></td></tr></table></figure>
<p>对于8090端口和ip访问的方式，可以配置nginx代理，使用域名访问。</p>
<h4 id="登录配置"><a href="#登录配置" class="headerlink" title="登录配置"></a>登录配置</h4><p>浏览器打开<a href="http://ip:8090/">http://ip:8090</a>，使用配置文件中的用户名和密码登录，至此服务端配置结束。</p>
<h4 id="代理配置"><a href="#代理配置" class="headerlink" title="代理配置"></a>代理配置</h4><p>在客户端管理页添加客户端，添加后会自动生成客户端密钥。</p>
<p>添加代理端口配置，添加的名称和公网端口，公网端口在防火墙上放通。配置后端IP和端口即为要转发的内网服务器IP和端口。</p>
<h3 id="客户端配置"><a href="#客户端配置" class="headerlink" title="客户端配置"></a>客户端配置</h3><p>CentOS和Windows各测试一个，CentOS使用JAV客户端，Windows直接使用发布包程序。</p>
<h4 id="CentOS客户端配置"><a href="#CentOS客户端配置" class="headerlink" title="CentOS客户端配置"></a>CentOS客户端配置</h4><p>安装JAVA环境：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install java-11-openjdk.x86_64 java-11-openjdk-devel.x86_64</span><br></pre></td></tr></table></figure>
<p>下载程序包，解压至安装目录，如/usr/share/proxy-java-client/</p>
<p>同样，配置文件在安装目录下的conf目录中。配置文件名称：config.properties。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">client.key=客户端KEY</span><br><span class="line">ssl.enable=<span class="literal">false</span></span><br><span class="line">ssl.jksPath=test.jks</span><br><span class="line">ssl.keyStorePassword=123456</span><br><span class="line"></span><br><span class="line">server.host=服务端IP</span><br><span class="line"></span><br><span class="line"><span class="comment">#default ssl port is 4993</span></span><br><span class="line">server.port=4900</span><br></pre></td></tr></table></figure>
<p>配置文件结束，返回到上级目录下的bin文件。运行startup.sh。客户端程序启动，在服务端的管理页面中，可以看到已添加的设备在线了。</p>
<h4 id="Windows客户端的配置"><a href="#Windows客户端的配置" class="headerlink" title="Windows客户端的配置"></a>Windows客户端的配置</h4><p>下载客户端程序，解压后直接放到C盘目录下，连接操作如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># mac 64位</span></span><br><span class="line">nohup ./client_darwin_amd64 -s SERVER_IP -p SERVER_PORT -k CLIENT_KEY &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># linux 64位</span></span><br><span class="line">nohup ./client_linux_amd64 -s SERVER_IP -p SERVER_PORT -k CLIENT_KEY &amp;</span><br><span class="line"></span><br><span class="line"><span class="comment"># windows 64 位</span></span><br><span class="line">./client_windows_amd64.exe -s SERVER_IP -p SERVER_PORT -k CLIENT_KEY</span><br></pre></td></tr></table></figure>
<p>查看服务端管理页面，可以看到添加的代理服务器上线。</p>
<p>配置结束。</p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>linux nc command</title>
    <url>/2019/11/30/linux-nc-command/</url>
    <content><![CDATA[<p>Netcat 是一款简单的Unix工具，使用UDP和TCP协议。 它是一个可靠的容易被其他程序所启用的后台操作工具。 使用它你可以轻易的建立任何连接。内建有很多实用的工具。</p>
<h2 id="linux-nc-命令"><a href="#linux-nc-命令" class="headerlink" title="linux nc 命令"></a>linux nc 命令</h2><h3 id="netcat-安装"><a href="#netcat-安装" class="headerlink" title="netcat 安装"></a>netcat 安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ubuntu 18.04</span></span><br><span class="line">sudo apt install netcat</span><br><span class="line"><span class="comment"># centos  7</span></span><br><span class="line">sudo yum install nc</span><br></pre></td></tr></table></figure>
<h3 id="应用案例"><a href="#应用案例" class="headerlink" title="应用案例"></a>应用案例</h3><ul>
<li>端口扫描</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nc -z -v  10.10.0.103 3389  <span class="comment">#查看主机3389端口是否启用</span></span><br></pre></td></tr></table></figure>
<p>回显示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 3389端口</span></span><br><span class="line">Connection to 10.10.0.103 3389 port [tcp/*] succeeded!</span><br><span class="line"><span class="comment"># 80端口</span></span><br><span class="line">Connection to 10.10.0.103 80 port [tcp/http] succeeded!</span><br><span class="line"><span class="comment"># 22端口</span></span><br><span class="line">Connection to 10.10.0.100 22 port [tcp/ssh] succeeded!</span><br></pre></td></tr></table></figure>
<p>无回显，则端口无法通信。默认TCP，-u参数可调整为UDP模式。</p>
<p>端口扫描案例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">For example:</span><br><span class="line"></span><br><span class="line">           $ nc -zv host.example.com 20-30</span><br><span class="line">           Connection to host.example.com 22 port [tcp/ssh] succeeded!</span><br><span class="line">           Connection to host.example.com 25 port [tcp/smtp] succeeded!</span><br><span class="line"></span><br><span class="line">     The port range was specified to <span class="built_in">limit</span> the search to ports 20 - 30, and is</span><br><span class="line">     scanned by increasing order.</span><br><span class="line"></span><br><span class="line">     You can also specify a list of ports to scan, <span class="keyword">for</span> example:</span><br><span class="line"></span><br><span class="line">           $ nc -zv host.example.com 80 20 22</span><br><span class="line">           nc: connect to host.example.com 80 (tcp) failed: Connection refused</span><br><span class="line">           nc: connect to host.example.com 20 (tcp) failed: Connection refused</span><br><span class="line">           Connection to host.example.com port [tcp/ssh] succeeded!</span><br><span class="line"></span><br><span class="line">     The ports are scanned by the order you given.</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>linux nc 命令</title>
    <url>/2021/01/21/linux-nc-%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<p>Netcat 是一款简单的Unix工具，使用UDP和TCP协议。 它是一个可靠的容易被其他程序所启用的后台操作工具。 使用它你可以轻易的建立任何连接。内建有很多实用的工具。</p>
<h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">nc [-hlnruz][-g&lt;网关...&gt;][-G&lt;指向器数目&gt;][-i&lt;延迟秒数&gt;][-o&lt;输出文件&gt;][-p&lt;通信端口&gt;][-s&lt;来源位址&gt;][-v...][-w&lt;超时秒数&gt;][主机名称][通信端口...]</span><br></pre></td></tr></table></figure>
<h3 id="参数说明"><a href="#参数说明" class="headerlink" title="参数说明"></a>参数说明</h3><ul>
<li>-g&lt;网关&gt; 设置路由器跃程通信网关，最多可设置8个。</li>
<li>-G&lt;指向器数目&gt; 设置来源路由指向器，其数值为4的倍数。</li>
<li>-h 帮助</li>
<li>-i&lt;延迟秒数&gt; 设置时间间隔，以便传送信息及扫描端口。</li>
<li>-l 使用监听模式，管控传入信息。</li>
<li>-p 设置本地主机使用的通信端口</li>
<li>-u 使用UDP协议</li>
<li>-v 显示指令执行过程</li>
<li>-w 设置等待连线时间</li>
<li>-z 只扫描监听的进程</li>
</ul>
<h3 id="参考实例"><a href="#参考实例" class="headerlink" title="参考实例"></a>参考实例</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># udp 端口扫描</span><br><span class="line">nc -zuv cn.pool.ntp.org 123  # 扫描cn.pool.ntp.org 的123 号端口</span><br><span class="line">Connection to cn.pool.ntp.org 123 port [udp&#x2F;ntp] succeeded!  # 扫描到使用udp传输的ntp协议</span><br><span class="line"># tcp 端口扫描</span><br><span class="line">nc -zv IP&#x2F;域名 port_number</span><br><span class="line">nc -zv a.b.c.d 22</span><br><span class="line">Connection to a.b.c.d 22 port [tcp&#x2F;ssh] succeeded!</span><br></pre></td></tr></table></figure>
<p>nc 端口通信测试见图示：<br><img src="https://blog.ywmy.xyz/nc_connected.gif" alt="nc端口通信测试"></p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>linux wacom</title>
    <url>/2018/08/16/linux-wacom/</url>
    <content><![CDATA[<h1 id="说明"><a href="#说明" class="headerlink" title="说明"></a>说明</h1><p>windows和mac os下wacom包含官方的驱动。在linux我们需要安装linux支持才可以使用。</p>
<p>项目托管在github上。在使用的时候，可能需要科学的上网。项目地址请访问<a href="https://linuxwacom.github.io/">The linux Wacom Project</a></p>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>系统：ubuntu 18.04 LTS</p>
<h2 id="Kernel-Driver"><a href="#Kernel-Driver" class="headerlink" title="Kernel Driver"></a>Kernel Driver</h2><p>*安装依赖</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install linux-headers-$(uname -r) build-essential <span class="comment"># on Debian, Ubuntu, Mint</span></span><br><span class="line">sudo apt-get install autoconf                                  <span class="comment"># on Debian, Ubuntu, Mint</span></span><br><span class="line">sudo yum install gcc <span class="string">&quot;kernel-devel-uname-r == <span class="subst">$(uname -r)</span>&quot;</span>     <span class="comment"># on RHEL, CentOS, Fedora</span></span><br><span class="line">sudo pacman -Syy                                               <span class="comment"># on Arch</span></span><br><span class="line">sudo pacman -S linux                                           <span class="comment"># on Arch</span></span><br><span class="line">sudo reboot                                                    <span class="comment"># on Arch</span></span><br><span class="line">sudo pacman -S linux-headers                                   <span class="comment"># on Arch</span></span><br><span class="line">sudo zypper install kernel-devel                               <span class="comment"># on open SUSE 11.4</span></span><br><span class="line">sudo zypper install --<span class="built_in">type</span> pattern devel_basis                 <span class="comment"># on open SUSE 11.4</span></span><br></pre></td></tr></table></figure>
<p>*下载</p>
<p>下载<a href="https://github.com/linuxwacom/xf86-input-wacom/wiki/Building-The-Driver">input-wacom</a></p>
<p>*编译安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> -x ./autogen.sh; <span class="keyword">then</span> ./autogen.sh; <span class="keyword">else</span> ./configure; <span class="keyword">fi</span> &amp;&amp; make &amp;&amp; sudo make install || <span class="built_in">echo</span> <span class="string">&quot;Build Failed&quot;</span></span><br></pre></td></tr></table></figure>
<p>*加载模块</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">grep <span class="string">&quot;&quot;</span> /sys/module/wacom*/version</span><br></pre></td></tr></table></figure>
<p>or</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">modinfo wacom | grep version</span><br></pre></td></tr></table></figure>
<p>如下图所示：</p>
<p><img src="https://blog.ywmy.xyz/ywmy/linux_upload_wacom_module.png" alt="加载模块"></p>
<h2 id="X-Driver"><a href="#X-Driver" class="headerlink" title="X Driver"></a>X Driver</h2><p>*安装依赖</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get install autoconf pkg-config make xutils-dev libtool xserver-xorg-dev libx11-dev libxi-dev libxrandr-dev libxinerama-dev libudev-dev</span><br></pre></td></tr></table></figure>
<p>*下载</p>
<p>下载<a href="https://github.com/linuxwacom/xf86-input-wacom/wiki/Building-The-Driver">xf86-input-wacom</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> httpss://github.com/linuxwacom/xf86-input-wacom.git</span><br></pre></td></tr></table></figure>
<p>*编译安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">set</span> -- --prefix=<span class="string">&quot;/usr&quot;</span> --libdir=<span class="string">&quot;<span class="subst">$(readlink -e $(ls -d /usr/lib*/xorg/modules/input/../../../ | head -n1)</span>)&quot;</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">test</span> -x ./autogen.sh; <span class="keyword">then</span> ./autogen.sh <span class="string">&quot;<span class="variable">$@</span>&quot;</span>; <span class="keyword">else</span> ./configure <span class="string">&quot;<span class="variable">$@</span>&quot;</span>; <span class="keyword">fi</span> &amp;&amp; make &amp;&amp; sudo make install || <span class="built_in">echo</span> <span class="string">&quot;Build Failed&quot;</span></span><br></pre></td></tr></table></figure>
<h2 id="libwacom"><a href="#libwacom" class="headerlink" title="libwacom"></a>libwacom</h2><p>*下载</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> httpss://github.com/linuxwacom/libwacom.git</span><br></pre></td></tr></table></figure>
<p>*编译安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./autogen.sh --prefix=/usr --libdir=/lib64</span><br><span class="line">make</span><br><span class="line">sudo make install</span><br></pre></td></tr></table></figure>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><p>安装结束后，可以在系统的输入选项中检测到手绘板和笔。参考下图：</p>
<p><img src="https://blog.ywmy.xyz/ywmy/linux_stylus.png" alt="手写笔"></p>
<p><img src="https://blog.ywmy.xyz/ywmy/linux_wacom.png" alt="手绘板"></p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>linux 时间同步</title>
    <url>/2020/07/28/linux-%E6%97%B6%E9%97%B4%E5%90%8C%E6%AD%A5/</url>
    <content><![CDATA[<h2 id="linux时间同步"><a href="#linux时间同步" class="headerlink" title="linux时间同步"></a>linux时间同步</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 每天早上0点执行</span></span><br><span class="line">0 0 * * * /usr/sbin/ntpdate cn.pool.ntp.org &amp;&amp; /sbin/hwclock -w</span><br><span class="line">0 0 * * * (/usr/sbin/ntpdate cn.pool.ntp.org ; /sbin/clock -w)</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>linux 终端生成随机密码</title>
    <url>/2020/02/05/linux-%E7%BB%88%E7%AB%AF%E7%94%9F%E6%88%90%E9%9A%8F%E6%9C%BA%E5%AF%86%E7%A0%81/</url>
    <content><![CDATA[<h2 id="llinux下生成随机密码"><a href="#llinux下生成随机密码" class="headerlink" title="llinux下生成随机密码"></a>llinux下生成随机密码</h2><h3 id="工具一：pwgen"><a href="#工具一：pwgen" class="headerlink" title="工具一：pwgen"></a>工具一：pwgen</h3><h4 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># ubuntu</span></span><br><span class="line">sudo apt install pwgen</span><br><span class="line"><span class="comment"># centos</span></span><br><span class="line">sudo yum install pwgen</span><br></pre></td></tr></table></figure>
<h4 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ pwgen</span><br><span class="line"><span class="comment"># 默认生成 160个8位密码</span></span><br><span class="line">$ pwgen -s</span><br><span class="line"><span class="comment"># 生成安全随机密码，使用-s选 项</span></span><br><span class="line">$ pwgen -s 14 5</span><br><span class="line"><span class="comment"># 生成长度为14位的5组安全密码</span></span><br><span class="line">$ pwgen -cnys 14 6</span><br><span class="line"><span class="comment"># 生成6组14位的随机强度密码，常用 </span></span><br></pre></td></tr></table></figure>
<h3 id="工具二：openssl"><a href="#工具二：openssl" class="headerlink" title="工具二：openssl"></a>工具二：openssl</h3><h4 id="用法一"><a href="#用法一" class="headerlink" title="用法一"></a>用法一</h4><p>示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">openssl rand -base64 14</span><br><span class="line"><span class="comment"># 生成14位密码</span></span><br></pre></td></tr></table></figure>
<h4 id="用法二"><a href="#用法二" class="headerlink" title="用法二"></a>用法二</h4><p>示例：生成10个14位随机强度密码。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="keyword">for</span> pw <span class="keyword">in</span> &#123;1..10&#125;; <span class="keyword">do</span> openssl rand -base64 14; <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">vIFqxQb/Pl8CgaX4j3M=</span><br><span class="line">32GRzfSnxMd6yElzRq0=</span><br><span class="line">XbH3OVDe5kq4frXee8s=</span><br><span class="line">UJIVRb5WlwKL4nRlraM=</span><br><span class="line">myzSSVmoMllQu5rfNHM=</span><br><span class="line">vcz7dIHYcLQjjeZhoHQ=</span><br><span class="line">3u32tYwDldLbF22+9sc=</span><br><span class="line">61mMsj1RF8lqjUe9q6A=</span><br><span class="line">t/kDbVHAxCfAWszi++Q=</span><br><span class="line">mS5BVEZiKgob06gSnck=</span><br></pre></td></tr></table></figure>
<h3 id="工具三：gpg"><a href="#工具三：gpg" class="headerlink" title="工具三：gpg"></a>工具三：gpg</h3><h4 id="示例1："><a href="#示例1：" class="headerlink" title="示例1："></a>示例1：</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ gpg --gen-random --armor 14 1</span><br><span class="line">4flq4ofGrHFqpsyi1NM=</span><br></pre></td></tr></table></figure>
<h4 id="示例2："><a href="#示例2：" class="headerlink" title="示例2："></a>示例2：</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ <span class="keyword">for</span> pw <span class="keyword">in</span> &#123;1..10&#125;; <span class="keyword">do</span> gpg --gen-random --armor 1 14; <span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">4yCOBter8EA2bMSfaoM=</span><br><span class="line">wHSuQzrRAATSPixas1s=</span><br><span class="line">PlK5rIml+Ikdcq3U644=</span><br><span class="line">yPIMFc+pMkDxknnxW0s=</span><br><span class="line">ZHRU6HO3n7Kd0WIUDMU=</span><br><span class="line">ZJcNXsfLfC1cdI8aABU=</span><br><span class="line">gENZMAifzy+oNMrEmvw=</span><br><span class="line">CqC871lLiIUNNZ/chK8=</span><br><span class="line">ltL+Ce75tckVWlfy94I=</span><br><span class="line">38GuiLF5n7HmgxommhI=</span><br></pre></td></tr></table></figure>
<h3 id="其它工具"><a href="#其它工具" class="headerlink" title="其它工具"></a>其它工具</h3><h4 id="使用md5sum"><a href="#使用md5sum" class="headerlink" title="使用md5sum"></a>使用md5sum</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ date | md5sum</span><br><span class="line">b932c4670f1bae71b5e43c4https://blog.ywmy.xyz/ywmy/linuxlinux_mount.png59be83a90  -</span><br></pre></td></tr></table></figure>
<h4 id="使用-dev-urandom"><a href="#使用-dev-urandom" class="headerlink" title="使用/dev/urandom"></a>使用/dev/urandom</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat /dev/urandom | tr -dc <span class="string">&#x27;a-zA-Z0-9&#x27;</span> | head -c 14</span><br><span class="line">YIqMOLPN913M0M% </span><br></pre></td></tr></table></figure>
<h4 id="使用sha356sum"><a href="#使用sha356sum" class="headerlink" title="使用sha356sum"></a>使用sha356sum</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ date | sha256sum</span><br><span class="line">b0726dc3b8d717df789988f755589c598dc742f045cddaaedb00482d0659007f  -</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>linux下的病毒防护</title>
    <url>/2019/04/18/linux%E4%B8%8B%E7%9A%84%E7%97%85%E6%AF%92%E9%98%B2%E6%8A%A4/</url>
    <content><![CDATA[<h2 id="Linux-下的病毒防护"><a href="#Linux-下的病毒防护" class="headerlink" title="Ｌinux 下的病毒防护"></a>Ｌinux 下的病毒防护</h2><p>没有绝对安全的系统，linux下也存在病毒及安全后门。记录linux下的杀毒引擎clamav的安装及使用。</p>
<h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p>CentOS直接通过yum安装。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo yum install epel-release -y</span><br><span class="line">sudo yum install clamav -y</span><br></pre></td></tr></table></figure>
<p>Ubuntu直接通过atp安装。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install clamav</span><br></pre></td></tr></table></figure>
<h3 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h3><p>安装后，更新病毒库。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># freshclam</span></span><br><span class="line"><span class="comment"># 输出如下：</span></span><br><span class="line">...............</span><br><span class="line">ClamAV update process started at Sun Apr  7 11:10:18 2019</span><br><span class="line">Downloading main.cvd [100%]</span><br><span class="line">main.cvd updated (version: 58, sigs: 4566249, f-level: 60, builder: sigmgr)</span><br><span class="line">Downloading daily.cvd [100%]</span><br><span class="line">daily.cvd updated (version: 25422, sigs: 1552110, f-level: 63, builder: raynman)</span><br><span class="line">Downloading bytecode.cvd [100%]</span><br><span class="line">bytecode.cvd updated (version: 328, sigs: 94, f-level: 63, builder: neo)</span><br><span class="line">[LibClamAV] ******************************************************</span><br><span class="line">[LibClamAV] ***      Virus database timestamp <span class="keyword">in</span> the future!   ***</span><br><span class="line">[LibClamAV] ***  Please check the timezone and clock settings  ***</span><br><span class="line">[LibClamAV] ******************************************************</span><br><span class="line">Database updated (6118453 signatures) from database.clamav.net (IP: 104.16.219.84)</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>linux初步服务配置</title>
    <url>/2018/08/06/linux%E5%88%9D%E6%AD%A5%E6%9C%8D%E5%8A%A1%E9%85%8D%E7%BD%AE/</url>
    <content><![CDATA[<h2 id="配置操作小记"><a href="#配置操作小记" class="headerlink" title="配置操作小记"></a>配置操作小记</h2><h2 id="作业环境"><a href="#作业环境" class="headerlink" title="作业环境"></a>作业环境</h2><ul>
<li>系统版本：ubuntu 16.04</li>
<li>服务器环境：vps</li>
</ul>
<h3 id="step-one-登录"><a href="#step-one-登录" class="headerlink" title="step one -登录"></a>step one -登录</h3><p>通过vps面板提供的服务器相关信息，从终端使用ssh登录到vps：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh root@your_server_ip</span><br></pre></td></tr></table></figure>
<p>更改vps初始密码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">passwd</span><br></pre></td></tr></table></figure>
<p>确认更变的密码</p>
<h3 id="step-two-创建新的用户"><a href="#step-two-创建新的用户" class="headerlink" title="step two -创建新的用户"></a>step two -创建新的用户</h3><p>登录root帐号后，我们需要创建一个新用户，如以ian为例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">adduser -d /home/ian -s /bin/bash -m ian</span><br></pre></td></tr></table></figure>
<p>上述命令中，参数d指定用户的主目录，参数s指定用户的shell，参数m表示如果该目录不存在，则创建该目录。</p>
<p>更新用户密码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">passwd</span><br></pre></td></tr></table></figure>
<h3 id="step-three-用户sudo权限"><a href="#step-three-用户sudo权限" class="headerlink" title="step three -用户sudo权限"></a>step three -用户sudo权限</h3><p>给新添加的用户sudo权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">usermod -aG sudo ian</span><br></pre></td></tr></table></figure>
<h3 id="step-four-添加公钥认证"><a href="#step-four-添加公钥认证" class="headerlink" title="step four -添加公钥认证"></a>step four -添加公钥认证</h3><h4 id="在本地电脑上生成密钥对："><a href="#在本地电脑上生成密钥对：" class="headerlink" title="在本地电脑上生成密钥对："></a>在本地电脑上生成密钥对：</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t rsa -b 4096 -f ~/.ssh/id_rsa_vultr_$(date +%Y-%m-%d) -C <span class="string">&quot;Vultr key for abc corp clients&quot;</span></span><br></pre></td></tr></table></figure>
<p>1024 位或低于它的 DSA 和 RSA 加密是很弱的，请不要使用。当考虑 ssh 客户端向后兼容性的时候，请使用 RSA密匙代替 ECDSA 密匙。所有的 ssh 密钥要么使用 ED25519 ，要么使用 RSA，不要使用其它类型。<br>另外一个示例：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-keygen -t ed25519 -C <span class="string">&quot;Login to production cluster at xyz corp&quot;</span></span><br></pre></td></tr></table></figure>
<h4 id="上传公钥至vps"><a href="#上传公钥至vps" class="headerlink" title="上传公钥至vps"></a>上传公钥至vps</h4><p>使用命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-copy-id -i ~/.ssh/~/.ssh/id_rsa.pub user@host</span><br><span class="line">or</span><br><span class="line">ssh-copy-id user@remote-server-ip-or-dns-name</span><br></pre></td></tr></table></figure>
<p>远程主机将用户的公钥，保存在登录后的用户主目录的$HOME/.ssh/authorized_keys文件中。公钥就是一段字符串，只要把它追加在authorized_keys文件的末尾就行了。</p>
<p>不使用上面的命令也可以使用以下命令实现：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh user@host <span class="string">&#x27;mkdir -p .ssh &amp;&amp; cat &gt;&gt; .ssh/authorized_keys&#x27;</span> &lt; ~/.ssh/id_rsa.pub</span><br></pre></td></tr></table></figure>
<p>这条命令由多个语句组成，依次分解开来看：</p>
<ul>
<li>“$ ssh user@host”，表示登录远程主机；</li>
<li>单引号中的mkdir .ssh &amp;&amp; cat &gt;&gt; .ssh/authorized_keys，表示登录后在远程shell上执行的命令：</li>
<li>“$ mkdir -p .ssh”的作用是，如果用户主目录中的.ssh目录不存在，就创建一个；</li>
<li>‘cat &gt;&gt; .ssh/authorized_keys’ &lt; <del>/.ssh/id_rsa.pub的作用是，将本地的公钥文件</del>/.ssh/id_rsa.pub，重定向追加到远程文件authorized_keys的末尾。</li>
</ul>
<h4 id="配置密钥登录"><a href="#配置密钥登录" class="headerlink" title="配置密钥登录"></a>配置密钥登录</h4><p>打开远程主机，检查/etc/ssh/sshd_config文件如下所示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">RSAAuthentication yes</span><br><span class="line">PubkeyAuthentication yes</span><br><span class="line">AuthorizedKeysFile .ssh/authorized_keys</span><br></pre></td></tr></table></figure>
<h4 id="重启远程主机的ssh服务"><a href="#重启远程主机的ssh服务" class="headerlink" title="重启远程主机的ssh服务"></a>重启远程主机的ssh服务</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl restart ssh.service</span><br></pre></td></tr></table></figure>
<h4 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h4><p>如果在配置过程中更改过ssh的默认端口号，一定要记得在防火墙上放通更变后的端口。以ubuntu为例，放通端口命令如下所示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ufw allow 已更变的端口号</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>linux常用命令</title>
    <url>/2018/08/05/linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h1 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h1><h2 id="一、硬件篇"><a href="#一、硬件篇" class="headerlink" title="一、硬件篇"></a>一、硬件篇</h2><ol>
<li><p>cpu相关</p>
<p> <code>lscpu #查看cpu的统计信息</code><br> <code>cat /proc/cpuinfo #查看cpu的详细信息，如cpu的核心相关信息等</code></p>
</li>
<li><p>内存相关</p>
<p> <code>free -m #概要查看内存情况，这里的单位是MB</code><br> <code>cat /proc/meminfo ＃查看内存的详细信息</code></p>
</li>
<li><p>磁盘相关</p>
<p> <code>lsblk #查看硬盘的分区分布</code><br> <code>df -lh #查看各分区的情况</code><br> <code>cat /proc/partitions #查看硬盘的分区</code><br> <code>mount | column -t #查看挂载的分区状态</code></p>
</li>
<li><p>网卡相关</p>
<p> <code>lspci | grep -i &#39;eth&#39;</code><br> <code>ip addr #查看系统的所有网络接口</code></p>
</li>
</ol>
<h2 id="二、软件篇"><a href="#二、软件篇" class="headerlink" title="二、软件篇"></a>二、软件篇</h2><ol>
<li><p>内核相关</p>
<p> <code>uname -a #查看版本当前操作系统内核信息</code><br> <code>cat /proc/version #相看当前操作系统版本信息</code><br> <code>cat /etc/redhat-release #readhat系，结果同上</code><br> <code>cat /etc/suse-release #suse系，结果同上</code><br> <code>lsb_release -a #用来查看linux兼容性的发行版本信息</code><br> <code>lsmod #列出加载的内核模块</code></p>
</li>
<li><p>网络相关</p>
<p> <code>ifconf #查看所有网络接口的属性</code><br> <code>iptables -L #查看防火墙设置</code><br> <code>service iptables (start|stop|restart|status) #服务管理命令</code><br> <code>route -n #查看路由表</code><br> <code>netstat -tnlp #查看所有监听的端口</code><br> <code>netstat -antp #查看所有已经建立的连接</code><br> <code>netstat -s #查看网络统计信息进程</code><br> <code>netstat -at #列出所有tcp端口</code><br> <code>netstat -au #列出所有udp端口</code><br> <code>netstat -lt #只列出所有监听tcp端口</code></p>
<p> 以上命令只适用于旧的network-tool工具集。新的ip命令集不再适用</p>
</li>
<li><p>系统相关</p>
<p> <code>top #查看系统所有进程的详细信息，如cpu、内存等信息</code><br> <code>mount #挂载远程目录、NFS、本地共享目录到linux下</code><br> <code>hostname #查看/修改计算机名</code><br> <code>w #查看活动用户</code><br> <code>id #查看指定用户信息</code><br> <code>last #查看用户登录日志</code><br> <code>crontab -l #查看当前用户的计划任务</code><br> <code>chkconfig --list #列出所有系统服务</code><br> <code>rpm -qa #查看所有安装的软件包</code><br> <code>uptime #查看系统运行时间、用户娄、负载</code></p>
</li>
<li><p>文件相关</p>
<p> <code>ls -lht #列出一个文件夹下所有文件及大小、访问权限</code><br> <code>du -sh &lt;dir#查看指定目录的大小</code><br> <code>du -sh &lt;dir#查看指定目录的大小</code><br> <code>du -lh &lt;dir#查看指定目录各文件的大小</code><br> <code>ln -s #建立软连接</code></p>
</li>
<li><p>进程相关</p>
<p> <code>pstree -p pid #查看一个进程的所有线程</code><br> <code>pstree -a #显示所有进程的所有详细信息，遇到相同进程名可以压缩显示</code><br> <code>ps -ef #查看所有进程</code><br> <code>kill -9 pid #杀死进程</code><br> <code>kill all test #杀死进程</code></p>
</li>
<li><p>压缩解压缩相关</p>
<p> <code>zip -r dir file #净目录dir、文件file等压缩到zip包</code><br> <code>zip -re dir.zip dir file #创建zip包，并加密</code><br> <code>unzip dir zip #解压</code><br> <code>tar -zcvf dir tat.gz dir file #将目录dir、文件file等压缩到tar包</code><br> <code>tar -xf dir.tar.gz #解压</code></p>
</li>
<li><p>scp命令</p>
<p> <code>scp local_file remote_username@remote_ip:remode_dir #拷贝本地文件到远程机器上</code></p>
<p> <code>scp -f local_dir remote_username@remote_ip:remote_dir #拷贝本地目录至远程机器上</code></p>
<p> <code>－P 参数为指定远程主机的端口号</code></p>
</li>
</ol>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>mu-editor python3 PyQt5相关问题</title>
    <url>/2021/01/31/mu-editor-python3-PyQt5%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h2 id="ubuntu-20-04-python3"><a href="#ubuntu-20-04-python3" class="headerlink" title="ubuntu 20.04 python3"></a>ubuntu 20.04 python3</h2><p>最近无事，电脑的ubuntu 18.04提示升级，一时手痒，升级到了20.04。升级结束，启用了相关的软件源，确实是有很多非ubuntu源里的软件不可以使用了。</p>
<p>之前使用的一个简单的python3 IDE打开提示报错，重新安装mu-editor。</p>
<p>ubuntu下安装，直接使用pip安装。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip3 install mu-editor</span><br><span class="line"><span class="comment"># 创建快捷方式</span></span><br><span class="line">pip3 install shortcut</span><br><span class="line">shortcut mu-editor</span><br></pre></td></tr></table></figure>
<p>运行程序报错：</p>
<blockquote>
<p>ModuleNotFoundError: No module named ‘PyQt5.QtSerialPort’</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 尝试操作如下:</span></span><br><span class="line">sudo pip3 install --upgrade pip setuptools pyserial --upgrade</span><br><span class="line">sudo pip3 install --upgrade pip setuptools -i https://pypi.tuna.tsinghua.edu.cn/simple   <span class="comment"># -i 指定清华的python3源</span></span><br><span class="line">sudo pip3 install launchpadlib -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line">sudo pip3 install pyserial -i https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line"></span><br><span class="line">sudo apt install python3 python3-pip</span><br><span class="line">sudo apt install python3 python3-pyqt5</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重新安装 python3 python3-pyqt5</span></span><br><span class="line">sudo apt install python3-serial python3-pyqt5 --reinstall</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重点这个</span></span><br><span class="line">sudo apt-get install python3-pyqt5.qtserialport</span><br><span class="line"></span><br><span class="line">运行时，还有错误</span><br><span class="line">sudo apt-get install python3-pyqt5.qsci</span><br><span class="line"></span><br><span class="line">装完这个后，正常使用了。缺哪个装哪个。</span><br></pre></td></tr></table></figure>
<p>参考<a href="https://github.com/tasmota/tasmotizer/issues/12">连接</a></p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql ibdata 数据迁移</title>
    <url>/2020/03/07/mysql-ibdata-%E6%95%B0%E6%8D%AE%E8%BF%81%E7%A7%BB/</url>
    <content><![CDATA[<h2 id="mysql-ibdata1数据迁移"><a href="#mysql-ibdata1数据迁移" class="headerlink" title="mysql ibdata1数据迁移"></a>mysql ibdata1数据迁移</h2><p>这两天zabbix上提示一台数据库的空间要满了。mariadb是直接yum安装的，查了一下，/var/lib/mysql/下的文件ibdata1太大了，34G+，根目录下已经快撑满 了。看了一下硬盘的其它分区，还有一个目录挂载的还有500多个G，是肯定够用的。迁移操作如下：</p>
<p>1 备份数据库</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /home</span><br><span class="line">mkdri mysql </span><br><span class="line">chown mysql:mysql ./mysql -R</span><br><span class="line">mysqldump -u root -p --add-drop-table --all-databases &gt; ./mysql_20200307.sql</span><br></pre></td></tr></table></figure>
<p>2 关闭mysql服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl stop mariadb</span><br></pre></td></tr></table></figure>
<p>3 迁移数据</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /var/lib/mysql/</span><br><span class="line">mv -rv ./* /home/mysql/</span><br></pre></td></tr></table></figure>
<p>4 修改mysql配置文件 </p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">vi /etc/my.cnf</span><br><span class="line"><span class="comment"># 修改datadir和socket路径</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改前</span></span><br><span class="line">[mysqld]</span><br><span class="line">datadir=/var/lib/mysql</span><br><span class="line">socket=/var/lib/mysql/mysql.sock</span><br><span class="line"><span class="comment"># Disabling symbolic-links is recommended to prevent assorted security risks</span></span><br><span class="line">symbolic-links=0</span><br><span class="line"><span class="comment"># Settings user and group are ignored when systemd is used.</span></span><br><span class="line"><span class="comment"># If you need to run mysqld under a different user or group,</span></span><br><span class="line"><span class="comment"># customize your systemd unit file for mariadb according to the</span></span><br><span class="line"><span class="comment"># instructions in http://fedoraproject.org/wiki/Systemd</span></span><br><span class="line"></span><br><span class="line">[mysqld_safe]</span><br><span class="line">log-error=/var/<span class="built_in">log</span>/mariadb/mariadb.log</span><br><span class="line">pid-file=/var/run/mariadb/mariadb.pid</span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># include all files from the config directory</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">!includedir /etc/my.cnf.d</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改后</span></span><br><span class="line">[mysqld]</span><br><span class="line">datadir=/home/mysql</span><br><span class="line">socket=/home/mysql/mysql.sock</span><br><span class="line"><span class="comment"># Disabling symbolic-links is recommended to prevent assorted security risks</span></span><br><span class="line">symbolic-links=0</span><br><span class="line"><span class="comment"># Settings user and group are ignored when systemd is used.</span></span><br><span class="line"><span class="comment"># If you need to run mysqld under a different user or group,</span></span><br><span class="line"><span class="comment"># customize your systemd unit file for mariadb according to the</span></span><br><span class="line"><span class="comment"># instructions in http://fedoraproject.org/wiki/Systemd</span></span><br><span class="line"></span><br><span class="line">[mysqld_safe]</span><br><span class="line">log-error=/var/<span class="built_in">log</span>/mariadb/mariadb.log</span><br><span class="line">pid-file=/var/run/mariadb/mariadb.pid</span><br><span class="line"></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># include all files from the config directory</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line">!includedir /etc/my.cnf.d</span><br></pre></td></tr></table></figure>
<p>5 重新启动mariadb</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl restart mariadb</span><br><span class="line"><span class="comment"># 创建mysql.sock软链接</span></span><br><span class="line"></span><br><span class="line">ln -s /home/mysql/mysql.sock /var/lib/mysql/mysql.sock</span><br><span class="line"></span><br><span class="line">mysql -u root -p</span><br><span class="line"></span><br><span class="line">登录成功，mariadb服务和登录正常。</span><br></pre></td></tr></table></figure>
<p>结束。</p>
]]></content>
      <tags>
        <tag>database</tag>
      </tags>
  </entry>
  <entry>
    <title>mysql 常用操作</title>
    <url>/2019/04/21/mysql-%E5%B8%B8%E7%94%A8%E6%93%8D%E4%BD%9C/</url>
    <content><![CDATA[<p>记录一些mysql 基本操作的命令，这是少接触，怕用到的那一部分。有需要了，还得回这里看看，以备万一，哪天有时间了，也可以过来学学。这就样。</p>
<h2 id="mysql基本常用命令汇总"><a href="#mysql基本常用命令汇总" class="headerlink" title="mysql基本常用命令汇总"></a>mysql基本常用命令汇总</h2><h3 id="常用总结"><a href="#常用总结" class="headerlink" title="常用总结"></a>常用总结</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">creat database name; 创建数据库</span><br><span class="line">use database_name; 选择数据库</span><br><span class="line">drop database db_name; 直接删除数据库，不提醒</span><br><span class="line">show tables; 显示表</span><br><span class="line">describe table_name; 表的详细描述</span><br><span class="line">select 中加上distinct去除重复字段</span><br><span class="line"></span><br><span class="line">显示当前mysql版本和当前日期</span><br><span class="line"></span><br><span class="line">select version(), current_date;</span><br><span class="line"></span><br><span class="line">修改用户密码，如root</span><br><span class="line"></span><br><span class="line">mysql&gt; update user <span class="built_in">set</span> authentication_string=password(<span class="string">&#x27;new_password&#x27;</span>) WHERE user=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">Query OK, <span class="comment">### row affected, ### warning (0.08 sec)</span></span><br><span class="line">Rows matched: <span class="comment">###  Changed: ###  Warnings: 1</span></span><br><span class="line"></span><br><span class="line">创建用户</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">CREATE USER <span class="string">&#x27;your_name&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class="string">&#x27;password&#x27;</span>;</span><br><span class="line"></span><br><span class="line">用户授权</span><br><span class="line"></span><br><span class="line">GRANT ALL PRIVILEGES ON *.* TO <span class="string">&#x27;your_name&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> WITH GRANT OPTION</span><br><span class="line"></span><br><span class="line">取消授权</span><br><span class="line"></span><br><span class="line">mysql&gt; select user, host from mysql.user;  查看已经存在的用户</span><br><span class="line">mysql&gt; revoke all privileges on *.* from <span class="built_in">test</span>@localhost; 取消授权</span><br><span class="line">mysql&gt; delete from user <span class="built_in">where</span> user=<span class="string">&quot;test&quot;</span> and host=<span class="string">&quot;localhost&quot;</span>; 删除用户</span><br><span class="line">mysql&gt; delete from user <span class="built_in">where</span> user=<span class="string">&quot;test&quot;</span> and host=<span class="string">&quot;localhost&quot;</span>;</span><br></pre></td></tr></table></figure>
<h2 id="创建和操作表"><a href="#创建和操作表" class="headerlink" title="创建和操作表"></a>创建和操作表</h2><h3 id="创建表语法"><a href="#创建表语法" class="headerlink" title="创建表语法"></a>创建表语法</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">create table &lt;表名&gt;(</span><br><span class="line">    &lt;列名<span class="comment">###  &lt;数据类型&gt; &lt;约束条件&gt;</span></span><br><span class="line">    &lt;列名<span class="comment">###  &lt;数据类型&gt; &lt;约束条件&gt;</span></span><br><span class="line">    &lt;列名<span class="comment">###  &lt;数据类型&gt; &lt;约束条件&gt;</span></span><br><span class="line">    .....</span><br><span class="line">);</span><br></pre></td></tr></table></figure>
<h3 id="NULL值"><a href="#NULL值" class="headerlink" title="NULL值"></a>NULL值</h3><p>在定义表时，可以在约束条件中指定该列允许或不允许NULL值。如果指定不允许NULL值，则在插入数据时如果为NULL就会报错。</p>
<h3 id="默认值"><a href="#默认值" class="headerlink" title="默认值"></a>默认值</h3><p>可以在定义表时使用默认值，使用关键词default &lt;值&gt;进行设定，如果在插入数据时，没有值插入，则该列会插入默认值。</p>
<h3 id="更新表"><a href="#更新表" class="headerlink" title="更新表"></a>更新表</h3><p>更新表使用alter table语句，我们可以进行如下操作：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">alter table &lt;表名&gt; add column &lt;列名&gt; &lt;数据类型&gt;;   //增加新列</span><br><span class="line">alter table &lt;表名&gt; drop column &lt;列名&gt;;  //删除列</span><br></pre></td></tr></table></figure>
<h3 id="重命名表"><a href="#重命名表" class="headerlink" title="重命名表"></a>重命名表</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rename table &lt;旧表名&gt; to &lt;新表名&gt;;</span><br></pre></td></tr></table></figure>
<h3 id="删除表"><a href="#删除表" class="headerlink" title="删除表"></a>删除表</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">drop table &lt;表名&gt;;</span><br></pre></td></tr></table></figure>
<h2 id="检索数据"><a href="#检索数据" class="headerlink" title="检索数据"></a>检索数据</h2><h3 id="检索单列"><a href="#检索单列" class="headerlink" title="检索单列"></a>检索单列</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">select &lt;列名&gt; from &lt;表名&gt;;</span><br></pre></td></tr></table></figure>
<h3 id="检索多列"><a href="#检索多列" class="headerlink" title="检索多列"></a>检索多列</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">select &lt;列名1&gt;, &lt;列名2&gt;, ... from &lt;表名&gt;;</span><br></pre></td></tr></table></figure>
<h3 id="检索不同值"><a href="#检索不同值" class="headerlink" title="检索不同值"></a>检索不同值</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">select distinct(&lt;列名&gt;) from &lt;表名&gt;;</span><br></pre></td></tr></table></figure>
<h3 id="限制结果"><a href="#限制结果" class="headerlink" title="限制结果"></a>限制结果</h3><p>在mysql中，如果我们需要限制结果输出的条数，可以使用limit &lt;数字&gt;来表示限制的行数。</p>
<h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 注释     //单行注释</span></span><br><span class="line">/* 多行注释</span><br><span class="line">   多行注释</span><br><span class="line">*/</span><br></pre></td></tr></table></figure>
<h2 id="排序检索数据"><a href="#排序检索数据" class="headerlink" title="排序检索数据"></a>排序检索数据</h2><p>有时我们需要对检索出来的数据进行排序，这时我们使用如下语句进行:</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">order by &lt;列名&gt; asc/desc;</span><br></pre></td></tr></table></figure>
<p>asc为升序排序，也是mysql中默认的排序方式；desc表示按照降序排序。此外根据需要我们也可以对多列进行排序，如下代码所示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">order by &lt;列名1&gt; &lt;排序方法&gt;, &lt;列名2&gt; &lt;排序方法&gt;....;</span><br></pre></td></tr></table></figure>
<p>值得注意的是，<strong>order by 语句通常位于查询语句的最后面</strong>。后面会具体介绍查询语句的完整构成。</p>
<h2 id="过滤数据"><a href="#过滤数据" class="headerlink" title="过滤数据"></a>过滤数据</h2><h3 id="使用where子句"><a href="#使用where子句" class="headerlink" title="使用where子句"></a>使用where子句</h3><p>在sql中，我们使用where子名来对查询出的结果进行过滤，得到我们所需要的数据。它的格式如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">select &lt;列名&gt; from &lt;表名&gt;</span><br><span class="line"><span class="built_in">where</span> &lt;过滤条件&gt;;</span><br></pre></td></tr></table></figure>
<p>过滤条件有多个时，我们可以使用and或or来进行多个条件的罗列。值得注意的是，当有多个过滤条件时，<strong>and的优先级会高于or</strong>，这也许会导致一些逻辑错误，需要注意。</p>
<h3 id="where子句操作符"><a href="#where子句操作符" class="headerlink" title="where子句操作符"></a>where子句操作符</h3><table>
<thead>
<tr>
<th>运算符</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>=</td>
<td>等于</td>
</tr>
<tr>
<td>&lt;&gt;</td>
<td>不等于。<strong>注释</strong>：在SQL的一些版本中，该操作符可以被写成!=</td>
</tr>
</tbody></table>
<blockquote>
<p>|大于<br>&lt;|小于<br>=|大于等于<br>&lt;=|小于等于<br>BETWEEN|在某个范围内<br>LINK|搜索某种模式<br>IN|指定针对某个列的多个可能值</p>
</blockquote>
<p>值得注意的是，在判断某个值是否为空值时，应该使用is null或is not null来判断，而不是使用”= null”或”!= null”。</p>
<h3 id="使用通配符进行过滤"><a href="#使用通配符进行过滤" class="headerlink" title="使用通配符进行过滤"></a>使用通配符进行过滤</h3><p>在使用通配符进行过滤进，我们使用like操作符进行。</p>
<p>通配符主要包括两个，它们分别为百分号’%’和下划线’<em>‘，其中’%’表示使用长度的字符串，而下划线’</em>‘只表示一个字符；需要注意的是，’%’不仅可以表示一个或多个字符，还可以表示0个字符。</p>
<h2 id="创建计算字段"><a href="#创建计算字段" class="headerlink" title="创建计算字段"></a>创建计算字段</h2><h3 id="计算字段"><a href="#计算字段" class="headerlink" title="计算字段"></a>计算字段</h3><p>存储在数据库中的数据一般不是应用程序所需要的格式。</p>
<p>我们需要直接从数据库中检索出转化、计算或格式化过的数据；而不是检索出数据，然后再在客户机应用改程序或报告程序中重新格式化。</p>
<p>只有数据库知道select语句中哪些列是实际的表列，哪些列是计算字段。从客户机（应用程序）的角度来看，计算字段的数据是以与其它列的数据相同的方式返回的。</p>
<h3 id="拼接字段"><a href="#拼接字段" class="headerlink" title="拼接字段"></a>拼接字段</h3><p>在mysql中，我们可以使用concat函数对字段进行拼接，格式如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">concat(str1, str2, str3.....);</span><br></pre></td></tr></table></figure>
<p>对于字符串中存在的空格，我们可以用字符串处理函数RTRIM()、LTRIM()、TRIM()来进行处理。</p>
<h3 id="使用别名"><a href="#使用别名" class="headerlink" title="使用别名"></a>使用别名</h3><p>我们可以用关键字as来给我们的列起一个别名。格式如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">select &lt;列名&gt; as &lt;别名&gt; from &lt;表名&gt;;</span><br></pre></td></tr></table></figure>
<h2 id="使用函数处理数据"><a href="#使用函数处理数据" class="headerlink" title="使用函数处理数据"></a>使用函数处理数据</h2><p>函数的可移植性是很可的，而且使用函数可以很方便的对数据进行处理。</p>
<p>mysql函数主要有甲种</p>
<ul>
<li>文本函数</li>
<li>数值函数</li>
<li>时间与日期函数</li>
<li>系统函数</li>
</ul>
<p>下面介绍常用的一些函数</p>
<h3 id="文本函数"><a href="#文本函数" class="headerlink" title="文本函数"></a>文本函数</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">left(s, n)      //返回字符串左边的n个字符</span><br><span class="line">right(s, n)     //返回字符串右边的n个字符</span><br><span class="line">trim(s)         //去掉字符串s的空格</span><br><span class="line">ltrim(s)        //去掉字符中左边的空格</span><br><span class="line">rtrim(s)        //去掉字符串右边的空格</span><br><span class="line">length(s)       //计算字符串的长度</span><br><span class="line">lower(s)        //将字符串的所有字符变成小写</span><br><span class="line">upper(s)        //将字符串的所有字符变成大写</span><br></pre></td></tr></table></figure>
<h3 id="数值函数"><a href="#数值函数" class="headerlink" title="数值函数"></a>数值函数</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">abs(x)      //绝对值</span><br><span class="line">cos(x)</span><br><span class="line">sin(x)</span><br><span class="line">tan(x)</span><br><span class="line">acos(x) asin(x) atan(x)     //三角函数</span><br><span class="line">ceil(x)        //返回大于或等于X的最小整数</span><br><span class="line">floor(x)       //舍去x的小数部分，只保留整数部分，并且不进行四舍五入</span><br><span class="line">pi()           //返回圆周率</span><br><span class="line">sqrt(x)        //平方根</span><br><span class="line">pow(x,y)       //x的y次方</span><br><span class="line">exp(x)         //返回e的x次方</span><br><span class="line">rand()         //返回0－1的随机数</span><br><span class="line">round(x,y)     //返回x的值小数点后面的第y位，进行四舍五入</span><br><span class="line">truncate(x,y)  //返回x的值小数点后面的第y位，不进行四舍五入</span><br></pre></td></tr></table></figure>
<h3 id="日期与时间函数"><a href="#日期与时间函数" class="headerlink" title="日期与时间函数"></a>日期与时间函数</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">current_date()      //返回当前日期</span><br><span class="line">current_time()      //返回当前时间</span><br><span class="line">current_timestap()/now()        //返回当前日期和时间</span><br><span class="line">date()              //从日期或日期时间中撮日期值</span><br><span class="line">year() month() day() hour() minute()</span><br><span class="line">date_format(d, f)   //以指定格式显示日期</span><br><span class="line">datediff()</span><br><span class="line">timediff()</span><br><span class="line">timestapdiff()</span><br></pre></td></tr></table></figure>
<h3 id="汇总数据"><a href="#汇总数据" class="headerlink" title="汇总数据"></a>汇总数据</h3><p><strong>聚合函数</strong>：聚合函数就是用来数据汇总的一类函数。以下五个险函数务必牢记。它们通常和分级数据结合使用：</p>
<ul>
<li>avg()</li>
<li>min()</li>
<li>max()</li>
<li>count()</li>
<li>sum()</li>
</ul>
<p>需要注意的是，聚合函数均不会处理NULL值</p>
<h2 id="分级数据"><a href="#分级数据" class="headerlink" title="分级数据"></a>分级数据</h2><h3 id="创建分组"><a href="#创建分组" class="headerlink" title="创建分组"></a>创建分组</h3><p>创建分组使用group by子句，格式如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">select &lt;列名&gt; from &lt;表名&gt;</span><br><span class="line"><span class="built_in">where</span> &lt;过滤条件&gt;</span><br><span class="line">group by &lt;列名&gt;</span><br><span class="line">having &lt;过滤条件&gt;</span><br><span class="line">order by &lt;列名&gt; &lt;排序方式&gt;</span><br></pre></td></tr></table></figure>
<p>其实上面的格式也是select语句完整格式。</p>
<h3 id="过滤分组"><a href="#过滤分组" class="headerlink" title="过滤分组"></a>过滤分组</h3><p>过滤分组倩having，牢记<strong>where是行级过滤，having是组级过滤</strong></p>
<h2 id="使用子查询"><a href="#使用子查询" class="headerlink" title="使用子查询"></a>使用子查询</h2><p>子查询也就是select语句的嵌套，有了子查询我们就可以进行复杂的查询。</p>
<p>子查询返回的一张表，所以基位置也比较灵活，可以位于rom后面，也可以位于where后面。</p>
<p>子查询也可以说是<strong>一个一次性的视图</strong>。</p>
<p>在执行顺序上，先执行子查询，再执行外层的查询。</p>
<p>牢记：<strong>where子句中不能使用聚合函数</strong></p>
<h2 id="连接表"><a href="#连接表" class="headerlink" title="连接表"></a>连接表</h2><p>表的连接主要分为以下几种：</p>
<ul>
<li>内连接</li>
<li>外连接（左连接、右连接）</li>
<li>自连接</li>
</ul>
<h3 id="内连接"><a href="#内连接" class="headerlink" title="内连接"></a>内连接</h3><p>语法格式如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SELECT 查询字段 FROM 表1 [as] 别名 [INNER] JOIN 表2 [as] 别名 ON 表1.关系字段 ＝ 表2.关系字段</span><br></pre></td></tr></table></figure>
<p>内连接就是两个表的次部分。</p>
<h3 id="左连接"><a href="#左连接" class="headerlink" title="左连接"></a>左连接</h3><p>语法格式如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SELECT 查询字段 FROM 表1 [as] 别名 LEFT JOIN 表2 [as] 别名 ON 表1.关系字段 ＝ 表2.关系字段</span><br></pre></td></tr></table></figure>
<p>左连接就是左边表的记录要全部显示出来，右右只有和械表匹配到的记录才进行显示。</p>
<h3 id="右连接"><a href="#右连接" class="headerlink" title="右连接"></a>右连接</h3><p>和左连接相反。</p>
<h3 id="自连接"><a href="#自连接" class="headerlink" title="自连接"></a>自连接</h3><p>就是表一张表看成两张表，进行自连接往往是一张表的某些列间存在逻辑关系。</p>
<h2 id="组合查询"><a href="#组合查询" class="headerlink" title="组合查询"></a>组合查询</h2><h3 id="创建组合查询"><a href="#创建组合查询" class="headerlink" title="创建组合查询"></a>创建组合查询</h3><p>创建组合查询时我们使用UNION将两个或多个select语句查询的结果组合在一起形成一个表。</p>
<p>需要不同的select语句返回相同数量的列且对应列的数据类型相同，事实上应该是意义都一样才合理。</p>
<h3 id="union与union-all"><a href="#union与union-all" class="headerlink" title="union与union all"></a>union与union all</h3><p>对于组合查询结果的排序只需要使用一个order by子名句，放在最后一个select语句的后面即可。</p>
<h2 id="插入、更新删除数据"><a href="#插入、更新删除数据" class="headerlink" title="插入、更新删除数据"></a>插入、更新删除数据</h2><h3 id="插入数据"><a href="#插入数据" class="headerlink" title="插入数据"></a>插入数据</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">insert into &lt;表名&gt;(列名1，列名2，列名3...) values (数据...);</span><br></pre></td></tr></table></figure>
<p>虽然表名后面的列名表不是严格要求的，但是这样会更安全。如果不写出列名，则需要严格按照表的定义插入数据。</p>
<p>如果我们只需要插入一行中的部分列，那么列出列名就变得必须了。</p>
<h4 id="插入检索出的数据"><a href="#插入检索出的数据" class="headerlink" title="插入检索出的数据"></a>插入检索出的数据</h4><p>使用insert …select 语句进行。以下是格式：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">insert into &lt;表名&gt;(列名表)</span><br><span class="line">select &lt;列名表&gt; from &lt;表名&gt;;</span><br></pre></td></tr></table></figure>
<h4 id="复制表"><a href="#复制表" class="headerlink" title="复制表"></a>复制表</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">create table copytable as </span><br><span class="line">select * from &lt;表名&gt;;</span><br></pre></td></tr></table></figure>
<h4 id="更新数据"><a href="#更新数据" class="headerlink" title="更新数据"></a>更新数据</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">update &lt;表名&gt;</span><br><span class="line"><span class="built_in">set</span> &lt;列名&gt; = ...</span><br><span class="line"><span class="built_in">where</span> &lt;过滤条件&gt;;</span><br></pre></td></tr></table></figure>
<p>一定切记不要忘了过滤条件，否则将会对所有的行的数据进行更新。</p>
<h4 id="删除数据"><a href="#删除数据" class="headerlink" title="删除数据"></a>删除数据</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">delect from &lt;表名&gt; <span class="built_in">where</span> &lt;过滤条件&gt;;</span><br></pre></td></tr></table></figure>
<p>如果要删除某行中某列的元素，可以将其值更新为NULL。</p>
<h2 id="使用视图"><a href="#使用视图" class="headerlink" title="使用视图"></a>使用视图</h2><p>视图是一张虚表，它并不在座实际的数据，存储的只是select语句。</p>
<p>使用视力有如下的优点</p>
<ul>
<li>提高sql语句的重用性</li>
<li>保证了数据的安全性</li>
<li>大大简化了sql语句</li>
</ul>
<h3 id="创建视图"><a href="#创建视图" class="headerlink" title="创建视图"></a>创建视图</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">create view &lt;视图名&gt; as &lt;select 语句&gt;;</span><br></pre></td></tr></table></figure>
<h3 id="删除视图"><a href="#删除视图" class="headerlink" title="删除视图"></a>删除视图</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">drop view &lt;视图名&gt;;</span><br></pre></td></tr></table></figure>
<h2 id="事务"><a href="#事务" class="headerlink" title="事务"></a>事务</h2><h3 id="什么是事务"><a href="#什么是事务" class="headerlink" title="什么是事务"></a>什么是事务</h3><p>需要在同一个处理单元中执行的一系列更新处理的集合。一个事务中包含了多少个更新处理或者包含了哪些处理，在DBMS中没有固定的标准，而是根据用户的要求决定的。</p>
<h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">start tyransaction;</span><br><span class="line">DML 语句1；</span><br><span class="line">DML 语句2；</span><br><span class="line">DML 语句3；</span><br><span class="line">...</span><br><span class="line">ROLLBACK／COMMIT；</span><br></pre></td></tr></table></figure>
<h3 id="理解事务"><a href="#理解事务" class="headerlink" title="理解事务"></a>理解事务</h3><p>事务其实很好理解，它将一系列操作放在一个块中形成一个代码块，这个代码块要执行就全部执行，要么就不执行。</p>
<p>拿银行转账为例，转账过程为，我的账户金额减少－－》对方账户金额增加－－》交易完毕。</p>
<p>如果我的账户金额减少后出现了故障导致对方账户金额没有增加，那么这肯定是不被允许的。所以这个转账过程中的每一步都必须完整的执行。</p>
<p>ROLLBACK就是在DML语句出现故障时，来便利数据库回滚到执行操作前的状态。而COMMIT则是所有DML正确执行后才执行，告诉系统这个事务正常完成了，系统可以进入下一个新的状态了。</p>
<h2 id="补充知识点"><a href="#补充知识点" class="headerlink" title="补充知识点"></a>补充知识点</h2><h3 id="case-when-语句"><a href="#case-when-语句" class="headerlink" title="case when 语句"></a>case when 语句</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="keyword">case</span> when &lt;表达式1&gt; <span class="keyword">then</span> &lt;表达式&gt;</span><br><span class="line">     when &lt;表达式2&gt; them &lt;表达式&gt;</span><br><span class="line">     ...</span><br><span class="line">     <span class="keyword">else</span> &lt;表达式&gt;</span><br><span class="line">end</span><br></pre></td></tr></table></figure>
<h3 id="sql语句及种类"><a href="#sql语句及种类" class="headerlink" title="sql语句及种类"></a>sql语句及种类</h3><p>这是sql的基础知识：</p>
<p>－ DDL：数据定义语言，用来创建、删除存储数据的数据训以及数据库中的表的对象，包含的指令有：CREATE、DROOP、ALTER<br>－ DML：数据操纵语言，用来查询或者变更表中的记录。包含的指令有：SELECT、INSERT、UPDATE、DELETE<br>－ DCL：数据控制语言，用来确认或者取消对数据库中的数据进行的变量。包含的指令有：COMMIT、ROLLBACK、GRANT、REVOKE</p>
<h3 id="exists谓词"><a href="#exists谓词" class="headerlink" title="exists谓词"></a>exists谓词</h3><p>在sql语言中，exists(存在)谓词是一个非常重要的查询关键词。</p>
<p>exists代表<strong>存在</strong>量词。带有exists谓词的子查询不返回任何数据，只产生逻辑真值“true”或逻辑假值“flase”。</p>
]]></content>
      <tags>
        <tag>database</tag>
      </tags>
  </entry>
  <entry>
    <title>openssh 添加 sha1支持</title>
    <url>/2021/01/29/openssh-%E6%B7%BB%E5%8A%A0-sha1%E6%94%AF%E6%8C%81/</url>
    <content><![CDATA[<h2 id="openssh-添加-sha1支持"><a href="#openssh-添加-sha1支持" class="headerlink" title="openssh 添加 sha1支持"></a>openssh 添加 sha1支持</h2><p>ubuntu 20.04 默认的 openssh 版本8.2p1不再支持老的hash加密算法。连接网络设备时报错。提示如下：</p>
<blockquote>
<p>Unable to negotiate with 10.10.100.253 port 22: no matching key exchange method found. Their offer: diffie-hellman-group-exchange-sha1,diffie-hellman-group14-sha1</p>
</blockquote>
<p><img src="https://blog.ywmy.xyz/network/diffine-hellman.jpg" alt="diffine-hellman"></p>
<h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><ul>
<li>方法一</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -oKexAlgorithms=+diffie-hellman-group1-sha1 user@legacyhost</span><br></pre></td></tr></table></figure>
<p>如上面示例设备提供的加密算法为diffie-hellman-group14-sha1<br>连接时实际使用：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -oKexAlgorithms=+diffie-hellman-group14-sha1 admin@10.10.100.253</span><br></pre></td></tr></table></figure>
<ul>
<li>方法二</li>
</ul>
<p>编辑家目录下的配置文件(~/.ssh/config)</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Host somehost.example.org</span><br><span class="line">    KexAlgorithms +diffie-hellman-group1-sha1</span><br></pre></td></tr></table></figure>
<p>追加到config文件后面，即可。</p>
<p>其它的算法支持，参考openssh官方<a href="http://www.openssh.com/legacy.html">文档</a>。</p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>python pip</title>
    <url>/2019/06/17/python-pip/</url>
    <content><![CDATA[<h2 id="ubuntu-pip相关小问题"><a href="#ubuntu-pip相关小问题" class="headerlink" title="ubuntu pip相关小问题"></a>ubuntu pip相关小问题</h2><h3 id="ImportError-No-module-named-‘setuptools’"><a href="#ImportError-No-module-named-‘setuptools’" class="headerlink" title="ImportError: No module named ‘setuptools’"></a>ImportError: No module named ‘setuptools’</h3><p>解决办法：安装setuptools</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Python 2.x:    sudo apt-get install python-setuptools</span><br><span class="line">Python 3.x:    sudo apt-get install python3-setuptools</span><br></pre></td></tr></table></figure>
<p>如果安装出现错误：AttributeError: module ‘setuptools.dist’ has no attribute ‘check_specifier’</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Python 2.x:</span><br><span class="line">pip install --upgrade pip</span><br><span class="line"><span class="built_in">hash</span> -r pip</span><br><span class="line"></span><br><span class="line">Python 3.x:</span><br><span class="line">pip3 install --upgrade pip</span><br><span class="line"><span class="built_in">hash</span> -r pip3</span><br><span class="line"></span><br><span class="line"><span class="built_in">cd</span> (Mask RCNN root folder)</span><br><span class="line">sudo python3 setup.py install</span><br></pre></td></tr></table></figure>
<h3 id="pip升级"><a href="#pip升级" class="headerlink" title="pip升级"></a>pip升级</h3><p>pip升级后出现错误：Import Error:cannot import name main</p>
<p>解决办法：</p>
<ul>
<li><p>方法1</p>
<p>更改from pip import main</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 更改下面行内容</span></span><br><span class="line">from pip import main</span><br><span class="line"><span class="comment"># 更改为</span></span><br><span class="line">from pip._internal import main</span><br></pre></td></tr></table></figure>
<ul>
<li>方法2</li>
</ul>
<p>更改sys.exit</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 原内容：</span></span><br><span class="line">from pip import main</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    sys.exit(main())</span><br><span class="line"><span class="comment"># 更改后内容</span></span><br><span class="line">from pip import __main__</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    sys.exit(__main__._main())</span><br></pre></td></tr></table></figure>
<p>注意__main__左右的下划线是两个下划线。</p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>snmpwalk 用法</title>
    <url>/2018/11/01/snmpwalk-%E7%94%A8%E6%B3%95/</url>
    <content><![CDATA[<h2 id="snmpwalk-SNMP-V1-V2-SNMP-V3"><a href="#snmpwalk-SNMP-V1-V2-SNMP-V3" class="headerlink" title="snmpwalk (SNMP V1 / V2 / SNMP V3)"></a>snmpwalk (SNMP V1 / V2 / SNMP V3)</h2><h2 id="安装snmp"><a href="#安装snmp" class="headerlink" title="安装snmp"></a>安装snmp</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum install net-snmp-utils</span><br></pre></td></tr></table></figure>
<p>or</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt install snmp</span><br></pre></td></tr></table></figure>
<h2 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h2><h3 id="命令行"><a href="#命令行" class="headerlink" title="命令行"></a>命令行</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">snmpwalk [选项] agent [OID]</span><br><span class="line"></span><br></pre></td></tr></table></figure>
<h3 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h3><table>
<thead>
<tr>
<th>序号</th>
<th>参数</th>
<th>帮助</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>-h</td>
<td>显示帮助</td>
</tr>
<tr>
<td>2</td>
<td>-v 1/2c/3</td>
<td>指定snmp版本</td>
</tr>
<tr>
<td>3</td>
<td>-V</td>
<td>显示当前SNMP命令行版本</td>
</tr>
<tr>
<td>4</td>
<td>-r RETRIES</td>
<td>指定重试次数，默认为0次</td>
</tr>
<tr>
<td>5</td>
<td>-t TIMEOUT</td>
<td>指定每次请求等待超时时间，单位为秒，默认为3秒</td>
</tr>
<tr>
<td>6</td>
<td>-Cc</td>
<td>指定在当前WALK时，如果发现OID负增长将是否继续WALK</td>
</tr>
<tr>
<td>7</td>
<td>-c COMMUNITY</td>
<td>[snmp v1/v2c选项]指定共同体字符串</td>
</tr>
</tbody></table>
<p>V3选项</p>
<table>
<thead>
<tr>
<th>序号</th>
<th>参数</th>
<th>帮助</th>
</tr>
</thead>
<tbody><tr>
<td>1</td>
<td>-l LEVEL</td>
<td>指定安全级别(noAuthNoPriv/authNoPriv/authPriv)</td>
</tr>
<tr>
<td>2</td>
<td>-u USER-NAME</td>
<td>安全名字</td>
</tr>
<tr>
<td>3</td>
<td>-a PROTOCOL</td>
<td>验证协议：MD5/SHA。-l指定为authNopriv或authPriv时需要</td>
</tr>
<tr>
<td>4</td>
<td>-A PASSPHRASE</td>
<td>验证字符串。如果-l指定为authNoPriv或authPriv时才需要</td>
</tr>
<tr>
<td>5</td>
<td>-x PROTOCOL</td>
<td>加密协议：DES。如果-l指定为authPriv时才需要</td>
</tr>
<tr>
<td>6</td>
<td>-X PASSPHARSE</td>
<td>加密字符串：如果-l指定为authPriv时才需要</td>
</tr>
</tbody></table>
<h3 id="应用示例"><a href="#应用示例" class="headerlink" title="应用示例"></a>应用示例</h3><h4 id="SNMP-V3-应用示例"><a href="#SNMP-V3-应用示例" class="headerlink" title="SNMP V3 应用示例"></a>SNMP V3 应用示例</h4><ul>
<li>指定验证协议和加密协义示例：</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">snmpwalk -v 3 -u <span class="built_in">test</span> -a sha -A abcdefg -x AES -X hijklmnopq -l authPriv 192.168.1.1 interfaces.ifTable.ifEntry.ifOutOctets（或者使用OID号）</span><br><span class="line">其中-v选择版本号</span><br><span class="line">-u用户名</span><br><span class="line">-a认证算法为SHA-1</span><br><span class="line">-A认证密码为abcdefg</span><br><span class="line">-x加密协议为AES</span><br><span class="line">-X加密密码为hijklmnopq</span><br><span class="line">-l authPriv启用认证和加密功能</span><br><span class="line">interfaces.ifTable.ifEntry.ifOutOctets（查看接口出去的流量）</span><br></pre></td></tr></table></figure>
<ul>
<li>不认证也不加密示例</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">snmpvalk -v 3 -u <span class="built_in">test</span> -l noAuthNoPriv -u <span class="built_in">test</span> 192.168.1.1 interfaces.ifTable.ifEntry.ifOutOctets（或者使用OID号）</span><br></pre></td></tr></table></figure>
<ul>
<li>认证不加密示例</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">snmpvalk -v 3 -u <span class="built_in">test</span> -l authNoPriv -u <span class="built_in">test</span> -a sha -A abcdefg 192.168.1.1 interfaces.ifTable.ifEntry.ifOutOctets（或者使用OID号）</span><br></pre></td></tr></table></figure>
<h4 id="SNMP-V2-应用示例"><a href="#SNMP-V2-应用示例" class="headerlink" title="SNMP V2 应用示例"></a>SNMP V2 应用示例</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">SNMP V2认证使用方法</span><br><span class="line">snmpwalk -v 2c -c public 10.103.33.1 .1.3.6.1.2.1.25.1</span><br><span class="line">snmpwalk -v 2c -c mysecretsnmp 10.20.30.1 SNMPv2-MIB::sysContact.0</span><br></pre></td></tr></table></figure>
<h4 id="SNMP-V1-应用示例"><a href="#SNMP-V1-应用示例" class="headerlink" title="SNMP V1 应用示例"></a>SNMP V1 应用示例</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">snmpwalk -v 2c -c public 10.103.33.1 .1.3.6.1.2.1.25.1</span><br></pre></td></tr></table></figure>
<h2 id="常用的OID信息"><a href="#常用的OID信息" class="headerlink" title="常用的ＯＩＤ信息"></a>常用的ＯＩＤ信息</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Variable Descriptor Object Identifier</span><br><span class="line">System Group</span><br><span class="line">sysDescr 1.3.6.1.2.1.1.1</span><br><span class="line">sysObjectID 1.3.6.1.2.1.1.2</span><br><span class="line">sysUpTime 1.3.6.1.2.1.1.3</span><br><span class="line">sysContact 1.3.6.1.2.1.1.4</span><br><span class="line">sysName 1.3.6.1.2.1.1.5</span><br><span class="line">sysLocation 1.3.6.1.2.1.1.6</span><br><span class="line">sysServices 1.3.6.1.2.1.1.7</span><br><span class="line"></span><br><span class="line">interfaces Group</span><br><span class="line">ifNumber 1.3.6.1.2.1.2.1</span><br><span class="line">ifTable 1.3.6.1.2.1.2.2</span><br><span class="line">ifEntry 1.3.6.1.2.1.2.2.1</span><br><span class="line">ifIndex 1.3.6.1.2.1.2.2.1.1</span><br><span class="line">ifDescr 1.3.6.1.2.1.2.2.1.2</span><br><span class="line">ifType 1.3.6.1.2.1.2.2.1.3</span><br><span class="line">ifMtu 1.3.6.1.2.1.2.2.1.4</span><br><span class="line">ifSpeed 1.3.6.1.2.1.2.2.1.5</span><br><span class="line">ifPhysAddress 1.3.6.1.2.1.2.2.1.6</span><br><span class="line">ifAdminStatus 1.3.6.1.2.1.2.2.1.7</span><br><span class="line">ifOperStatus 1.3.6.1.2.1.2.2.1.8</span><br><span class="line">ifLastChange 1.3.6.1.2.1.2.2.1.9</span><br><span class="line">ifInOctets 1.3.6.1.2.1.2.2.1.10</span><br><span class="line">ifInUcastPkts 1.3.6.1.2.1.2.2.1.11</span><br><span class="line">ifInNUcastPkts 1.3.6.1.2.1.2.2.1.12</span><br><span class="line">ifInDiscards 1.3.6.1.2.1.2.2.1.13</span><br><span class="line">ifInErrors 1.3.6.1.2.1.2.2.1.14</span><br><span class="line">ifInUnknownProtos 1.3.6.1.2.1.2.2.1.15</span><br><span class="line">ifOutOctets 1.3.6.1.2.1.2.2.1.16</span><br><span class="line">ifOutUcastPkts 1.3.6.1.2.1.2.2.1.17</span><br><span class="line">ifOutNUcastPkts 1.3.6.1.2.1.2.2.1.18</span><br><span class="line">ifOutDiscards 1.3.6.1.2.1.2.2.1.19</span><br><span class="line">ifOutErrors 1.3.6.1.2.1.2.2.1.20</span><br><span class="line">ifOutQLen 1.3.6.1.2.1.2.2.1.21</span><br><span class="line">ifSpecific 1.3.6.1.2.1.2.2.1.22</span><br><span class="line"></span><br><span class="line">IP Group</span><br><span class="line">ipForwarding 1.3.6.1.2.1.4.1</span><br><span class="line">ipDefaultTTL 1.3.6.1.2.1.4.2</span><br><span class="line">ipInReceives 1.3.6.1.2.1.4.3</span><br><span class="line">ipInHdrErrors 1.3.6.1.2.1.4.4</span><br><span class="line">ipInAddrErrors 1.3.6.1.2.1.4.5</span><br><span class="line">ipForwDatagrams 1.3.6.1.2.1.4.6</span><br><span class="line">ipInUnknownProtos 1.3.6.1.2.1.4.7</span><br><span class="line">ipInDiscards 1.3.6.1.2.1.4.8</span><br><span class="line">ipInDelivers 1.3.6.1.2.1.4.9</span><br><span class="line">ipOutRequests 1.3.6.1.2.1.4.10</span><br><span class="line">ipOutDiscards 1.3.6.1.2.1.4.11</span><br><span class="line">ipOutNoRoutes 1.3.6.1.2.1.4.12</span><br><span class="line">ipReasmTimeout 1.3.6.1.2.1.4.13</span><br><span class="line">ipReasmReqds 1.3.6.1.2.1.4.14</span><br><span class="line">ipReasmOKs 1.3.6.1.2.1.4.15</span><br><span class="line">ipReasmFails 1.3.6.1.2.1.4.16</span><br><span class="line">ipFragsOKs 1.3.6.1.2.1.4.17</span><br><span class="line">ipFragsFails 1.3.6.1.2.1.4.18</span><br><span class="line">ipFragCreates 1.3.6.1.2.1.4.19</span><br><span class="line">ipAddrTable 1.3.6.1.2.1.4.20</span><br><span class="line">ipAddrEntry 1.3.6.1.2.1.4.20.1</span><br><span class="line">ipAdEntAddr 1.3.6.1.2.1.4.20.1.1</span><br><span class="line">ipAdEntIfIndex 1.3.6.1.2.1.4.20.1.2</span><br><span class="line">ipAdEntNetMask 1.3.6.1.2.1.4.20.1.3</span><br><span class="line">ipAdEntBcastAddr 1.3.6.1.2.1.4.20.1.4</span><br><span class="line">ipAdEntReasmMaxSize 1.3.6.1.2.1.4.20.1.5</span><br><span class="line"></span><br><span class="line">ICMP Group</span><br><span class="line">icmpInMsgs 1.3.6.1.2.1.5.1</span><br><span class="line">icmpInErrors 1.3.6.1.2.1.5.2</span><br><span class="line">icmpInDestUnreachs 1.3.6.1.2.1.5.3</span><br><span class="line">icmpInTimeExcds 1.3.6.1.2.1.5.4</span><br><span class="line">icmpInParmProbs 1.3.6.1.2.1.5.5</span><br><span class="line">icmpInSrcQuenchs 1.3.6.1.2.1.5.6</span><br><span class="line">icmpInRedirects 1.3.6.1.2.1.5.7</span><br><span class="line">icmpInEchos 1.3.6.1.2.1.5.8</span><br><span class="line">icmpInEchoReps 1.3.6.1.2.1.5.9</span><br><span class="line">icmpInTimestamps 1.3.6.1.2.1.5.10</span><br><span class="line">icmpInTimestampReps 1.3.6.1.2.1.5.11</span><br><span class="line">icmpInAddrMasks 1.3.6.1.2.1.5.12</span><br><span class="line">icmpInAddrMaskReps 1.3.6.1.2.1.5.13</span><br><span class="line">icmpOutMsgs 1.3.6.1.2.1.5.14</span><br><span class="line">icmpOutErrors 1.3.6.1.2.1.5.15</span><br><span class="line">icmpOutDestUnreachs 1.3.6.1.2.1.5.16</span><br><span class="line">icmpOutTimeExcds 1.3.6.1.2.1.5.17</span><br><span class="line">icmpOutParmProbs 1.3.6.1.2.1.5.18</span><br><span class="line">icmpOutSrcQuenchs 1.3.6.1.2.1.5.19</span><br><span class="line">icmpOutRedirects 1.3.6.1.2.1.5.20</span><br><span class="line">icmpOutEchos 1.3.6.1.2.1.5.21</span><br><span class="line">icmpOutEchoReps 1.3.6.1.2.1.5.22</span><br><span class="line">icmpOutTimestamps 1.3.6.1.2.1.5.23</span><br><span class="line">icmpOutTimestampReps 1.3.6.1.2.1.5.24</span><br><span class="line">icmpOutAddrMasks 1.3.6.1.2.1.5.25</span><br><span class="line">icmpOutAddrMaskReps 1.3.6.1.2.1.5.26</span><br><span class="line"></span><br><span class="line">TCP Group</span><br><span class="line">tcpRtoAlgorithm 1.3.6.1.2.1.6.1</span><br><span class="line">tcpRtoMin 1.3.6.1.2.1.6.2</span><br><span class="line">tcpRtoMax 1.3.6.1.2.1.6.3</span><br><span class="line">tcpMaxConn 1.3.6.1.2.1.6.4</span><br><span class="line">tcpActiveOpens 1.3.6.1.2.1.6.5</span><br><span class="line">tcpPassiveOpens 1.3.6.1.2.1.6.6</span><br><span class="line">tcpAttemptFails 1.3.6.1.2.1.6.7</span><br><span class="line">tcpEstabResets 1.3.6.1.2.1.6.8</span><br><span class="line">tcpCurrEstab 1.3.6.1.2.1.6.9</span><br><span class="line">tcpInSegs 1.3.6.1.2.1.6.10</span><br><span class="line">tcpOutSegs 1.3.6.1.2.1.6.11</span><br><span class="line">tcpRetransSegs 1.3.6.1.2.1.6.12</span><br><span class="line">tcpConnTable 1.3.6.1.2.1.6.13</span><br><span class="line">tcpConnEntry 1.3.6.1.2.1.6.13.1</span><br><span class="line">tcpConnState 1.3.6.1.2.1.6.13.1.1</span><br><span class="line">tcpConnLocalAddress 1.3.6.1.2.1.6.13.1.2</span><br><span class="line">tcpConnLocalPort 1.3.6.1.2.1.6.13.1.3</span><br><span class="line">tcpConnRemAddress 1.3.6.1.2.1.6.13.1.4</span><br><span class="line">tcpConnRemPort 1.3.6.1.2.1.6.13.1.5</span><br><span class="line">tcpInErrs 1.3.6.1.2.1.6.14</span><br><span class="line">tcpOutRsts 1.3.6.1.2.1.6.15</span><br><span class="line"></span><br><span class="line">UDP Group</span><br><span class="line">udpInDatagrams 1.3.6.1.2.1.7.1</span><br><span class="line">udpNoPorts 1.3.6.1.2.1.7.2</span><br><span class="line">udpInErrors 1.3.6.1.2.1.7.3</span><br><span class="line">udpOutDatagrams 1.3.6.1.2.1.7.4</span><br><span class="line">udpTable 1.3.6.1.2.1.7.5</span><br><span class="line">udpEntry 1.3.6.1.2.1.7.5.1</span><br><span class="line">udpLocalAddress 1.3.6.1.2.1.7.5.1.1</span><br><span class="line">udpLocalPort 1.3.6.1.2.1.7.5.1.2</span><br><span class="line"></span><br><span class="line">SNMP Group</span><br><span class="line">snmpInPkts 1.3.6.1.2.1.11.1</span><br><span class="line">snmpOutPkts 1.3.6.1.2.1.11.2</span><br><span class="line">snmpInBadVersions 1.3.6.1.2.1.11.3</span><br><span class="line">snmpInBadCommunityNames 1.3.6.1.2.1.11.4</span><br><span class="line">snmpInBadCommunityUses 1.3.6.1.2.1.11.5</span><br><span class="line">snmpInASNParseErrs 1.3.6.1.2.1.11.6</span><br><span class="line">NOT USED 1.3.6.1.2.1.11.7</span><br><span class="line">snmpInTooBigs 1.3.6.1.2.1.11.8</span><br><span class="line">snmpInNoSuchNames 1.3.6.1.2.1.11.9</span><br><span class="line">snmpInBadValues 1.3.6.1.2.1.11.10</span><br><span class="line">snmpInReadOnlys 1.3.6.1.2.1.11.11</span><br><span class="line">snmpInGenErrs 1.3.6.1.2.1.11.12</span><br><span class="line">snmpInTotalReqVars 1.3.6.1.2.1.11.13</span><br><span class="line">snmpInTotalSetVars 1.3.6.1.2.1.11.14</span><br><span class="line">snmpInGetRequests 1.3.6.1.2.1.11.15</span><br><span class="line">snmpInGetNexts 1.3.6.1.2.1.11.16</span><br><span class="line">snmpInSetRequests 1.3.6.1.2.1.11.17</span><br><span class="line">snmpInGetResponses 1.3.6.1.2.1.11.18</span><br><span class="line">snmpInTraps 1.3.6.1.2.1.11.19</span><br><span class="line">snmpOutTooBigs 1.3.6.1.2.1.11.20</span><br><span class="line">snmpOutNoSuchNames 1.3.6.1.2.1.11.21</span><br><span class="line">snmpOutBadValues 1.3.6.1.2.1.11.22</span><br><span class="line">NOT USED 1.3.6.1.2.1.11.23</span><br><span class="line">snmpOutGenErrs 1.3.6.1.2.1.11.24</span><br><span class="line">snmpOutGetRequests 1.3.6.1.2.1.11.25</span><br><span class="line">snmpOutGetNexts 1.3.6.1.2.1.11.26</span><br><span class="line">snmpOutSetRequests 1.3.6.1.2.1.11.27</span><br><span class="line">snmpOutGetResponses 1.3.6.1.2.1.11.28</span><br><span class="line">snmpOutTraps 1.3.6.1.2.1.11.29</span><br><span class="line">snmpEnableAuthenTraps 1.3.6.1.2.1.11.30</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>network</tag>
      </tags>
  </entry>
  <entry>
    <title>ssh signing failed</title>
    <url>/2019/04/04/ssh-signing-failed/</url>
    <content><![CDATA[<h2 id="ssh-signing-faild"><a href="#ssh-signing-faild" class="headerlink" title="ssh signing faild"></a>ssh signing faild</h2><p>前言，自己电脑重装后，把原来的ssh key文件重新拷贝到了新的系统。尝试通过KEY登录远程主机，发现报错如下：</p>
<blockquote>
<p>ssh: sign_and_send_pubkey: signing failed: agent refused operation  </p>
</blockquote>
<h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><p>选查看文件属性。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chown yourname:yourname ~./ssh/*</span><br></pre></td></tr></table></figure>
<p>查看已添加的KEY</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh-add -l</span><br></pre></td></tr></table></figure>
<p>更改key读写权限</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chmod 600 ~./ssh/*</span><br></pre></td></tr></table></figure>
<p>好了。问题解决。</p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>ttf-mscorefonts-installer ubuntu</title>
    <url>/2019/04/01/ttf-mscorefonts-installer-ubuntu/</url>
    <content><![CDATA[<h2 id="ttf-mscorefonts-installer下载额外数据失败"><a href="#ttf-mscorefonts-installer下载额外数据失败" class="headerlink" title="ttf-mscorefonts-installer下载额外数据失败"></a>ttf-mscorefonts-installer下载额外数据失败</h2><p>完成ubuntu安装后，特别是安装wine之后，电脑经常跳出更新信息：</p>
<blockquote>
<p>下载额外数据文件失败<br>以下软件包要求安装后下载附加数据，但其数据无法下载或无法处理。<br>ttf-mscorefonts-installer<br>稍后系统将自动重试下载，您也可以手工立即重试。执行此命令需要有活动的网络连接。  </p>
</blockquote>
<p>点击重试后，实际后台自动既即出。输入密码后无响应了。实际上没有执行操作。虽不影响使用，不过挺经常跳出来挺麻烦。</p>
<h2 id="解决办法"><a href="#解决办法" class="headerlink" title="解决办法"></a>解决办法</h2><ul>
<li>下载文件</li>
</ul>
<p>查看目录/usr/share/package-data-downloads/目录下，有一个文件ttf-mscorefonts-installer，查看内容如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Url: http://downloads.sourceforge.net/corefonts/andale32.exe</span><br><span class="line">Sha256: 0524fe42951adc3a7eb870e32f0920313c71f170c859b5f770d82b4ee111e970</span><br><span class="line"></span><br><span class="line">Url: http://downloads.sourceforge.net/corefonts/arial32.exe</span><br><span class="line">Sha256: 85297a4d146e9c87ac6f74822734bdee5f4b2a722d7eaa584b7f2cbf76f478f6</span><br><span class="line"></span><br><span class="line">Url: http://downloads.sourceforge.net/corefonts/arialb32.exe</span><br><span class="line">Sha256: a425f0ffb6a1a5ede5b979ed6177f4f4f4fdef6ae7c302a7b7720ef332fec0a8</span><br><span class="line"></span><br><span class="line">Url: http://downloads.sourceforge.net/corefonts/comic32.exe</span><br><span class="line">Sha256: 9c6df3feefde26d4e41d4a4fe5db2a89f9123a772594d7f59afd062625cd204e</span><br><span class="line"></span><br><span class="line">Url: http://downloads.sourceforge.net/corefonts/courie32.exe</span><br><span class="line">Sha256: bb511d861655dde879ae552eb86b134d6fae67cb58502e6ff73ec5d9151f3384</span><br><span class="line"></span><br><span class="line">Url: http://downloads.sourceforge.net/corefonts/georgi32.exe</span><br><span class="line">Sha256: 2c2c7dcda6606ea5cf08918fb7cd3f3359e9e84338dc690013f20cd42e930301</span><br><span class="line"></span><br><span class="line">Url: http://downloads.sourceforge.net/corefonts/impact32.exe</span><br><span class="line">Sha256: 6061ef3b7401d9642f5dfdb5f2b376aa14663f6275e60a51207ad4facf2fccfb</span><br><span class="line"></span><br><span class="line">Url: http://downloads.sourceforge.net/corefonts/times32.exe</span><br><span class="line">Sha256: db56595ec6ef5d3de5c24994f001f03b2a13e37cee27bc25c58f6f43e8f807ab</span><br><span class="line"></span><br><span class="line">Url: http://downloads.sourceforge.net/corefonts/trebuc32.exe</span><br><span class="line">Sha256: 5a690d9bb8510be1b8b4fe49f1f2319651fe51bbe54775ddddd8ef0bd07fdac9</span><br><span class="line"></span><br><span class="line">Url: http://downloads.sourceforge.net/corefonts/verdan32.exe</span><br><span class="line">Sha256: c1cb61255e363166794e47664e2f21af8e3a26cb6346eb8d2ae2fa85dd5aad96</span><br><span class="line"></span><br><span class="line">Url: http://downloads.sourceforge.net/corefonts/webdin32.exe</span><br><span class="line">Sha256: 64595b5abc1080fba8610c5c34fab5863408e806aafe84653ca8575bed17d75a</span><br><span class="line"></span><br><span class="line">Script: /usr/lib/msttcorefonts/update-ms-fonts</span><br><span class="line">Should-Download: msttcorefonts/accepted-mscorefonts-eula</span><br></pre></td></tr></table></figure>
<p>可以看到11个文件的下载链接。直接下载字体文件，放在一个文件夹里。如/home/yourname/ttf-mscorefonts/目录下。</p>
<ul>
<li>手动更新</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo dpkg-reconfigure ttf-mscorefonts-installer</span><br></pre></td></tr></table></figure>
<p>指定下载字体的目录，确认安装配置。</p>
<ul>
<li>删除下载失败的通知信息</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> /usr/share/package-data-downloads/</span><br><span class="line">sudo rm ttf-mscorefonts-installer</span><br><span class="line"><span class="built_in">cd</span> /var/lib/update-notifier/package-data-downloads/</span><br><span class="line">sudo rm ttf-mscorefonts-installer</span><br><span class="line"><span class="built_in">cd</span> /var/lib/update-notifier/user.d/</span><br><span class="line">sudo rm data-downloads-failed</span><br></pre></td></tr></table></figure>
<p>至此更新结束。</p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu 18.04 使用小结</title>
    <url>/2019/03/24/ubuntu-18-04-%E4%BD%BF%E7%94%A8%E5%B0%8F%E7%BB%93/</url>
    <content><![CDATA[<h2 id="ubuntu-18-04安装配置小结"><a href="#ubuntu-18-04安装配置小结" class="headerlink" title="ubuntu 18.04安装配置小结"></a>ubuntu 18.04安装配置小结</h2><p>起因，从自己毕业以来，自己的电脑就一直在使用ubuntu。最早的长期使用就是从12.04LTS用起。基本到每一个LTS版本自己就升级一次版本。到18.04时，自己重装了系统，各种小折腾后，基本上就比较符合自己需求了。一些小瑕疵还是有的，比如有一些自己之前常用的软件，某些依赖不再被支持，无法安装或启动。在自己尝试无果后，还因为不知道安装了某些依赖，导致系统重启后，每次都会跳出系统错误，询问是否发送报告。虽然实际使用中是没什么问题，不过这个让人比较难受。</p>
<p>另外一个比较让人纠结的问题，去年的时候，自己买了一块手绘板，尝试安装linux wacom project后，经常性的在重启后，无法使用。这让我不得不在重新启动电脑后，再一次的尝试重新安装wacom project相关的依赖，或者不关／重启计算机。</p>
<p>鉴于对自己笔记本硬件已经不太满意，前一段时间，花了点钱，给自己的电脑加了一根固态。后面，就又一次重装了系统。</p>
<p>接下来梳理一下自已安装系统后的经过。记录一下常用的程序，及各个程序相关的插件。备用。</p>
<h2 id="系统安装"><a href="#系统安装" class="headerlink" title="系统安装"></a>系统安装</h2><p>由于自己的笔记本有一个NGFF 2242的插槽支持NVME协议，所以，直接买了一根NGFF的小固态。装上去后，直接开始安装全新系统。电脑上已经双硬盘SSD＋HDD布局，所以安装分区的时候，考虑到固态的容量和个人资料的安全性，分区思路如下：</p>
<p>固态硬盘：EFFI＋/分区</p>
<p>机械硬盘：/home分区</p>
<p>安装时，直接连网并更新系统，以及第三方插件。安装结束后，重新启动。接下来就是属于安装结束后要做的事情了。</p>
<h2 id="安装后做的事情"><a href="#安装后做的事情" class="headerlink" title="安装后做的事情"></a>安装后做的事情</h2><h3 id="切换源"><a href="#切换源" class="headerlink" title="切换源"></a>切换源</h3><p>在安装后，第一件事，更换源。打开应用程序“软件和更新”–&gt;ubuntu软件–&gt;选择下拉列表中的其它站点(默认为中国的服务器)–&gt;点击选择最佳服务器。程序会做一系列连通性测试，并给出一个最快的系统源，在我自己的使用中，一般都是CN99的源(所说是网易的源)。应用后，系统会重新加载软件更新缓存，再安装程序或更新的时候，就从最近的源中提供更新了。</p>
<h3 id="输入法"><a href="#输入法" class="headerlink" title="输入法"></a>输入法</h3><p>ubuntu 18.04默认的输入法，又从之前的fictx换回了ibus。安装时，选择了中文语言后，ibus默认会安装拼音输入法。而很巧的是，我自己是五笔的使用者，因为在手机上五笔打字这个绝对是很糟糕的体验，自己又学习了双拼。所以，自己电脑上是五毛，手机上是双拼，使用的是微软双拼的方案。</p>
<p>所以在ubuntu上，同时使用了双拼和五笔的输入法。</p>
<h4 id="双拼"><a href="#双拼" class="headerlink" title="双拼"></a>双拼</h4><p>双拼输入法的设置，直接在面板上点击输入法图标–&gt;首选项–&gt;拼间模式–&gt;选择双拼(微软双拼)–&gt;关闭标签面即可。</p>
<h4 id="五笔"><a href="#五笔" class="headerlink" title="五笔"></a>五笔</h4><p>五笔输入法，我们需要安装五笔输入法框架。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install ibus-table-wubi</span><br></pre></td></tr></table></figure>
<p>安装结束后，终端运行命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ibus-setup</span><br></pre></td></tr></table></figure>
<p>输入法设置中选择输入法标签页–&gt;添加–&gt;汉语–&gt;汉语(海峰五笔86)–&gt;关闭标签页</p>
<p>另外一个比较好玩的是，ubuntu已经支持输入法已经支持emoje了。在系统自带的gedit中，输入时，右击–&gt;插入绘文字–&gt;选择emoje即可。除了自带的gedit，其余的应用暂未测试，至少自己写文档的vs code中右击是没有的。</p>
<h3 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h3><h4 id="firefox"><a href="#firefox" class="headerlink" title="firefox"></a>firefox</h4><p>firefox浏览器作为系统自带的默认浏览器，自然是非常优秀，但自己通常来说在安装结束后，基本就将firefox作为备用了。因为一些众所周知的原因。firefox我是不会放弃的。firefox上也有一些自己经常用到的插件记录如下：</p>
<ol>
<li>Gnome-shell(18.04必备了)</li>
<li>Firefox-Lightbeam</li>
<li>Tab2QR</li>
</ol>
<p>Gonme-shell通过命令安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install gnome-shell-extensions</span><br></pre></td></tr></table></figure>
<p>后三个通过附件管理器中搜索安装。</p>
<p>Gnome-shell-extensions为了使ubuntu桌面更符合自己的使用需求，会配合gnome-tweak-tool一起使用。</p>
<p>Gnome-shell-etensions控件，使用列表如下：</p>
<ol>
<li>Dash to Panel(Dash、Pancel合并和设置)</li>
<li>Hide Top Bar </li>
<li>Open Weather</li>
<li>Removable Drive Menu</li>
<li>Sound Input &amp; Ootput Device Chooser </li>
</ol>
<p>Firefox控件可以在登录后同步。</p>
<h4 id="Chrome"><a href="#Chrome" class="headerlink" title="Chrome"></a>Chrome</h4><p>对于Chrome，可以直接使用apt安装源里的Chromium，Chrome也中基于开源的Chromium而来。两者在使用的时候，很少能感知到差别，同样也是使得google的账号同步。之前一直通过源里安装Chromium安装，在后面有一次打开google earth时，提示，使用的非chrome浏览器，后面我就直接安装chrome浏览器了。</p>
<p>chrome使用的插件：</p>
<ol>
<li>GSConnect</li>
<li>Momentum</li>
<li>PanicButton</li>
<li>Google翻译</li>
<li>Neater Bookmarks</li>
<li>Secure Shell Extension</li>
<li>Unsplash Instant</li>
<li>Full Page Screen Capture</li>
</ol>
<p>同样的，只要你能登录，那你的设置和习惯就跑不了。同步后，就都有了。</p>
<h3 id="文档码字或者代码"><a href="#文档码字或者代码" class="headerlink" title="文档码字或者代码"></a>文档码字或者代码</h3><h4 id="vim"><a href="#vim" class="headerlink" title="vim"></a>vim</h4><p>在之前的vim中，我会折腾代码补全、目录浏览等，参考各路大神的配置，尝试打造成一个自己用得顺手的IDE。在有了space vim之后，我已经什么都不想动了。</p>
<p>一条命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">curl -sLf https://spacevim.org/cn/install.sh | bash</span><br></pre></td></tr></table></figure>
<p>回车后，打开vim，相关的插件会自动的安装上去。</p>
<p>好了，剩下的只有享受了。</p>
<h4 id="VS-CODE"><a href="#VS-CODE" class="headerlink" title="VS CODE"></a>VS CODE</h4><p>微软家开源的，质量没得说。结果自己主要的用途居然是markdown。先说安装，再说插件。</p>
<p>下载地址，<a href="https://code.visualstudio.com/">请戳</a>。</p>
<p>插件如下：</p>
<ul>
<li>Chinese(simplified)LanguadePack for Visual Studio Code</li>
<li>Gitlens</li>
<li>LeetCode</li>
<li>Markdown All in One</li>
<li>Markdown+Math</li>
<li>Mysql</li>
<li>Mysql Syntax</li>
<li>One Dark Pro</li>
<li>PowerShell</li>
<li>Python</li>
<li>Vim</li>
<li>Vscode-icons</li>
<li>C/C++</li>
</ul>
<h4 id="Gitkraken"><a href="#Gitkraken" class="headerlink" title="Gitkraken"></a>Gitkraken</h4><p>下载<a href="https://www.gitkraken.com/">请戳</a></p>
<h3 id="远程管理，调试"><a href="#远程管理，调试" class="headerlink" title="远程管理，调试"></a>远程管理，调试</h3><p>在linux上似乎很难找到一个和xshell相当的顺手的设备调试和管理工具，虽然说，有命令行通过配置文件一样非常高效，但是，GUI也自有其优势。在自己使用的工具中，关于串口调试：</p>
<ul>
<li>minicom</li>
<li>picocom</li>
</ul>
<p>远程管理工具：</p>
<ul>
<li>termius</li>
</ul>
<p>全平台(windows, mac os, linux, android)，可以购买许可，多端同步。当然，也可以不买许可。单机用。</p>
<p>安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo snap install termius-app</span><br></pre></td></tr></table></figure>
<ul>
<li>anydesk   方便访问本机</li>
</ul>
<h3 id="多媒体"><a href="#多媒体" class="headerlink" title="多媒体"></a>多媒体</h3><h4 id="播放器"><a href="#播放器" class="headerlink" title="播放器"></a>播放器</h4><ul>
<li>vlc</li>
<li>kodi</li>
<li>网易去音乐(必装了)</li>
<li>Cpod      网络收音机</li>
</ul>
<h4 id="画图、图片"><a href="#画图、图片" class="headerlink" title="画图、图片"></a>画图、图片</h4><ul>
<li>GIMP</li>
<li>Krita</li>
<li>Mypaint</li>
<li>Peek  gif录屏</li>
<li>OBS   录屏、串流</li>
<li>OpenTooz     简单的动画制作</li>
<li>Openshot     视频剪辑</li>
</ul>
<h3 id="虚拟机和模拟器"><a href="#虚拟机和模拟器" class="headerlink" title="虚拟机和模拟器"></a>虚拟机和模拟器</h3><ul>
<li>virtualbox</li>
<li>playonlinux</li>
</ul>
<h3 id="游戏"><a href="#游戏" class="headerlink" title="游戏"></a>游戏</h3><ul>
<li>steam</li>
<li>gog</li>
</ul>
<h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><ul>
<li>uget </li>
<li>transmission</li>
<li>filezilla</li>
</ul>
<h3 id="词典"><a href="#词典" class="headerlink" title="词典"></a>词典</h3><ul>
<li>goldendict    本地</li>
<li>有道词典</li>
</ul>
<h3 id="聊天"><a href="#聊天" class="headerlink" title="聊天"></a>聊天</h3><ul>
<li>skype</li>
<li>gitter</li>
</ul>
<h3 id="系统"><a href="#系统" class="headerlink" title="系统"></a>系统</h3><ul>
<li><p>stacer    优化工具，下载<a href="https://github.com/oguzhaninan/Stacer">请戳</a></p>
</li>
<li><p>avast     杀毒(给个心理安慰，基本不用系列)</p>
</li>
<li><p>etcher    U盘镜像写入工具，下载<a href="https://www.balena.io/etcher/">请戳</a></p>
<h3 id="字体"><a href="#字体" class="headerlink" title="字体"></a>字体</h3></li>
</ul>
<h4 id="文泉驿"><a href="#文泉驿" class="headerlink" title="文泉驿"></a>文泉驿</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install font-wqy-microhei   //文泉驿米黑</span><br><span class="line">sudo apt install font-wqy-zhenhei    //文泉驿正黑</span><br></pre></td></tr></table></figure>
<h4 id="ubuntu-font-family"><a href="#ubuntu-font-family" class="headerlink" title="ubuntu-font-family"></a>ubuntu-font-family</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install ttf-ubuntu-font-family </span><br></pre></td></tr></table></figure>
<h4 id="google-Noto"><a href="#google-Noto" class="headerlink" title="google Noto"></a>google Noto</h4><p>下载地址<a href="https://fonts.google.com/">请戳</a>，如果可以访问得到的话。</p>
<h4 id="dejavu"><a href="#dejavu" class="headerlink" title="dejavu"></a>dejavu</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install ttf-dejavu ttf-dejavu-core ttf-dejavu-extra</span><br></pre></td></tr></table></figure>
<h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><p>在完成这次的重装后，因为上了固态这个大保健，电脑似乎又能再战三年。全新安装后的系统也没有报错，之前因为自己折腾而导致各种不明依赖造成的手绘板不可用也正常使用了。算是已经接近自己完美使用的需要了。</p>
<p>自然，也还有一些问题，在我自己搭建的过程中，也给解决掉了。其中有一个因为系统更新后，键盘鼠标不可用的。也在自己搜索后得到解决的办法，会单独写一篇记录，实在是值得记住，差点想要放弃重新再安装。</p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu 18.04 安装 lanproxy</title>
    <url>/2019/04/11/ubuntu-18-04-%E5%AE%89%E8%A3%85-lanproxy/</url>
    <content><![CDATA[<h2 id="Ubuntu-18-04-安装-lanproxy"><a href="#Ubuntu-18-04-安装-lanproxy" class="headerlink" title="Ubuntu 18.04 安装 lanproxy"></a>Ubuntu 18.04 安装 lanproxy</h2><p>lanproxy git-hub地址<a href="https://github.com/ffay/lanproxy">请戳</a></p>
<h2 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h2><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><p>lanproxy依赖于java。服务端安装java通过包管理工具实现如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install default-jdk</span><br><span class="line"></span><br><span class="line">java --version</span><br><span class="line">openjdk 10.0.2 2018-07-17</span><br><span class="line">OpenJDK Runtime Environment (build 10.0.2+13-Ubuntu-1ubuntu0.18.04.4)</span><br><span class="line">OpenJDK 64-Bit Server VM (build 10.0.2+13-Ubuntu-1ubuntu0.18.04.4, mixed mode)</span><br></pre></td></tr></table></figure>
<h3 id="下载服务端"><a href="#下载服务端" class="headerlink" title="下载服务端"></a>下载服务端</h3><p>本文直接是先下载到自己电脑，然后上传至服务器，方式随意。下载地址<a href="https://github.com/ffay/lanproxy/releases">请戳</a></p>
<p>上传通过sftp</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sftp -i identify_file -P port user@host</span><br><span class="line">....</span><br><span class="line">&gt; put local_file remote_host_directory  <span class="comment">#上传至远程目录</span></span><br><span class="line">....</span><br><span class="line">退出sftp程序</span><br></pre></td></tr></table></figure>
<h3 id="服务端配置"><a href="#服务端配置" class="headerlink" title="服务端配置"></a>服务端配置</h3><p>登录远程主机，将程序包解压，把程序文件移动到你想要放置的路径如/usr/bin/</p>
<blockquote>
<p>/usr/bin/proxy-server  </p>
</blockquote>
<p>大概以上路径。</p>
<p>配置文件在程序的config目录下，名字为：config.properties</p>
<p>内容如下：</p>
<blockquote>
<p>server.bind=0.0.0.0<br>server.port=4900</p>
<p>server.ssl.enable=true<br>server.ssl.bind=0.0.0.0<br>server.ssl.port=4993<br>server.ssl.jksPath=test.jks<br>server.ssl.keyStorePassword=123456<br>server.ssl.keyManagerPassword=123456<br>server.ssl.needsClientAuth=false  </p>
<p>config.server.bind=0.0.0.0<br>config.server.port=8090<br>config.admin.username=admin<br>config.admin.password=admin  </p>
</blockquote>
<p>按需要更改。</p>
<h3 id="防火墙放通端口"><a href="#防火墙放通端口" class="headerlink" title="防火墙放通端口"></a>防火墙放通端口</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ufw allow 8090/tcp </span><br><span class="line">sudo ufw reload</span><br></pre></td></tr></table></figure>
<h3 id="服务器测试"><a href="#服务器测试" class="headerlink" title="服务器测试"></a>服务器测试</h3><p>运行服务端，启动程序脚本在程序目录bin文件夹下。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ./startup.sh</span><br></pre></td></tr></table></figure>
<p>打开IP:8090。程序运行。</p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu 18.04 安装 nginx</title>
    <url>/2019/04/12/ubuntu-18-04-%E5%AE%89%E8%A3%85-nginx/</url>
    <content><![CDATA[<h2 id="ubuntu-18-04-安装-nginx"><a href="#ubuntu-18-04-安装-nginx" class="headerlink" title="ubuntu 18.04 安装 nginx"></a>ubuntu 18.04 安装 nginx</h2><blockquote>
<p>前言<br>服务器上安装了两个服务。通过外网加端口访问。需求通过nginx代理访问两个服务。</p>
</blockquote>
<h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>ubuntu 18.04,非root，常规用户账户。</p>
<h2 id="Step1-Installing-Nginx"><a href="#Step1-Installing-Nginx" class="headerlink" title="Step1-Installing Nginx"></a>Step1-Installing Nginx</h2><p>Ubuntu 18.04默认软件库中包含Nginx包。所以可以直接通过apt包管理工具进行安装。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt install nginx</span><br></pre></td></tr></table></figure>
<h2 id="Step2-Adjusting-the-Firewall"><a href="#Step2-Adjusting-the-Firewall" class="headerlink" title="Step2-Adjusting the Firewall"></a>Step2-Adjusting the Firewall</h2><p>在进行Nginx测试之前，需求调整防火墙设置放通Nginx服务。</p>
<p>相看ufw应用列表。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ufw app list</span><br></pre></td></tr></table></figure>
<p>输出内容:</p>
<blockquote>
<p>Available applications:<br>Nginx Full<br>Nginx HTTP<br>Nginx HTTPS</p>
</blockquote>
<p>如所见，Nginx Full即放通80和443，Nginx HTTP即放通80，Nginx HTTPS即放通443。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ufw allow <span class="string">&#x27;Nginx FULL&#x27;</span></span><br></pre></td></tr></table></figure>
<h2 id="Step3-Checking-your-Web-Server"><a href="#Step3-Checking-your-Web-Server" class="headerlink" title="Step3-Checking your Web Server"></a>Step3-Checking your Web Server</h2><p>安装结束，程序服务就会启用。通过systemctl查看Nginx相关的进程信息。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl status nginx </span><br><span class="line"></span><br><span class="line">● nginx.service - A high performance web server and a reverse proxy server</span><br><span class="line">   Loaded: loaded (/lib/systemd/system/nginx.service; enabled; vendor preset: enabled)</span><br><span class="line">   Active: active (running) since Sat 2019-04-13 09:41:04 UTC; 10s ago</span><br><span class="line">     Docs: man:nginx(8)</span><br><span class="line">  Process: 4576 ExecStop=/sbin/start-stop-daemon --quiet --stop --retry QUIT/5 --pidfile /run/nginx.pid (code=exited, status=2)</span><br><span class="line">  Process: 4586 ExecStart=/usr/sbin/nginx -g daemon on; master_process on; (code=exited, status=0/SUCCESS)</span><br><span class="line">  Process: 4577 ExecStartPre=/usr/sbin/nginx -t -q -g daemon on; master_process on; (code=exited, status=0/SUCCESS)</span><br><span class="line"> Main PID: 4589 (nginx)</span><br><span class="line">    Tasks: 2 (<span class="built_in">limit</span>: 1110)</span><br><span class="line">   CGroup: /system.slice/nginx.service</span><br><span class="line">           ├─4589 nginx: master process /usr/sbin/nginx -g daemon on; master_process on;</span><br><span class="line">           └─4593 nginx: worker process</span><br><span class="line"></span><br><span class="line">Apr 13 09:41:04 vultr_vps_server systemd[1]: Starting A high performance web server and a reverse proxy server...</span><br></pre></td></tr></table></figure>
<p>安装程序结束。</p>
<p>一个小问题：启动后的nginx有一个状态问题：</p>
<blockquote>
<p>nginx.service: Failed to parse PID from file /run/nginx.pid: Invalid argument</p>
</blockquote>
<p>解决方法：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Workaround:</span><br><span class="line"></span><br><span class="line"> mkdir /etc/systemd/system/nginx.service.d</span><br><span class="line"> <span class="built_in">printf</span> <span class="string">&quot;[Service]\nExecStartPost=/bin/sleep 0.1\n&quot;</span> &gt; /etc/systemd/system/nginx.service.d/override.conf</span><br><span class="line"> systemctl daemon-reload</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu 18.04 安装wireshark</title>
    <url>/2019/04/11/ubuntu-18-04-%E5%AE%89%E8%A3%85wireshark/</url>
    <content><![CDATA[<h2 id="Ubuntu-18-04-安装-wireshark"><a href="#Ubuntu-18-04-安装-wireshark" class="headerlink" title="Ubuntu 18.04 安装 wireshark"></a>Ubuntu 18.04 安装 wireshark</h2><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install wireshark wireshark-common</span><br></pre></td></tr></table></figure>
<h2 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h2><p>非root用户下的wireshark没有抓包权限</p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><ol>
<li>以root用户运行</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo wireshark</span><br></pre></td></tr></table></figure>
<ol start="2">
<li>配置非root用户抓包</li>
</ol>
<p>安装完成后，wireshark文档中有相应的处理方法。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo gzip -d /usr/share/doc/wireshark-common/README.Debian.gz</span><br></pre></td></tr></table></figure>
<p>解压文档后，可以参考操作方法如下：</p>
<blockquote>
<p>sudo usermod -a -G wireshark {username}</p>
</blockquote>
<p>或者</p>
<blockquote>
<p>sudo gpasswd -a your_name wireshark  </p>
</blockquote>
<p>重新配置抓取权限</p>
<blockquote>
<p>sudo dpkg-reconfigure wireshark-common<br>“Should non-superusers be able to capture packages?”<br>选择yes(默认是no)</p>
</blockquote>
<p>注销用户或重启，再次打开wireshark，正常选取网卡列表。</p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu 18.04 开启TCP BBR拥塞控制</title>
    <url>/2019/03/15/ubuntu-18-04-%E5%BC%80%E5%90%AFTCP-BBR%E6%8B%A5%E5%A1%9E%E6%8E%A7%E5%88%B6/</url>
    <content><![CDATA[<h2 id="启用TCP-BBR拥塞算法"><a href="#启用TCP-BBR拥塞算法" class="headerlink" title="启用TCP BBR拥塞算法"></a>启用TCP BBR拥塞算法</h2><p>TCP BBR是一个改良版的tcp拥塞控制算法，其目的在于最大化利用网络链路。TCP BBR要解决的问题：</p>
<ul>
<li>充分利用存在一定丢包率直的网络qlkh；</li>
<li>降低网络</li>
</ul>
<h2 id="查看系统内核"><a href="#查看系统内核" class="headerlink" title="查看系统内核"></a>查看系统内核</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">uname -r</span><br></pre></td></tr></table></figure>
<p>输出结果：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">4.15.0-46-generic</span><br></pre></td></tr></table></figure>
<h2 id="修改系统变量"><a href="#修改系统变量" class="headerlink" title="修改系统变量"></a>修改系统变量</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&quot;net.core.default_qdisc=fq&quot;</span> &gt;&gt; /etc/sysctl.conf</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;net.ipv4.tcp_congestion_control=bbr&quot;</span> &gt;&gt; /etc/sysctl.conf</span><br></pre></td></tr></table></figure>
<h2 id="保存生效，配置内核"><a href="#保存生效，配置内核" class="headerlink" title="保存生效，配置内核"></a>保存生效，配置内核</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sysctl -p</span><br></pre></td></tr></table></figure>
<p>输出结果：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">net.ipv4.neigh.default.base_reachable_time_ms = 600000</span><br><span class="line">net.ipv4.neigh.default.macast_solicit = 20</span><br><span class="line">net.ipv4.neigh.default.retrans_time_ms = 250</span><br><span class="line">net.core.default_qdisc = fq</span><br><span class="line">net.ipv4.tcp_congestion_control = bbr</span><br></pre></td></tr></table></figure>
<h2 id="查看内核是否开启BBR"><a href="#查看内核是否开启BBR" class="headerlink" title="查看内核是否开启BBR"></a>查看内核是否开启BBR</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sysctl net.ipv4.tcp_available_congestion_control</span><br></pre></td></tr></table></figure>
<p>输出：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">net.ipv4.tcp_available_congestion_control = reno cubic bbr</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sysctl net.ipv4.tcp_congestion_control</span><br></pre></td></tr></table></figure>
<p>输出：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">net.ipv4.tcp_congestion_control = bbr</span><br></pre></td></tr></table></figure>
<h2 id="验证BBR是否已经启动"><a href="#验证BBR是否已经启动" class="headerlink" title="验证BBR是否已经启动"></a>验证BBR是否已经启动</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsmod | grep bbr</span><br></pre></td></tr></table></figure>
<p>输出：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tcp_bbr         20480 2</span><br></pre></td></tr></table></figure>
<p>BBR已启用，BBR协议在linux4.9内核开始集成。</p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu 18.04安装phpvirtualbox</title>
    <url>/2018/10/13/ubuntu-18-04%E5%AE%89%E8%A3%85phpvirtualbox/</url>
    <content><![CDATA[<h2 id="安装phpvirtualbox"><a href="#安装phpvirtualbox" class="headerlink" title="安装phpvirtualbox"></a>安装phpvirtualbox</h2><p>virtualbox安装完成后，可以通过给virtualbox后台装一个基于web的前端工具，使其可以通过网页来管理和创建虚拟机。</p>
<h2 id="前提条件"><a href="#前提条件" class="headerlink" title="前提条件"></a>前提条件</h2><p>首先，更新系统，并安装相关信赖包</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update</span><br><span class="line">sudo apt upgrade</span><br><span class="line">sudo apt install build-essential dkms unzip wget vim</span><br></pre></td></tr></table></figure>
<p>安装完成后，需要重启ubuntu系统。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo reboot</span><br></pre></td></tr></table></figure>
<h2 id="在ubuntu-18-04上安装virtualbox"><a href="#在ubuntu-18-04上安装virtualbox" class="headerlink" title="在ubuntu 18.04上安装virtualbox"></a>在ubuntu 18.04上安装virtualbox</h2><p>从官网上下载<a href="https://www.virtualbox.org/">安装包</a>和<a href="https://www.virtualbox.org/wiki/Downloads">拓展包</a>。先安装virtualbox程序，再导入拓展包。</p>
<p>添加用户到virtualbox组</p>
<p>我们需要去创建并添加我们系统的用户vboxusers组中。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo usermod -aG vboxusers yourname</span><br></pre></td></tr></table></figure>
<p>确定virtualbox内核模块是否已加载。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl status vboxdrv</span><br></pre></td></tr></table></figure>
<p>参考图片</p>
<p><img src="https://blog.ywmy.xyz/vboxstatus.png" alt="状态"></p>
<h2 id="安装phpvirtualbox过程"><a href="#安装phpvirtualbox过程" class="headerlink" title="安装phpvirtualbox过程"></a>安装phpvirtualbox过程</h2><p>由于它是基于web的工具，我们需要安装apache服务器、php和一些php模块，运行命令。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install apache2 php php-mysql libapache2-mod-php php-soap php-xml</span><br></pre></td></tr></table></figure>
<p>然后下载virtualbox相对应的版本，如安装的virtualbox 5.2，官方<a href="https://phpvirtualbox.github.io/">主页</a>。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget httpss://github.com/phpvirtualbox/phpvirtualbox/archive/5.2.zip</span><br></pre></td></tr></table></figure>
<p>解压下载的安装包。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">unzip 5.2.0.zip</span><br></pre></td></tr></table></figure>
<p>解压后将解压的文件夹复制到apache web服务器的要文件夹中。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo cp -r phpvirtualbox-5.2.0/ /var/www/html/phpvirtualbox</span><br></pre></td></tr></table></figure>
<p>接下来配置phpvirtualbox。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo cp /var/www/html/phpvirtualbox/config.php-example /var/www/html/phpvirtualbox/config.php</span><br><span class="line">sudo vim /var/www/html/phpvirtualbox/config.php</span><br></pre></td></tr></table></figure>
<p>更改内容如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">var <span class="variable">$username</span> = <span class="string">&#x27;yourname&#x27;</span>;</span><br><span class="line">var <span class="variable">$password</span> = <span class="string">&#x27;password&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p>保存文件。</p>
<p>创建文件如下内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vim /etc/default/virutalbox</span><br></pre></td></tr></table></figure>
<p>添加内容：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">VBOXWEB_USER=yourname</span><br></pre></td></tr></table></figure>
<p>最后，重新启动服务：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl restart vboxweb-service</span><br><span class="line">sudo systemctl restart vboxdrv</span><br><span class="line">sudo systemctl restart apache2</span><br></pre></td></tr></table></figure>
<h2 id="调整防火墙允许apache-web服务器连接"><a href="#调整防火墙允许apache-web服务器连接" class="headerlink" title="调整防火墙允许apache web服务器连接"></a>调整防火墙允许apache web服务器连接</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo ufw all list</span><br><span class="line">sudo ufw app info <span class="string">&quot;Apache Full&quot;</span></span><br><span class="line">sudo ufw reload</span><br></pre></td></tr></table></figure>
<p>如下图所示：</p>
<p><img src="https://blog.ywmy.xyz/ywmy/linuxvboxstatus.png" alt="状态"></p>
<h2 id="访问phpvirtualbox的web控制台"><a href="#访问phpvirtualbox的web控制台" class="headerlink" title="访问phpvirtualbox的web控制台"></a>访问phpvirtualbox的web控制台</h2><p>现在，可以使用任意一台系统过程访问phpvirtualbox来操作virtualbox了。参考图：</p>
<p><img src="https://blog.ywmy.xyz/phpvirtualbox.png" alt="参考图">。</p>
]]></content>
      <tags>
        <tag>linux vritualbox</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu 18.04有道词典安装</title>
    <url>/2018/11/25/ubuntu-18-04%E6%9C%89%E9%81%93%E8%AF%8D%E5%85%B8%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h2 id="安装有道词典"><a href="#安装有道词典" class="headerlink" title="安装有道词典"></a>安装有道词典</h2><p>前言</p>
<p>在ubuntu下，本地词典，有goldendict。可以使用本地词典，屏幕取词，引用网络词典等功能也是应有尽有，但因使用习惯问题，还是比较喜欢使用windows下的词典软件，比如有道词典。良心的是，有道词典和deepin合作开发了linux版本，在ubuntu 16.04上也是正常使用。也是linux用户的福音。ubuntu本身版本已经到18.04了，而linux版本的词典更新日期仍然是2015年的1.1.0版本。想要使用的话，关于QT相关的各种信赖就是问题。完成安装后，曾经尝试根据报错也手动解决，结果能力有限，无可奈何。转而寻找其它大神是否有编译可用的版本，还真的找到了。有的方案是自己写个程序来调用有道词典的API，返回给程序对应的参数。此方案，尝试后，还是有些问题，依然是依赖关系。最终找到一个根据官方包重新编译的，按照其方法操作，安装和运行正常，记录备查。</p>
<h2 id="下载编译过的安装包"><a href="#下载编译过的安装包" class="headerlink" title="下载编译过的安装包"></a>下载编译过的安装包</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://github.com/yomun/youdaodict_5.5/raw/master/youdao-dict_1.1.1-0~ubuntu_amd64.deb</span><br></pre></td></tr></table></figure>
<p>编译的安装包需要3D加速</p>
<h2 id="查询并卸载QT5"><a href="#查询并卸载QT5" class="headerlink" title="查询并卸载QT5"></a>查询并卸载QT5</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">如有显示 PyQt5 (5.10.1), 卸载之..</span><br><span class="line">pip3 list | grep PyQt5</span><br><span class="line">pip3 uninstall pyqt5</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root 用户也一样要</span><br><span class="line">sudo sudo pip3 list | grep PyQt5</span><br><span class="line">sudo sudo pip3 uninstall pyqt5</span><br></pre></td></tr></table></figure>
<h2 id="安装依赖包"><a href="#安装依赖包" class="headerlink" title="安装依赖包"></a>安装依赖包</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install python3</span><br><span class="line"></span><br><span class="line">sudo apt install python3-dbus python3-lxml python3-pil python3-requests python3-xdg python3-xlib</span><br><span class="line">sudo apt install python3-pyqt5 python3-pyqt5.qtmultimedia python3-pyqt5.qtquick python3-pyqt5.qtwebkit</span><br><span class="line"></span><br><span class="line">sudo apt install gir1.2-appindicator3-0.1 qml-module-qtgraphicaleffects qml-module-qtquick-controls</span><br><span class="line">sudo apt install libqt5multimedia5-plugins ttf-wqy-microhei</span><br><span class="line">sudo apt install tesseract-ocr tesseract-ocr-eng tesseract-ocr-chi-sim tesseract-ocr-chi-tra</span><br><span class="line"></span><br><span class="line">sudo apt install ubuntu-restricted-extras</span><br><span class="line"></span><br><span class="line">Ubuntu 18.04 用 fonts-wqy-microhei 取代了 ttf-wqy-microhei</span><br></pre></td></tr></table></figure>
<p>＃ 安装有道词典</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo dpkg -i youdao-dict_1.1.1-0?ubuntu_amd64.deb</span><br></pre></td></tr></table></figure>
<p>安装之后，完美运行。参考<a href="https://github.com/yomun/youdaodict_5.5">链接</a>，谢大神。</p>
]]></content>
      <tags>
        <tag>linux dict</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu change default torrent program</title>
    <url>/2019/04/22/ubuntu-change-default-torrent-program/</url>
    <content><![CDATA[<h2 id="更改默认磁力链下载工具"><a href="#更改默认磁力链下载工具" class="headerlink" title="更改默认磁力链下载工具"></a>更改默认磁力链下载工具</h2><p>ubuntu 默认的连接力下载工具为Transmission。后面自己又下载了Deluge，安装后即更改了默认的磁力链下载为Deluge。后面发现，默认的Transmission工具对Tracker服务器的编辑比较方便，准备将默认的下载工具改回Transmission。</p>
<p>操作如下：</p>
<h3 id="查看默认注册的磁力链下载工具"><a href="#查看默认注册的磁力链下载工具" class="headerlink" title="查看默认注册的磁力链下载工具"></a>查看默认注册的磁力链下载工具</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gio mime x-scheme-handler/magnet</span><br></pre></td></tr></table></figure>
<p>输出如下：</p>
<blockquote>
<p>Default application for “x-scheme-handler/magnet”: transmission-gtk.desktop<br>已注册的应用程序：<br>transmission-gtk.desktop<br>deluge.desktop<br>webtorrent-desktop.desktop<br>推荐的应用程序：<br>transmission-gtk.desktop<br>deluge.desktop<br>webtorrent-desktop.desktop  </p>
</blockquote>
<p>如上图，默认的已经更改为Transmission-gtk.desktop。</p>
<h3 id="更改默认的磁力链下载工具"><a href="#更改默认的磁力链下载工具" class="headerlink" title="更改默认的磁力链下载工具"></a>更改默认的磁力链下载工具</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gio mime x-scheme-handler/magnet transmission-gtk.desktop</span><br></pre></td></tr></table></figure>
<p>如果是更改为Deluge，则更改如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">gio mime x-scheme-handler/magnet deluge.desktop</span><br></pre></td></tr></table></figure>
<p>同理，以上系统注册了三个应用程序，更改为其它的也是一样操作，后面的启动程序文件更改一下就可以了。</p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu 不支持i386</title>
    <url>/2019/03/10/ubuntu-%E4%B8%8D%E6%94%AF%E6%8C%81i386/</url>
    <content><![CDATA[<h2 id="ubuntu更新跳过i386体系结构"><a href="#ubuntu更新跳过i386体系结构" class="headerlink" title="ubuntu更新跳过i386体系结构"></a>ubuntu更新跳过i386体系结构</h2><p>前一次，在电脑上安装了google_earth_pro。安装结束后，系统更新就会多出一条更新信息：</p>
<blockquote>
<p>N: 鉴于仓库 ‘<a href="http://dl.google.com/linux/earth/deb">http://dl.google.com/linux/earth/deb</a> stable InRelease’ 不支持 ‘i386’ 体系结构，跳过配置文件 ‘main/binary-i386/Packages’ 的获取。</p>
</blockquote>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><ul>
<li>打开/etc/apt/sources.list.d/google-earth-pro.list</li>
</ul>
<p>－ 修改文件</p>
<p>原文件内容：</p>
<p>deb <a href="http://dl.google.com/linux/earth/deb/">http://dl.google.com/linux/earth/deb/</a> stable main</p>
<p>更改为：</p>
<p>deb [arch=amd64] <a href="http://dl.google.com/linux/earth/deb/">http://dl.google.com/linux/earth/deb/</a> stable main</p>
<p>好了，更新正常。</p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu 串口调试</title>
    <url>/2019/02/22/ubuntu-%E4%B8%B2%E5%8F%A3%E8%B0%83%E8%AF%95/</url>
    <content><![CDATA[<h2 id="ubuntu-18-04串口调试工具"><a href="#ubuntu-18-04串口调试工具" class="headerlink" title="ubuntu 18.04串口调试工具"></a>ubuntu 18.04串口调试工具</h2><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><p>系统：ubuntu 18.04</p>
<p>工具：USB转串口</p>
<p>设备：H3C FIREWARE</p>
<h2 id="使用命令"><a href="#使用命令" class="headerlink" title="使用命令"></a>使用命令</h2><p>命令行工具：picocom、minicom</p>
<h3 id="查看系统是否加载usb-serial模块"><a href="#查看系统是否加载usb-serial模块" class="headerlink" title="查看系统是否加载usb_serial模块"></a>查看系统是否加载usb_serial模块</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">lsmod | grep usbserial</span><br></pre></td></tr></table></figure>
<p>输出结果：</p>
<blockquote>
<p>usbserial              45056  3 ftdi_sio</p>
</blockquote>
<p>查看系统是否启用USB_serial</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dmesg | grep usbserial</span><br></pre></td></tr></table></figure>
<p>输出结果：</p>
<blockquote>
<p>[ 2909.513568] usbcore: registered new interface driver usbserial_generic</p>
<p>[ 2909.513581] usbserial: USB Serial support registered for generic</p>
<p>[ 2909.532690] usbserial: USB Serial support registered for FTDI USB Serial Device</p>
</blockquote>
<p>查看设备挂载</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ls -l /dev/ttyUSB*</span><br></pre></td></tr></table></figure>
<p>输出结果：</p>
<blockquote>
<p>crw-rw—- 1 root dialout 188, 0 2月  22 16:18 /dev/ttyUSB0</p>
</blockquote>
<p>系统已经挂载了ttyUSB0设备，即为串口转USB口连接线。</p>
<h3 id="使用minicom调试设备"><a href="#使用minicom调试设备" class="headerlink" title="使用minicom调试设备"></a>使用minicom调试设备</h3><h4 id="安装minicom"><a href="#安装minicom" class="headerlink" title="安装minicom"></a>安装minicom</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install minicom lrzsz</span><br></pre></td></tr></table></figure>
<p>从上面挂载结果可以得出设备所属root，dialout组。所以，在我们使用minicom时，需要使用root权限。</p>
<h4 id="配置串口信息"><a href="#配置串口信息" class="headerlink" title="配置串口信息"></a>配置串口信息</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo minicom</span><br></pre></td></tr></table></figure>
<p>输出欢迎信息如下：</p>
<p><img src="https://blog.ywmy.xyz/networkstartup.png" alt="startup"></p>
<p>包含欢迎信息，字符集，端口信息。</p>
<p>由图可以看出转义字符为CTRL-A，输入Z查看帮助。</p>
<p>按下CTRL－A，后输入Z。得到帮助页面如下：</p>
<p><img src="https://blog.ywmy.xyz/networkhelp_screen.png" alt="help_screen"></p>
<p>如图所示：</p>
<p>D：排号目录<br>S：发送文件<br>F：发送断开帧<br>T：终端设置<br>G：运行脚本<br>O：配置minicom<br>X：退出minicom等</p>
<p>这里，我们想要连接串口，首先配置minicom。按O键。</p>
<p>得到如下配置项：</p>
<p><img src="https://blog.ywmy.xyz/network/config_minicom.png" alt="config_minicom"></p>
<p>使用方向键选择serial port setup</p>
<p>配置如下：</p>
<p><img src="https://blog.ywmy.xyz/network/serial_setup.png" alt="serial_setup"></p>
<p>如图上图所示，按A，更改默认tty8为已挂载串口设备ttyUSB0，按F键更改默认Hardware Floww Control为no，默认硬件控制，即不接受串口输入信息，连接后，从键盘的输入就没有响应。改为no，后，按esc键退出菜单，将配置另存，或者直接保存默认dfl文件，然后退出配置。按X键退出minicom。</p>
<p>重新进入minicom程序</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo minicom your_config_file</span><br></pre></td></tr></table></figure>
<p>进入程序后，按回国，终端回显登录信息，如下图：</p>
<p><img src="https://blog.ywmy.xyz/network/login_device.png" alt="login_device"></p>
<p>接下来就是愉快的调试了。</p>
<p>串口的配置文件保存在家目录下的隐藏文件，名称为.minirc.filename。如默认的.minirc.dfl。</p>
<h3 id="使用pococom调试"><a href="#使用pococom调试" class="headerlink" title="使用pococom调试"></a>使用pococom调试</h3><h4 id="安装pococom"><a href="#安装pococom" class="headerlink" title="安装pococom"></a>安装pococom</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install picocom</span><br></pre></td></tr></table></figure>
<p>连接操作：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo picocom -b 9600 /dev/ttyUSB0</span><br></pre></td></tr></table></figure>
<p>输出如下：</p>
<p><img src="https://blog.ywmy.xyz/network/picocom_startup.png" alt="picocom_startup"></p>
<p>转义字符为CTRL－A，CTRL-H为查看帮助；</p>
<p><img src="https://blog.ywmy.xyz/network/help_screen.png" alt="help_screen"></p>
<p>配置项如上图所示，CTRL-A-&gt;CTRL-X退出picocom。</p>
<p>terminal ready。按回车直接进入终端。开始调试吧。</p>
]]></content>
      <tags>
        <tag>network</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu 安装mysql server</title>
    <url>/2019/03/06/ubuntu-%E5%AE%89%E8%A3%85mysql-server/</url>
    <content><![CDATA[<h2 id="ubuntu-安装mysql-server"><a href="#ubuntu-安装mysql-server" class="headerlink" title="ubuntu 安装mysql server"></a>ubuntu 安装mysql server</h2><h2 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h2><ul>
<li>系统：ubuntu 18.04 LTS</li>
<li>安装方式：apt</li>
<li>版本：5.7.25</li>
</ul>
<h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install mysql</span><br></pre></td></tr></table></figure>
<h3 id="启用服务"><a href="#启用服务" class="headerlink" title="启用服务"></a>启用服务</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo systemctl start mysql  //启用服务</span><br><span class="line">sudo systemctl status mysql //查看服务状态</span><br><span class="line">sudo systemctl <span class="built_in">enable</span> mysql //将服务添加开机启动</span><br></pre></td></tr></table></figure>
<h3 id="初始化操作"><a href="#初始化操作" class="headerlink" title="初始化操作"></a>初始化操作</h3><p>在之前的ubuntu版本中，通过apt方式安装mysql服务后，直接运行命令mysql_secure_installation，即可直接运行mysql的初始化。默认的root密码为空，提交回车后，会直接提示设置root密码，以及mysql相关的其它配置。</p>
<p>在ubuntu 18.04中，默认的安装中，没有root账号，运行会提示如下：</p>
<blockquote>
<p>Securing the MySQL server deployment.<br>Enter password for user root:<br>Error: Access denied for user ‘root’@’localhost’  </p>
</blockquote>
<p>即没有root账号也没有无法运行mysql_secure_installation命令，需要我们从安装的配置文件中寻找有用的信息，运行命令：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">whereis mysql</span><br></pre></td></tr></table></figure>
<p>输出结果：</p>
<blockquote>
<p>mysql: /usr/bin/mysql /usr/lib/mysql /etc/mysql /usr/share/mysql /usr/share/man/man1/mysql.1.gz  </p>
</blockquote>
<p>找到配置文件目录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ls /etc/mysqlconf.d  debian.cnf  debian-start  my.cnf  my.cnf.fallback  mysql.cnf  mysql.conf.d</span><br></pre></td></tr></table></figure>
<p>在配置目录中，还看到了debian.cnf，查看配置文件：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat /etc/mysql/debian.cnf</span><br></pre></td></tr></table></figure>
<p>输出如下：</p>
<blockquote>
<p>Automatically generated for Debian scripts. DO NOT TOUCH!<br>[client]<br>host     = localhost<br>user     = debian-sys-maint<br>password = ABCDEFGHIJKLMNOPQ<br>socket   = /var/run/mysqld/mysqld.sock<br>[mysql_upgrade]<br>host     = localhost<br>user     = debian-sys-maint<br>password = ABCDEFGHIJKLMNOPQ<br>socket   = /var/run/mysqld/mysqld.sock  </p>
</blockquote>
<p>好了，从配置文件中，我们看到了初始生成的用户名和密码了，使用用户名和密码登录，成功进入。</p>
<h3 id="创建用户及授权"><a href="#创建用户及授权" class="headerlink" title="创建用户及授权"></a>创建用户及授权</h3><p>使用默认生成的账号和密码登录：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -u debain-sys-maint -p</span><br></pre></td></tr></table></figure>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">CREATE USER <span class="string">&#x27;your_name&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED BY <span class="string">&#x27;password&#x27;</span>;</span><br></pre></td></tr></table></figure>
<p>授权：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">GRANT ALL PRIVILEGES ON *.* TO <span class="string">&#x27;your_name&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> WITH GRANT OPTION</span><br></pre></td></tr></table></figure>
<p>授权所有权限，并授权从任意位置登录。</p>
<p>以上操作至此结束。</p>
<p>查看已存在的用户密码：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">select user,host from mysql.user;</span><br></pre></td></tr></table></figure>
<p>更改用户密码：</p>
<p>例如更新那个不知道密码的root账号：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql&gt; update user <span class="built_in">set</span> authentication_string=password(<span class="string">&#x27;new_password&#x27;</span>) WHERE user=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">Query OK, 1 row affected, 1 warning (0.08 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 1</span><br><span class="line"></span><br><span class="line">mysql&gt; flush privileges;     //刷新权限，立即生效</span><br><span class="line">Query OK, 0 rows affected (0.00 sec)</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>database</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu 安装打印机驱动</title>
    <url>/2019/03/26/ubuntu-%E5%AE%89%E8%A3%85%E6%89%93%E5%8D%B0%E6%9C%BA%E9%A9%B1%E5%8A%A8/</url>
    <content><![CDATA[<h2 id="EPSON-L455驱动安装"><a href="#EPSON-L455驱动安装" class="headerlink" title="EPSON L455驱动安装"></a>EPSON L455驱动安装</h2><p>自己在多年前买了一个打印复印一体机，EPSON L455，4色喷墨打印机。也是长时间没有在ubuntu下使用，重装系统后，准备用起来。安装驱动如下：</p>
<h2 id="驱动下载"><a href="#驱动下载" class="headerlink" title="驱动下载"></a>驱动下载</h2><p>EPSON L455有linux驱动支持。下载页面<a href="http://download.ebz.epson.net/dsc/search/01/search/searchModule">请戳</a>，在驱动页面选择型号，L455，选择操作系统LINUX。有三个下载项，两个打印驱动和一个扫描驱动：</p>
<ul>
<li>Epson Printer Utility 1.0.2</li>
<li>Epson Printer Utility 1.0.0</li>
<li>Scanner Driver 1.3.44</li>
</ul>
<p>两个打印驱动任选一个，进入下载页面，点击同意，出现下载链接。点击下载deb包。扫描安装，选择ubuntu版本。</p>
<h2 id="打印驱动依赖安装"><a href="#打印驱动依赖安装" class="headerlink" title="打印驱动依赖安装"></a>打印驱动依赖安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install lsb</span><br></pre></td></tr></table></figure>
<h2 id="安装打印机"><a href="#安装打印机" class="headerlink" title="安装打印机"></a>安装打印机</h2><p>双南打印机驱动安装包，安装驱动程序。安装结束后，打开系统设置，打印机，已经自动连接和添加了打印机。</p>
<h2 id="扫描安装"><a href="#扫描安装" class="headerlink" title="扫描安装"></a>扫描安装</h2><p>解压下载的驱动安装包。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chmod u+x install.sh</span><br><span class="line">./install.sh</span><br></pre></td></tr></table></figure>
<p>安装结束后，打开扫描易，已经自动添加EPSON扫描设备了。</p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu 配置tftp服务</title>
    <url>/2019/03/28/ubuntu-%E9%85%8D%E7%BD%AEtftp%E6%9C%8D%E5%8A%A1/</url>
    <content><![CDATA[<h2 id="ubuntu-18-04-启用TFTP服务"><a href="#ubuntu-18-04-启用TFTP服务" class="headerlink" title="ubuntu 18.04 启用TFTP服务"></a>ubuntu 18.04 启用TFTP服务</h2><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install tftpd-hpa tftp-hpa tftp-hpa-dbg pxelinux</span><br></pre></td></tr></table></figure>
<h2 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h2><ul>
<li><p>创建tftp服务目录</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkdir tftproot</span><br><span class="line">chmod 777 tftproot</span><br></pre></td></tr></table></figure></li>
<li><p>修改配置文件</p>
</li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo cp /etc/default/tftpd-hpa /etc/default/tftpd-hpa_backup   //备份配置文件</span><br><span class="line">sudo vim /etc/default/tftpd-hpa         //修改配置文件</span><br><span class="line"></span><br><span class="line">//配置如下</span><br><span class="line"></span><br><span class="line"><span class="comment"># /etc/default/tftpd-hpa</span></span><br><span class="line"></span><br><span class="line">TFTP_USERNAME=<span class="string">&quot;tftp&quot;</span></span><br><span class="line">TFTP_DIRECTORY=<span class="string">&quot;/home/abcd/tftproot&quot;</span></span><br><span class="line">TFTP_ADDRESS=<span class="string">&quot;:69&quot;</span></span><br><span class="line">TFTP_OPTIONS=<span class="string">&quot;-l -c -s&quot;</span></span><br></pre></td></tr></table></figure>
<ul>
<li><p>启用tftp服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo service tftpd-hpa restart</span><br><span class="line">sudo systemctl status tftpd-hpa //查看服务状态</span><br><span class="line"></span><br><span class="line">● tftpd-hpa.service - LSB: HPA<span class="string">&#x27;s tftp server</span></span><br><span class="line"><span class="string">   Loaded: loaded (/etc/init.d/tftpd-hpa; generated)</span></span><br><span class="line"><span class="string">   Active: active (running) since Thu 2019-03-28 19:44:48 CST; 16s ago</span></span><br><span class="line"><span class="string">     Docs: man:systemd-sysv-generator(8)</span></span><br><span class="line"><span class="string">  Process: 11088 ExecStop=/etc/init.d/tftpd-hpa stop (code=exited, status=0/SUCC</span></span><br><span class="line"><span class="string">  Process: 11093 ExecStart=/etc/init.d/tftpd-hpa start (code=exited, status=0/SU</span></span><br><span class="line"><span class="string">    Tasks: 1 (limit: 4915)</span></span><br><span class="line"><span class="string">   CGroup: /system.slice/tftpd-hpa.service</span></span><br><span class="line"><span class="string">           └─11101 /usr/sbin/in.tftpd --listen --user tftp --address :69 -l -c -</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">3月 28 19:44:48 ian-ThinkPad systemd[1]: Starting LSB: HPA&#x27;</span>s tftp server...</span><br><span class="line">3月 28 19:44:48 ian-ThinkPad tftpd-hpa[11093]:  * Starting HPA<span class="string">&#x27;s tftpd in.tftpd</span></span><br><span class="line"><span class="string">3月 28 19:44:48 ian-ThinkPad tftpd-hpa[11093]:    ...done.</span></span><br><span class="line"><span class="string">3月 28 19:44:48 ian-ThinkPad systemd[1]: Started LSB: HPA&#x27;</span>s tftp server.</span><br><span class="line">lines 1-14/14 (END)</span><br></pre></td></tr></table></figure></li>
</ul>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>ubuntu下的一些小折腾</title>
    <url>/2019/04/17/ubuntu%E4%B8%8B%E7%9A%84%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%98%E8%85%BE/</url>
    <content><![CDATA[<h2 id="Ubuntu-18-04-小问题"><a href="#Ubuntu-18-04-小问题" class="headerlink" title="Ubuntu 18.04 小问题"></a>Ubuntu 18.04 小问题</h2><h2 id="ibus候选词方块"><a href="#ibus候选词方块" class="headerlink" title="ibus候选词方块"></a>ibus候选词方块</h2><ul>
<li>问题描述</li>
</ul>
<p>默认的ibus输入法，在输入中文的时候，会出现候选词为方块的现象，原因大致为输入法码表与系统字体渲染的问题。即码表中字符在系统的字体库中找不到对应的字体。虽然不影响使用，且码表中匹配的字大都为繁体或生僻字，看到方块，总有一种要干掉方块字的冲动。尝试把系统字体更改为思源黑体，不过输入法候选词中仍然存在方块。更改输入法显示字体：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ibus-setup</span><br></pre></td></tr></table></figure>
<p>更改如图：</p>
<p><img src="https://blog.ywmy.xyz/linux/ibus_setup.png" alt="ibus-setup"></p>
<p>尝试安装更多字符集的字体库，如明朝花园Ｂ。</p>
<p>下载链接<a href="https://github.com/tony/dot-fonts">请戳</a></p>
<p>补充CJK字体在不同程序之间输入显示的一个小问题，比如码表同[IDRN]源下加心，𢢵.这个字在VS CODE中可以显示，谷歌浏览器中也可以正常显示，在WPS中则显示为潮。</p>
<h2 id="vs-code-power-line-font"><a href="#vs-code-power-line-font" class="headerlink" title="vs code power-line font"></a>vs code power-line font</h2><ul>
<li>问题描述</li>
</ul>
<p>在昨天没事的时候，把系统的默认的bash更改为zsh，并配置了美化，oh my zsh。</p>
<p>终端上可以很赏心悦目了，不过在打开vs code的时候，调用zsh会出现power-line字体不显示的问题，具体可看下图：</p>
<p><img src="https://blog.ywmy.xyz/linux/vs_code_powerline.png" alt="vs_code_powerline"></p>
<ul>
<li>解决办法</li>
</ul>
<p>a. 安装power-line字体</p>
<p>下载<a href="https://github.com/abertsch/Menlo-for-Powerline">请戳</a></p>
<p>b. 配置vs code</p>
<p>操作步骤：设置－&gt;打开json设置-&gt;输入以下调用字体信息：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line"><span class="string">&quot;terminal.integrated.fontFamily&quot;</span>: <span class="string">&quot;Menlo for Powerline&quot;</span>,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>参考下图：</p>
<p><img src="https://blog.ywmy.xyz/linux/vs_code_powerline_set.png" alt="vs_code_powerline_set"></p>
<p>完成设置后，显示效果生效，参考下图：</p>
<p><img src="https://blog.ywmy.xyz/linux/vs_code_json_set.png" alt="vs_code_json_ser"></p>
<p><a href="https://dev.to/mattstratton/making-powerline-work-in-visual-studio-code-terminal-1m7">参考链接</a></p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>vim查找与替换</title>
    <url>/2019/02/16/vim%E6%9F%A5%E6%89%BE%E4%B8%8E%E6%9B%BF%E6%8D%A2/</url>
    <content><![CDATA[<h2 id="vim中使用查找和替换"><a href="#vim中使用查找和替换" class="headerlink" title="vim中使用查找和替换"></a>vim中使用查找和替换</h2><h2 id="查找"><a href="#查找" class="headerlink" title="查找"></a>查找</h2><p>在normal模式下按下”/“即可进入查找模式，输入要查找的字符串并按下回车，Vim会跳到第一个匹配。按下”n”查找下一个，按下”N”查找上一个。</p>
<p>Vim查找支持正则表达式，例如/vim$匹配行尾的”vim”。需要查找特殊字符，需要黑底，例如/vim$匹配“vim$”。</p>
<p><code>注意查找回车应用\n，而替换为回车应当用\r(相当于&lt;CR&gt;)。</code></p>
<h3 id="大小写第三查找"><a href="#大小写第三查找" class="headerlink" title="大小写第三查找"></a>大小写第三查找</h3><p>在查找模式中加入\c表示大小写不敏感查找，\C表示大小写敏感查找。例如：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">/foo\c</span><br></pre></td></tr></table></figure>
<p>将会查找所有的“foo”,”FOO”,”Foo”等字符串。</p>
<p>大小写敏感配置</p>
<p>Vim默认采用大小写敏感查找，为了方便我们常常将配置为大小写不敏感：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot; 设置默认进行大小写敏感查找</span></span><br><span class="line"><span class="string">set ignorecase</span></span><br><span class="line"><span class="string">&quot;</span> 如果有一个大写字母，则切换到大小敏感查找</span><br><span class="line"><span class="built_in">set</span> smartcase</span><br></pre></td></tr></table></figure>
<p><code>将上述设置粘贴到你的~/.vimrc，重新打开Vim即可生效</code></p>
<h3 id="查找当前单词"><a href="#查找当前单词" class="headerlink" title="查找当前单词"></a>查找当前单词</h3><p>在normal模式下，按下”\<em>“即可查找光标所在的单词(word)，要求每次出现的前后为空白或标点符号。例如当前为foo，可以匹配foo bar中的foo，但不可匹配foobar中的foo。这在查找函数名、变量名时非常有用。按下”\g</em>“即可查找光标所在的单词的字符序列，每次出现前后字符无要求。即foo bar和foobar中的foo均可以被匹配到。</p>
<h2 id="查找与替换"><a href="#查找与替换" class="headerlink" title="查找与替换"></a>查找与替换</h2><p>:s (substitude) 命令用来查找和替换字符串，语法如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">:&#123;作用范围&#125;s/&#123;目标&#125;/&#123;替换值&#125;/&#123;替换标志&#125;</span><br></pre></td></tr></table></figure>
<p>例如:”%s/foo/bar/g”会在全局范围(%)查找foo并替换为bar，所有出现都会被替换(g)。</p>
<h3 id="作用范围"><a href="#作用范围" class="headerlink" title="作用范围"></a>作用范围</h3><p>作用范围分为当前行，全文，选区等。</p>
<p>当前行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">:s/foo/bar/g</span><br></pre></td></tr></table></figure>
<p>全文：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">%s/foo/bar/g</span><br></pre></td></tr></table></figure>
<p>选区，在Visual模式下选择区域后输入:，Vim即自动补全为:’&lt;,’&gt;s/foo/bar/g</p>
<p>2-11行：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">:5,12s/foo/bar/g</span><br></pre></td></tr></table></figure>
<p>当前行.与接下来两行+2：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">:.,+2s/foo/bar/g</span><br></pre></td></tr></table></figure>
<h3 id="替换标志"><a href="#替换标志" class="headerlink" title="替换标志"></a>替换标志</h3><p>上文中命令结尾g即是替换标志之一，表示全局global替换(即替换目标的所有出现)。还有很多其它有用的替换标志：</p>
<p>空替换标志表示只替换从光标位置开始，目标第一次出现：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">:%s/foo/bar</span><br></pre></td></tr></table></figure>
<p><strong>i</strong>表示大小写不敏感查找，<strong>I</strong>表示大写小敏感：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">:%s/foo/bar/i</span><br><span class="line">＃ 等效于模式中\c(不敏感)或\C(敏感)</span><br><span class="line">:%s/foo\c/bar</span><br></pre></td></tr></table></figure>
<p><strong>c</strong>表示确认，例如全局查找“<strong>foo</strong>”替换为”<strong>bar</strong>“并且需要确认：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">:%s/foo/bar/gc</span><br></pre></td></tr></table></figure>
<p>回车后Vim会将光标移动到每一次”<strong>foo</strong>“出现的位置，并提示：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">replace with bar (y/n/a/q/l^E/^Y)?</span><br></pre></td></tr></table></figure>
<p>按下<strong>y</strong>表示替换，<strong>n</strong>表示不替换，<strong>a</strong>表示替换所有，<strong>q</strong>表示退出查找模式，<strong>l</strong>表示替换当前位置并退出。<strong>^E</strong>与<strong>^Y</strong>是光标移动快捷键。</p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>webadmin安装</title>
    <url>/2018/10/21/webmin%E5%AE%89%E8%A3%85/</url>
    <content><![CDATA[<h2 id="centos-7-安装webadmin"><a href="#centos-7-安装webadmin" class="headerlink" title="centos 7 安装webadmin"></a>centos 7 安装webadmin</h2><h2 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h2><p>webadmin是一个基于浏览器界面的类Unix系统配置管理工具。</p>
<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget http://prdownloads.sourceforge.net/webadmin/webmin-1.900-1.noarch.rpm</span><br></pre></td></tr></table></figure>
<h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum -y install perl perl-Net-SSLeay openssl perl-IO-Tty perl-Encode-Detect </span><br></pre></td></tr></table></figure>
<h3 id="安装程序"><a href="#安装程序" class="headerlink" title="安装程序"></a>安装程序</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">rpm -U webmin-1.900-1.noarch.rpm</span><br></pre></td></tr></table></figure>
<p>程序安装位置：/usr/libexec/webmin</p>
<p>程序默认通过https访问，端口10000 TCP，按访问需求放通。</p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>windows 10 homebasic rdp</title>
    <url>/2019/05/06/windows-10-homebasic-rdp/</url>
    <content><![CDATA[<h2 id="windows-10-家庭版开启远程"><a href="#windows-10-家庭版开启远程" class="headerlink" title="windows 10 家庭版开启远程"></a>windows 10 家庭版开启远程</h2><p>windows 家庭版的系统默认没有远程功能，大多数的预装正版的系统中无法使用windows自带的远程服务。</p>
<p>虽然通过绝大多数的第三方程序，都可以实现远程，但是自己之前有搭内网穿透，所以，也想把这个用上。于是又找到一个工具:rdpwrap。下载<a href="https://github.com/stascorp/rdpwrap/releases">请戳</a>。</p>
<p>选择最新zip包下载。</p>
<h3 id="安装rdpwrap"><a href="#安装rdpwrap" class="headerlink" title="安装rdpwrap"></a>安装rdpwrap</h3><ol>
<li>解压下载的包装包</li>
<li>安装程序</li>
</ol>
<p>依次运行RDPWinst，install，RDPconf文件。</p>
<p>RDPconf文件为检测文件，运行后，会发现服务无法启用，会出现Listener state和支持的问题。</p>
<p>解决办法：使用命令重装安装，比如把文件夹复制到C盘目录下，CMD以管理员身份运行</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">cd</span> c:\RDPWrap</span><br><span class="line">c:\RDPWrap&gt;RDPWInst.exe -r</span><br></pre></td></tr></table></figure>
<p>安装后，再次打开RDPConf.exe</p>
<p>检测已经通过。安装结束。解决方法来自issues。</p>
<h3 id="验证"><a href="#验证" class="headerlink" title="验证"></a>验证</h3><p>使用内网其它电脑上的RDP工具，远程测试。如果使用的是microsoft账号登录的，则直接使用microsoft认证的信息登录即可。不用使用PIN码登录。</p>
<p>配置结束。</p>
]]></content>
      <tags>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>windows 脚本更改密码/远程端口/开放防火墙端口</title>
    <url>/2019/03/31/windows-%E8%84%9A%E6%9C%AC%E6%9B%B4%E6%94%B9%E5%AF%86%E7%A0%81-%E8%BF%9C%E7%A8%8B%E7%AB%AF%E5%8F%A3-%E5%BC%80%E6%94%BE%E9%98%B2%E7%81%AB%E5%A2%99%E7%AB%AF%E5%8F%A3/</url>
    <content><![CDATA[<h2 id="脚本更改用户密码-远程端口-开放防火墙端口"><a href="#脚本更改用户密码-远程端口-开放防火墙端口" class="headerlink" title="脚本更改用户密码/远程端口/开放防火墙端口"></a>脚本更改用户密码/远程端口/开放防火墙端口</h2><blockquote>
<p>通过脚本设置用户信息，更改windows远程端口及开放防火墙端口</p>
</blockquote>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line">:begin</span><br><span class="line"><span class="built_in">echo</span> %Date% %Time% &gt;&gt; change.txt</span><br><span class="line"><span class="built_in">echo</span> <span class="comment">#######################</span></span><br><span class="line"><span class="built_in">set</span> /p input=请输入需要修改的密码:</span><br><span class="line"><span class="built_in">echo</span> 密码修改为:%input% &gt;&gt; change.txt</span><br><span class="line">net user administrator %input% &amp;&amp; <span class="built_in">echo</span> 密码修改成功 || <span class="built_in">echo</span> 密码修改失败，输入密码为弱密码，请重新输入强密码 &amp;&amp; goto begin</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="comment">##############</span></span><br><span class="line"><span class="built_in">echo</span> 修改远程桌面端口</span><br><span class="line"><span class="built_in">echo</span> <span class="comment">##############</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">set</span> /p c=请输入新的远程登录端口:</span><br><span class="line">reg add <span class="string">&quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\Wds\rdpwd\Tds\tcp&quot;</span> /v <span class="string">&quot;PortNumber&quot;</span> /t REG_DWORD /d <span class="string">&quot;%c&quot;</span> /f</span><br><span class="line">reg add <span class="string">&quot;HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp&quot;</span> /v <span class="string">&quot;PortNumber&quot;</span> /t REG_DWORD /d <span class="string">&quot;%c&quot;</span> /f</span><br><span class="line"><span class="built_in">echo</span> 远程桌面端口更改为：%c% &gt;&gt; change.txt</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="comment">######################</span></span><br><span class="line"><span class="built_in">echo</span> 配置防火墙开放远程端口%c%</span><br><span class="line"><span class="built_in">echo</span> <span class="comment">######################</span></span><br><span class="line"></span><br><span class="line">netsh firewall show state | findstr 操作模式 &gt; %temp%\1.txt</span><br><span class="line"><span class="built_in">set</span> /p a= &lt;%temp%\1.txt</span><br><span class="line"><span class="built_in">set</span> b=%a:~-2%</span><br><span class="line">del %temp%\1.txt</span><br><span class="line"><span class="keyword">if</span> <span class="string">&quot;%b%&quot;</span>==<span class="string">&quot;启用&quot;</span> (<span class="built_in">echo</span> 防火墙已经开放%c%端口 &amp;&amp; netsh firewall <span class="built_in">set</span> protopening TCP %c% <span class="built_in">enable</span> &gt; NUL) <span class="keyword">else</span> <span class="built_in">echo</span> 防火墙未开启，无须配置</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> <span class="comment">##########</span></span><br><span class="line"><span class="built_in">echo</span> 重启生效</span><br><span class="line"><span class="built_in">echo</span> <span class="comment">##########</span></span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>windows 脚本自动登录交换机</title>
    <url>/2019/03/27/windows-%E8%84%9A%E6%9C%AC%E8%87%AA%E5%8A%A8%E7%99%BB%E5%BD%95%E4%BA%A4%E6%8D%A2%E6%9C%BA/</url>
    <content><![CDATA[<h2 id="windows-脚本telnet登录交换机"><a href="#windows-脚本telnet登录交换机" class="headerlink" title="windows 脚本telnet登录交换机"></a>windows 脚本telnet登录交换机</h2><p>前言，公司的另外一个项目中的一个小问题，网络中的LED显示屏，会经常从服务端到终端不通。从网关上ping一下之前，又可以从服务端正常操作。一直也没找到这个问题的根源，就想到了一个暂时解决方法，能不能写一个脚本自动登录交换机，执行ping命令。再写一个计划任务，每天定时执行一次脚本。</p>
<p>这个想法还真可以操作。脚本代码如下：</p>
<h2 id="自动登录脚本"><a href="#自动登录脚本" class="headerlink" title="自动登录脚本"></a>自动登录脚本</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="built_in">echo</span> off</span><br><span class="line"><span class="built_in">echo</span> <span class="built_in">set</span> sh=WScript.CreateObject(<span class="string">&quot;WScript.Shell&quot;</span>) &gt; telnet_tmp.vbs</span><br><span class="line"><span class="built_in">echo</span> WScript.Sleep 3000 &gt;&gt; telnet_tmp.vbs</span><br><span class="line"><span class="built_in">echo</span> sh.SendKeys <span class="string">&quot;open 10.10.10.2&quot;</span> &gt;&gt; telnet_tmp.vbs</span><br><span class="line"><span class="built_in">echo</span> WScript.Sleep 3000 &gt;&gt; telnet_tmp.vbs</span><br><span class="line"><span class="built_in">echo</span> sh.SendKeys <span class="string">&quot;&#123;ENTER&#125;&quot;</span> &gt;&gt; telnet_tmp.vbs</span><br><span class="line"><span class="built_in">echo</span> WScript.Sleep 3000 &gt;&gt; telnet_tmp.vbs</span><br><span class="line"><span class="built_in">echo</span> sh.SendKeys “USERNAME&#123;ENTER&#125;” &gt;&gt; telnet_tmp.vbs</span><br><span class="line"><span class="built_in">echo</span> WSCript.Sleep 3000 &gt;&gt; telnet_tmp.vbs</span><br><span class="line"><span class="built_in">echo</span> sh.SendKeys <span class="string">&quot;PASSWORD&#123;ENTER&#125;&quot;</span> &gt;&gt; telnet_tmp.vbs</span><br><span class="line"><span class="built_in">echo</span> WScript.Sleep 3000 &gt;&gt; telnet_tmp.vbs</span><br><span class="line"><span class="built_in">echo</span> sh.SendKeys <span class="string">&quot;ping 192.0.5.120&#123;ENTER&#125;&quot;</span> &gt;&gt; telnet_tmp.vbs</span><br><span class="line">......</span><br><span class="line"><span class="built_in">echo</span> sh.SendKeys <span class="string">&quot;exit&#123;ENTER&#125;&quot;</span> &gt;&gt; telnet_tmp.vbs</span><br><span class="line"><span class="built_in">echo</span> WScript.Sleep 30 &gt;&gt; telnet_tmp.vbs</span><br><span class="line"><span class="built_in">echo</span> sh.SendKeys <span class="string">&quot;&#123;ENTER&#125;&quot;</span> &gt;&gt; telnet_tmp.vbs</span><br><span class="line"><span class="built_in">echo</span> sh.SendKeys <span class="string">&quot;&#123;ENTER&#125;&quot;</span> &gt;&gt; telnet_tmp.vbs</span><br><span class="line"><span class="built_in">echo</span> sh.SendKeys <span class="string">&quot;&#123;ENTER&#125;&quot;</span> &gt;&gt; telnet_tmp.vbs</span><br><span class="line">start telnet</span><br><span class="line">cscript //nologo telnet_tmp.vbs</span><br><span class="line">taskkill /f /im cmd.exe</span><br><span class="line"><span class="built_in">echo</span> sh.SendKeys <span class="string">&quot;&#123;ENTER&#125;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> sh.SendKeys <span class="string">&quot;quit&#123;ENTER&#125;&quot;</span></span><br><span class="line"><span class="built_in">echo</span> del telnet_tmp.vbs</span><br></pre></td></tr></table></figure>
<p>TODO：以上脚本可以实现登录和自动PING，仍然存在一个问题，就是telnet退出后，有一个任意键退出。此问题暂无思路。留后。</p>
]]></content>
      <tags>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>windows常用命令</title>
    <url>/2018/08/05/windows%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/</url>
    <content><![CDATA[<h2 id="windows-常用命令"><a href="#windows-常用命令" class="headerlink" title="windows 常用命令"></a>windows 常用命令</h2><p>本日志记录一些常用的windows 命令，涉及网络、服务、进程、计划任务等，以备用。</p>
<h2 id="net相关"><a href="#net相关" class="headerlink" title="net相关"></a>net相关</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netsh wlan show drive  //查看网卡是否具备网络承载能力</span><br><span class="line"></span><br><span class="line">netsh wlan <span class="built_in">set</span> hostednetwork mode=allow ssid=XXX key=XXX //开启网络承载功能</span><br><span class="line"></span><br><span class="line">netsh wlan start hostednetwork //启用配置</span><br><span class="line"></span><br><span class="line">netsh wlan stop hostednetwork //停用配置</span><br><span class="line"></span><br><span class="line">netsh wlan show hostednetwork //查看已经创建的承载网络</span><br><span class="line"></span><br><span class="line">netsh winsock reset //重置sock</span><br><span class="line"></span><br><span class="line">net user administrator /active:yes //启用administrator</span><br><span class="line"></span><br><span class="line">net start //查看已经雇用的windows服务</span><br><span class="line"></span><br><span class="line">net start dnscache //开启dns缓存</span><br><span class="line"></span><br><span class="line">net stop dnscache //关闭dns缓存</span><br><span class="line"></span><br><span class="line">net share //查看本地共享</span><br><span class="line"></span><br><span class="line">net share share=c:\share //将Ｃ下的share文件夹设置为共享，共享名为share</span><br><span class="line"></span><br><span class="line">net share share /delete //删除共享名为share的共享</span><br><span class="line"></span><br><span class="line">net use //查看已经登录的网络连接</span><br><span class="line"></span><br><span class="line">net use q: \\192.168.11.10\abc abc_passwd /user:abc   //将192.168.11.10下的abc文件映射到本地Q盘，共享使用abc账号／密码登录。</span><br><span class="line"></span><br><span class="line">net use q: /delete /yes     //删除本机Q盘的映射</span><br><span class="line"></span><br><span class="line">net use */y /d //消除全部已经登录的网络会话</span><br><span class="line"></span><br><span class="line">net view //查看本地共享列表</span><br><span class="line"></span><br><span class="line">net user //查看本机用户</span><br><span class="line"></span><br><span class="line">net user administrator //查看本地帐号administrator的信息</span><br><span class="line"></span><br><span class="line">net user dev 123456 /add //添加用户为dev密码为123456</span><br><span class="line"></span><br><span class="line">net user dev localgroup administrator dev /add //将本地用户dev加入administrator组中</span><br><span class="line"></span><br><span class="line">net user dev /del //删除本地用户dev</span><br></pre></td></tr></table></figure>
<h2 id="进程操作"><a href="#进程操作" class="headerlink" title="进程操作"></a>进程操作</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tasklist //查看进程</span><br><span class="line"></span><br><span class="line">taskkill /im notepad.exe //结束名为notepad.exe的进程</span><br><span class="line"></span><br><span class="line">taskkill /pid 1230 /pid 1241 /pid 1252 /t //结束pid为1230、1241、1253的进程及由它启动的子进程</span><br><span class="line"></span><br><span class="line">taskkill /f /im cmd.exe /t //强制结束名为cmd.exe的进程以及由它启动的子进程</span><br></pre></td></tr></table></figure>
<h2 id="网络操作"><a href="#网络操作" class="headerlink" title="网络操作"></a>网络操作</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">netstat -a //查看计算机开了哪些端口</span><br><span class="line"></span><br><span class="line">route <span class="built_in">print</span> //查看路由表</span><br></pre></td></tr></table></figure>
<h2 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">taskchd.msc //计划任务</span><br><span class="line"></span><br><span class="line">gpedit.msc //组策略</span><br><span class="line"></span><br><span class="line">msconfig //启动项</span><br><span class="line"></span><br><span class="line">diskmgmt.msc //磁盘管理</span><br><span class="line"></span><br><span class="line">tracert IP //路由跟踪</span><br><span class="line"></span><br><span class="line">eventvwr.msc  //windows 日志</span><br><span class="line"></span><br><span class="line">diskpart //磁盘管理</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>zabbix 3.4 中文乱码</title>
    <url>/2020/03/07/zabbix-3-4-%E4%B8%AD%E6%96%87%E4%B9%B1%E7%A0%81/</url>
    <content><![CDATA[<h2 id="zabbix-3-4中文乱码"><a href="#zabbix-3-4中文乱码" class="headerlink" title="zabbix 3.4中文乱码"></a>zabbix 3.4中文乱码</h2><p>切换到中文后，图表里有乱码，操作办法。替换换乱码的字体。</p>
<p>zabbix图表字体位置</p>
<p>/usr/share/zabbix/fonts/graphfont.ttf</p>
<p>这个字体软链接到:</p>
<p>/etc/alternatives/zabbix-web-font </p>
<p>又链接到<br>/usr/share/fonts/dejavu/DejaVuSans.ttf</p>
<p>这下 简单，找一个微软系统自带的字体，比如simkai.ttf上传到/usr/share/fonts/目录下</p>
<p>备份一下zabbix的默认链接</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mv  zabbix-web-font zabbix-web-font_backup</span><br><span class="line">ln -s /usr/share/fonts/simkai.ttf ./zabbix-web-font</span><br></pre></td></tr></table></figure>
<p>重新刷新 一下zabbix页面 。好了，中文方框不见了。结束。</p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>zabbix 忘记admin密码</title>
    <url>/2020/02/28/zabbix-%E5%BF%98%E8%AE%B0admin%E5%AF%86%E7%A0%81/</url>
    <content><![CDATA[<h2 id="zabbix忘记admin密码"><a href="#zabbix忘记admin密码" class="headerlink" title="zabbix忘记admin密码"></a>zabbix忘记admin密码</h2><p>好长时间 没有使用admin登录zabbix了，尝试了几次没登录上去，虽然有其它用户 暂不影响使用，但问题一直在，也不是办法。</p>
<h2 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h2><h3 id="1-连接zabbix数据库"><a href="#1-连接zabbix数据库" class="headerlink" title="1.连接zabbix数据库"></a>1.连接zabbix数据库</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mysql -u root -p</span><br></pre></td></tr></table></figure>
<h3 id="2-查询user表信息"><a href="#2-查询user表信息" class="headerlink" title="2.查询user表信息"></a>2.查询user表信息</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Welcome to the MariaDB monitor.  Commands end with ; or \g.</span><br><span class="line">Your MariaDB connection id is 7191</span><br><span class="line">Server version: 5.5.64-MariaDB MariaDB Server</span><br><span class="line"></span><br><span class="line">Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</span><br><span class="line"></span><br><span class="line">Type <span class="string">&#x27;help;&#x27;</span> or <span class="string">&#x27;\h&#x27;</span> <span class="keyword">for</span> <span class="built_in">help</span>. Type <span class="string">&#x27;\c&#x27;</span> to clear the current input statement.</span><br><span class="line"></span><br><span class="line">MariaDB [(none)]&gt; use zabbix;</span><br><span class="line">Reading table information <span class="keyword">for</span> completion of table and column names</span><br><span class="line">You can turn off this feature to get a quicker startup with -A</span><br><span class="line"></span><br><span class="line">Database changed</span><br><span class="line">MariaDB [zabbix]&gt; show tables;</span><br><span class="line">+----------------------------+</span><br><span class="line">| Tables_in_zabbix           |</span><br><span class="line">+----------------------------+</span><br><span class="line">| acknowledges               |</span><br><span class="line">| actions                              |</span><br><span class="line">| alerts                                 |</span><br><span class="line">|.......</span><br><span class="line">+----------------------------+</span><br><span class="line">140 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [zabbix]&gt; select userid,<span class="built_in">alias</span>,passwd from users;</span><br><span class="line">+--------+-------+----------------------------------+</span><br><span class="line">| userid | <span class="built_in">alias</span> | passwd                           |</span><br><span class="line">+--------+-------+----------------------------------+</span><br><span class="line">|      1 | Admin | fa062259ac376b119949f55de4f4c420|</span><br><span class="line">|      2 | guest   | fa062259ac376b119949f55de4f4c420|</span><br><span class="line">|      4 | abc       | fa062259ac376b119949f55de4f4c420|</span><br><span class="line">+--------+-------+----------------------------------+</span><br><span class="line">3 rows <span class="keyword">in</span> <span class="built_in">set</span> (0.00 sec)</span><br><span class="line"></span><br><span class="line">MariaDB [zabbix]&gt; </span><br></pre></td></tr></table></figure>
<h3 id="3-生成新的密码的md5信息"><a href="#3-生成新的密码的md5信息" class="headerlink" title="3.生成新的密码的md5信息"></a>3.生成新的密码的md5信息</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[abc@abc-pc ~]  <span class="built_in">echo</span> -n lucky | openssl md5</span><br><span class="line">(stdin)= 339a65e93299ad8d72c42b263aa23117</span><br><span class="line"></span><br><span class="line"><span class="comment"># luck为新的密码</span></span><br></pre></td></tr></table></figure>
<h3 id="4-update表数据，userid-1的这个用户"><a href="#4-update表数据，userid-1的这个用户" class="headerlink" title="4.update表数据，userid=1的这个用户"></a>4.update表数据，userid=1的这个用户</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">MariaDB [zabbix]&gt; update users <span class="built_in">set</span> passwd=<span class="string">&#x27;339a65e93299ad8d72c42b263aa23117&#x27;</span> <span class="built_in">where</span> userid = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">Query OK, 1 row affected (0.00 sec)</span><br><span class="line">Rows matched: 1  Changed: 1  Warnings: 0</span><br><span class="line"></span><br><span class="line">MariaDB [zabbix]&gt; </span><br></pre></td></tr></table></figure>
<h3 id="5-刷新重新加载权限表"><a href="#5-刷新重新加载权限表" class="headerlink" title="5.刷新重新加载权限表"></a>5.刷新重新加载权限表</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>华为GPON配置说明</title>
    <url>/2019/04/02/%E5%8D%8E%E4%B8%BAGPON%E9%85%8D%E7%BD%AE%E8%AF%B4%E6%98%8E/</url>
    <content><![CDATA[<h2 id="华为GPON配置说明"><a href="#华为GPON配置说明" class="headerlink" title="华为GPON配置说明"></a>华为GPON配置说明</h2><h2 id="名词说明"><a href="#名词说明" class="headerlink" title="名词说明"></a>名词说明</h2><ol>
<li>DBA模块：创建的dba模板时，给tcont引的，dba模板的作用是对整中ONU上行进行限速的。一个PON口上行带宽为1G，实际能用到的只有900M，所以要对ONU的上行进行合理分配。</li>
<li>Tcont：tcont是连接dba和gemport的通道，也就是说emport是通过和tcont联系，才把dba的作用引用过来的。</li>
<li>Gemport：gemport是OLT线程工作的最小单元，前面的dba，tcont都是最终给gemport用。</li>
<li>线路模板ont-lineprofile：ONU注册时要选择相应的线路模板，里面包含tcont，gem等信息。</li>
<li>DBA模板，线路模板，可以创建多个；一个线路模板中：tcont有八个（0－7），gem可以创建128个（0－127）；一个gem中可有映射8个：gem mapping 1 0；gem mapping 1 1；一直到gem mapping 1 7；但是一个线路模板中最多只能创建128条gem mapping，超出会报错。</li>
</ol>
<h2 id="数据规划"><a href="#数据规划" class="headerlink" title="数据规划"></a>数据规划</h2><p>以花都狮岭数据规划为例：</p>
<p>OLT：网管VLAN 22；</p>
<pre><code>IP：172.17.21.132；网关：172.17.21.129；语音VLAN 100；语音IP：172.16.0.11
</code></pre>
<p>ONU：所属OLT的PON串口0/18/3<br>    ONUID：1<br>    ONU网管IP：172.17.21.134；网关：172.17.21.129；<br>    语音VLAN 100；语音IP：172.16.0.21</p>
<p>数据配置</p>
<ol>
<li><p>数据配置</p>
<ul>
<li>创建DBA模板</li>
</ul>
</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">dba-profile add profile-id 102 profile-name DBA_2M type3 assure 2048 max 10240   //保证（assure）2M，最大10M</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">查看DBA模板信息</span><br><span class="line"></span><br><span class="line">display dba-profile all</span><br><span class="line"></span><br><span class="line">//以上命令，关于<span class="built_in">type</span>：</span><br><span class="line">type1                 Fixed bandwidth       //固定带宽</span><br><span class="line">type2                 Assured bandwidth             //保证带宽</span><br><span class="line">type3                 Assured bandwidth, Maximum bandwidth          //保证带宽，最大峰值带宽</span><br><span class="line">type4                 Maximum bandwidth         //最大带宽</span><br><span class="line">type5                 Fixed bandwidth, Assured bandwidth, Maximum bandwidth             //固定带宽，保证带宽，最大带宽</span><br><span class="line"></span><br><span class="line">dba-profile add profile-id 105 profile-name DBA_5M type3 assure 5210 max 20480</span><br><span class="line">dba-profile add profile-id 120 profile-name DBA_20M type3 assure 20480 max 102400</span><br><span class="line">dba-profile add profile-ed 150 profile-anem DBA_50M type3 assure 51200 max 512000</span><br><span class="line"></span><br><span class="line">创建线路模板</span><br><span class="line"></span><br><span class="line">创建线路模板101：供ONU ID 1到5 用；由于一个线路模板中gem mapping最多只能创建128条；故一个线路模板不要被过多的ONU调用。</span><br><span class="line"></span><br><span class="line">ont-lineprofile gpon profile-id 101 profile-name MA561-_1_5</span><br><span class="line"></span><br><span class="line">查看线路信息：</span><br><span class="line"></span><br><span class="line">display ont-lineprofile gpon all</span><br><span class="line"></span><br><span class="line">查看具体线路信息</span><br><span class="line"></span><br><span class="line">BJ-BaiGongShi-JingQu-MA5608T(config)<span class="comment">#display ont-lineprofile gpon profile-id 122 </span></span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">Profile-ID          :122</span><br><span class="line">Profile-name        :PWGB_10G</span><br><span class="line">Access-type         :GPON</span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">FEC upstream switch :Disable </span><br><span class="line">OMCC encrypt switch :Off</span><br><span class="line">Qos mode            :GEM-CAR</span><br><span class="line">Mapping mode        :VLAN</span><br><span class="line">TR069 management    :Disable</span><br><span class="line">TR069 IP index      :0</span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">&lt;T-CONT   0&gt;          DBA Profile-ID:1</span><br><span class="line">&lt;T-CONT   1&gt;          DBA Profile-ID:90</span><br><span class="line">&lt;Gem Index 1&gt;</span><br><span class="line">--------------------------------------------------------------------</span><br><span class="line">|Serv-Type:ETH |Encrypt:off |Cascade:off |GEM-CAR:6            |</span><br><span class="line">|Upstream-priority-queue:-  |Downstream-priority-queue:-       |</span><br><span class="line">--------------------------------------------------------------------</span><br><span class="line">Mapping VLAN  Priority Port    Port  Bundle  Flow  Transparent</span><br><span class="line">index                  <span class="built_in">type</span>    ID    ID      CAR</span><br><span class="line">--------------------------------------------------------------------</span><br><span class="line">0       30    -        -       -     -       -     -</span><br><span class="line">1       10    -        -       -     -       -     -</span><br><span class="line">--------------------------------------------------------------------</span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">Notes: Run the display traffic table ip <span class="built_in">command</span> to query </span><br><span class="line">     traffic table configuration</span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line">Binding <span class="built_in">times</span>       :0</span><br><span class="line">-----------------------------------------------------------------------------</span><br><span class="line"></span><br><span class="line">线路模板的编号为101，模板名称MA5610_1_5</span><br><span class="line"></span><br><span class="line">tcont 1 dba-profile-id 120</span><br><span class="line">//tcont1绑定120的DBA模板</span><br><span class="line">tcont 2 dba-profile-id 105</span><br><span class="line">//tcont2绑定105的DBA模板</span><br><span class="line">tcont 3 dba-profile-id 102</span><br><span class="line">//tcont3绑定102的DBA模板</span><br><span class="line"></span><br><span class="line">gem add 1 eth1 tcont 1</span><br><span class="line">//gem 1 绑定tcont1</span><br><span class="line">gem add 2 eth2 tcont 2</span><br><span class="line">//gem 2 绑定tont1</span><br><span class="line">gem add 126 eth tcont 2</span><br><span class="line">//gem 126 绑定 tcont2</span><br><span class="line">gem add 127 eth tcont 3 </span><br><span class="line">//gem 126 绑定 tcont3</span><br><span class="line">gem mapping 126 0 vlan 100</span><br><span class="line">//gem 126 与 vlan 100 映射</span><br><span class="line">gem mapping 127 0 vlan 22</span><br><span class="line">//gem 的 127 与 vlan 22 映射</span><br><span class="line"></span><br><span class="line">commit</span><br><span class="line">//提交，保存线路模板</span><br><span class="line"></span><br><span class="line">quit</span><br><span class="line"></span><br><span class="line">创建线路模板102：供ONU ID 6到10 用</span><br><span class="line">ont-lineprofile gpon profile-id 102 profile-nanme MA5610_6_10</span><br><span class="line"></span><br><span class="line">tcont 1 dba-profile-id 120</span><br><span class="line">tcont 2 dba-profile-id 105</span><br><span class="line">tcont 3 dba-profile-id 102</span><br><span class="line">gem add 1 eth tcont 1</span><br><span class="line">gem add 2 eth tcont 1</span><br><span class="line">gem add 126 eth tcont 2</span><br><span class="line">gem add 127 eth tcont 3</span><br><span class="line">gem mapping 126 0 vlan 100</span><br><span class="line">gem mapping 127 0 vlan 22</span><br><span class="line">commit</span><br><span class="line">quit</span><br><span class="line"></span><br><span class="line">创建线路模板103：供 ONU ID 11到15 用</span><br><span class="line">ont-lineprofile gpon profile-id 103 profile-name MA5610_11_15</span><br><span class="line">tcont 1 dba-profile-id 120</span><br><span class="line">tcont 2 dba-profile-id 105</span><br><span class="line">tcont 3 dba-profile-id 102</span><br><span class="line"></span><br><span class="line">gem add 1 eth tcont 1</span><br><span class="line">gem add 2 eth tcont 1</span><br><span class="line">gem add 126 eth tcont 2</span><br><span class="line">gem add 127 eth tcont 3</span><br><span class="line">gem mapping 126 0 vlan 100</span><br><span class="line">gem mapping 127 0 vlan 22</span><br><span class="line">commit</span><br><span class="line">quit</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">创建线路模板104：供ONU ID 16到20 用</span><br><span class="line">ont-line-profile gpen profile-id 104 profile-name MA5610_16_20</span><br><span class="line">tcont 1 dba-profile-id 120</span><br><span class="line">tcont 2 dba-profile-id 105</span><br><span class="line">tcont 3 dba-profile-id 102</span><br><span class="line">gem add 1 eth tcont 1</span><br><span class="line">gem add 2 eth tcont 1</span><br><span class="line">gem add 126 eth tcont 2</span><br><span class="line">gem add 127 eth tcont 3</span><br><span class="line">gem mapping 126 0 vlan 100</span><br><span class="line">gem mapping 127 0 vlan 22</span><br><span class="line">commit</span><br><span class="line">quit</span><br></pre></td></tr></table></figure>
<ul>
<li>注册ONU</li>
</ul>
<p>进入0/18槽口的PON板</p>
<p>intface gpon 0/18</p>
<p>ont add 3 1 sn-auth 48575443FFE2329A snap ont-lineprofile-id 101</p>
<p>给ONU注册，第三个PON口，ONU编号1，SN号：48575443FFE2329A</p>
<p>ont ipconfig 3 1 static ip-address 172.17.21.134 mask 255.255.255.128 gateway 172.17.21.129 vlan 22</p>
<p>给刚刚注册的ONU，下发管理IP地址，网关掩码，ONU上会自动生成一条缺少路由。</p>
<ul>
<li>OLT上透传ONU上来的VLAN</li>
</ul>
<p>service-port vlan 22 gpon 1/18/3 ont 1 gemport 127 multi-service user-vlan 22</p>
<p>//给ONU透传网管VLAN22</p>
<p>service-port vlan 100 gpon 0/18/3 ont 1 gemport 126 multi-service user-vlan 100</p>
<p>//ONU透传语音VLAN100</p>
<p>ONU上语音数据配置</p>
<p>telnet 172.17.21.134 登入到ONU上配置数据</p>
<p>board confim 0</p>
<p>//单板确认</p>
<p>fax-modem parameters rfc2198-start-mode disable Rfc21985SmartStartup</p>
<p>//关闭2198自启动功能</p>
<p>vlan 100 smart</p>
<p>//创建语音VLAN 100</p>
<p>port vlan 100 0/0 1</p>
<p>//透传VLAN 100</p>
<p>interface vlanif 100</p>
<p>ip address 172.16.0.23 255.255.254.0</p>
<p>//配置语音地址</p>
<p>quit</p>
<pre><code>
</code></pre>
]]></content>
      <tags>
        <tag>network</tag>
      </tags>
  </entry>
  <entry>
    <title>华为交换机清除console密码</title>
    <url>/2019/04/11/%E5%8D%8E%E4%B8%BA%E4%BA%A4%E6%8D%A2%E6%9C%BA%E6%B8%85%E9%99%A4console%E5%AF%86%E7%A0%81/</url>
    <content><![CDATA[<h2 id="华为交换机清除console密码"><a href="#华为交换机清除console密码" class="headerlink" title="华为交换机清除console密码"></a>华为交换机清除console密码</h2><p>昨天下午在准备查看一台交换机配置的时候，发现原来给的登录信息已经不正确了。就想着用console登录试试，发现console登录也设置了用户名和密码，于是只能想到通过启动菜单来尝试清除密码了。</p>
<p>操作如下：</p>
<h2 id="启动菜单默认密码"><a href="#启动菜单默认密码" class="headerlink" title="启动菜单默认密码"></a>启动菜单默认密码</h2><ul>
<li>Console/telnet登录(框式/盒式)</li>
</ul>
<table>
<thead>
<tr>
<th>版本</th>
<th>缺省用户名</th>
<th>缺省密码</th>
<th>缺省级别</th>
</tr>
</thead>
<tbody><tr>
<td>V1R3C00</td>
<td>N/A</td>
<td>N/A</td>
<td>N/A</td>
</tr>
<tr>
<td>V1R5C01</td>
<td>N/A</td>
<td>N/A</td>
<td>N/A</td>
</tr>
<tr>
<td>V1R6C00－V1R6C05</td>
<td>N/A</td>
<td>N/A</td>
<td>N/A</td>
</tr>
<tr>
<td>V2R2C00－V2R6C00</td>
<td>N/A</td>
<td>N/A</td>
<td>N/A</td>
</tr>
</tbody></table>
<ul>
<li>Web登录(框式/盒式)</li>
</ul>
<table>
<thead>
<tr>
<th>版本</th>
<th>缺省用户名</th>
<th>缺省密码</th>
<th>缺省级别</th>
</tr>
</thead>
<tbody><tr>
<td>V1R3C00</td>
<td>admin</td>
<td>admin</td>
<td>0</td>
</tr>
<tr>
<td>V1R5C01</td>
<td>admin</td>
<td>admin</td>
<td>0</td>
</tr>
<tr>
<td>V1R6C00</td>
<td>admin</td>
<td>admin</td>
<td>0</td>
</tr>
<tr>
<td>V1R6C05</td>
<td>admin</td>
<td><a href="mailto:&#97;&#100;&#x6d;&#105;&#x6e;&#64;&#x68;&#x75;&#97;&#119;&#x65;&#x69;&#46;&#99;&#111;&#109;">&#97;&#100;&#x6d;&#105;&#x6e;&#64;&#x68;&#x75;&#97;&#119;&#x65;&#x69;&#46;&#99;&#111;&#109;</a></td>
<td>0</td>
</tr>
<tr>
<td>V2R1C00</td>
<td>admin</td>
<td>admin</td>
<td>0</td>
</tr>
<tr>
<td>V2R3C00-V2R6C00</td>
<td>admin</td>
<td><a href="mailto:&#x61;&#x64;&#109;&#x69;&#110;&#x40;&#x68;&#117;&#97;&#x77;&#x65;&#x69;&#x2e;&#x63;&#x6f;&#109;">&#x61;&#x64;&#109;&#x69;&#110;&#x40;&#x68;&#117;&#97;&#x77;&#x65;&#x69;&#x2e;&#x63;&#x6f;&#109;</a></td>
<td>0</td>
</tr>
</tbody></table>
<ul>
<li>BootROM(框式/盒式)</li>
</ul>
<table>
<thead>
<tr>
<th>版本</th>
<th>缺省用户名</th>
<th>缺省密码</th>
<th>缺省级别</th>
</tr>
</thead>
<tbody><tr>
<td>V1R3C00</td>
<td>N/A</td>
<td>9300</td>
<td>无</td>
</tr>
<tr>
<td>V1R5C01</td>
<td>N/A</td>
<td>huawei</td>
<td>无</td>
</tr>
<tr>
<td>V1R6C00</td>
<td>N/A</td>
<td>9300(框式)</td>
<td>无</td>
</tr>
<tr>
<td>V1R6C00</td>
<td>N/A</td>
<td>huawei(盒式)</td>
<td>无</td>
</tr>
</tbody></table>
<h2 id="恢复console密码"><a href="#恢复console密码" class="headerlink" title="恢复console密码"></a>恢复console密码</h2><ol>
<li><p>设备断电</p>
</li>
<li><p>重新加电</p>
</li>
<li><p>电脑连CONSOLE口</p>
</li>
<li><p>按CTRL＋B键加载BOOT MENU<br>加载图如下：</p>
<p><img src="https://blog.ywmy.xyz/network/huawei_boot_menu.png" alt="huawei_boot_memu"></p>
</li>
<li><p>清除console密码</p>
<p> 加载图如下：</p>
<p> <img src="https://blog.ywmy.xyz/network/clean_password_for_console_user.png" alt="clean_passwrod_for_console_user"></p>
</li>
<li><p>恢复默认启动项</p>
<p>加载图如下：</p>
<p><img src="https://blog.ywmy.xyz/network/boot_with_default_mode.png" alt="boot_with_default_mode"></p>
</li>
</ol>
]]></content>
      <tags>
        <tag>network</tag>
      </tags>
  </entry>
  <entry>
    <title>华为获取诊断信息文件</title>
    <url>/2019/03/29/%E5%8D%8E%E4%B8%BA%E8%8E%B7%E5%8F%96%E8%AF%8A%E6%96%AD%E4%BF%A1%E6%81%AF%E6%96%87%E4%BB%B6/</url>
    <content><![CDATA[<h2 id="华为交换机获取诊断信息"><a href="#华为交换机获取诊断信息" class="headerlink" title="华为交换机获取诊断信息"></a>华为交换机获取诊断信息</h2><p>获取设备诊断信息，用于判断设备故障。</p>
<h2 id="操作"><a href="#操作" class="headerlink" title="操作"></a>操作</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;HEXIN&gt;display diagnostic-information dia-info.txt</span><br><span class="line">Now saving the diagnostic information to the device</span><br><span class="line">34%/        //输出进度</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>network</tag>
      </tags>
  </entry>
  <entry>
    <title>华为设备安全登录示例</title>
    <url>/2021/01/29/%E5%8D%8E%E4%B8%BA%E8%AE%BE%E5%A4%87%E5%AE%89%E5%85%A8%E7%99%BB%E5%BD%95%E7%A4%BA%E4%BE%8B/</url>
    <content><![CDATA[<h2 id="设备登录安全配置示例"><a href="#设备登录安全配置示例" class="headerlink" title="设备登录安全配置示例"></a>设备登录安全配置示例</h2><p>登录设备的两种方式，本地console口和远程stelnet。</p>
<h3 id="本地console口登录安全配置示例"><a href="#本地console口登录安全配置示例" class="headerlink" title="本地console口登录安全配置示例"></a>本地console口登录安全配置示例</h3><p>通过Console口（也称串口）登录交换机是登录设备的最基本方式，也是其他登录方式（如Telnet和STelnet）的基础。一旦攻击者接触到Console口后，交换机将暴露给攻击者，交换机的安全无法保障。通过配置Console口用户界面的认证方式、用户的认证信息和用户级别，可以保证Console登录的安全性。</p>
<pre><code>**部署注意事项**

- 如果用户通过console口登录设备再进行console用户界面配置，所配置的属性需要退出当前登录，再次通过console口登录后才会生效。
- 为充分保证设备安全，首次登录设备时，必须按照要求修改缺省密码，并定期修改密码。
</code></pre>
<h4 id="步骤1"><a href="#步骤1" class="headerlink" title="步骤1"></a>步骤1</h4><pre><code>配置console用户界面的认证方式。
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;HUAWEI&gt; system-view</span><br><span class="line">[HUAWEI] user-interface console 0 //进入Console用户界面</span><br><span class="line">[HUAWEI-console0] authentication-mode aaa //配置认证方式为AAA，默认情况下即AAA</span><br><span class="line">[HUAWEI-console0] quit</span><br></pre></td></tr></table></figure>
</code></pre>
<h4 id="步骤2"><a href="#步骤2" class="headerlink" title="步骤2"></a>步骤2</h4><pre><code>配置console用户认证信息及用户级别
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">    [HUAWEI] aaa</span><br><span class="line">    [HUAWEI-aaa] local-user abcd password irreversible-cipher abcd@123 //创建本地用户abcd，登录密码为abcd@123</span><br><span class="line">    [HUAWEI-aaa] local-user abcd privilege level 15 //配置本地用户abcd的级别为15</span><br><span class="line">    Warning: This operation may ffcì online users, are you sure to change the user privilege level ?[Y/N]y</span><br><span class="line">    [HUAWEI-aaa] local-user abcd service-type terminal //配置本地用户abcd的接入类型为终端用</span><br><span class="line">户，即Console用户</span><br></pre></td></tr></table></figure>
</code></pre>
<h4 id="步骤3"><a href="#步骤3" class="headerlink" title="步骤3"></a>步骤3</h4><pre><code>通过console口连接设备，提示用户输入用户名密码，实现console口登录。（配置示例用户为abcd，密码为abcd@123）
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">Login authentication</span><br><span class="line">Username:abcd</span><br><span class="line">Password: </span><br><span class="line">&lt;HUAWEI&gt;</span><br></pre></td></tr></table></figure>
**结束**
</code></pre>
<h3 id="远程stelnet登录安全配置示例"><a href="#远程stelnet登录安全配置示例" class="headerlink" title="远程stelnet登录安全配置示例"></a>远程stelnet登录安全配置示例</h3><p>Telnet和STelnet是远程登录交换机两种方式，Telnet协议存在安全风险，而STelnet则基于SSH协议，实现了在不安全网络上提供安全的远程登录，提供安全信息保障和强大认证功能，保护交换机不受IP欺骗等击。</p>
<pre><code>**部署注意事项**

- 登录设备前，需要确保终端PC和设备之间路由可达。
- 使用STelnet V1协议存在安全风险，建议使用STelnet V2登录设备。
- 配置STelnet登录交换机前，用户终端应该已安装SSH服务器登录软件。如putty。
- 通过STelnet登录设备需配置用户界面支持的协议是SSH，必须设置VTY用户界面认证方式为AAA认证。
- 为充分保证设备安全，请定期修改密码。
</code></pre>
<h4 id="step-1"><a href="#step-1" class="headerlink" title="step 1"></a>step 1</h4><pre><code>配置VTY用户界面的支持协议类型、认证方式和用户级别。
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[HUAWEI] user-interface vty 0 4</span><br><span class="line">[HUAWEI-ui-vty0-4] authentication-mode aaa //配置VTY用户界面认证方式为AAA认证</span><br><span class="line">[HUAWEI-ui-vty0-4] protocol inbound ssh //配置VTY用户界面支持的协议为SSH，默认情况下即SSH</span><br><span class="line">[HUAWEI-ui-vty0-4] user privilege level 15 //配置VTY用户界面的级别为15</span><br><span class="line">[HUAWEI-ui-vty0-4] quit</span><br></pre></td></tr></table></figure>
</code></pre>
<h4 id="step-2"><a href="#step-2" class="headerlink" title="step 2"></a>step 2</h4><pre><code>开启STelnet服务器功能并创建SSH用户。
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[HUAWEI] stelnet server <span class="built_in">enable</span> //使能设备的STelnet服务器功能</span><br><span class="line">[HUAWEI] ssh user abcd //创建SSH用户abcd</span><br><span class="line">[HUAWEI] ssh user abcd service-type stelnet //配置SSH用户的服务方式为STelnet</span><br></pre></td></tr></table></figure>
</code></pre>
<h4 id="step-3"><a href="#step-3" class="headerlink" title="step 3"></a>step 3</h4><pre><code>配置SSH用户认证方式为Password。使用Password认证方式时，需要在AAA视图下配置与SSH用户同名的本地用户。
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[HUAWEI] ssh user abcd authentication-type password //配置SSH用户认证方式为password</span><br><span class="line">[HUAWEI] aaa</span><br><span class="line">[HUAWEI-aaa] local-user abcd password irreversible-cipher abcd@123 //创建与SSH用户同名的本地用户和对应的登录密码</span><br><span class="line">[HUAWEI-aaa] local-user abcd privilege level 15 //配置本地用户级别为15</span><br><span class="line">[HUAWEI-aaa] local-user abcd service-type ssh //配置本地用户的服务方式为SSH</span><br><span class="line">[HUAWEI-aaa] quit</span><br></pre></td></tr></table></figure>
# 配置SSH用户认证方式为RSA、DSA或ECC。（以ECC认证方式为例，RSA、DSA认证方式步骤类似）使用RSA、DSA或ECC认证方式时，需要在SSH服务器上输入SSH客户端生成的密钥中的公钥部分。这样当客户端登录服务器时，自己的私钥如果与输入的公钥匹配成功，则认证通过。客户端公钥的生成请参见相应的SSH客户端软件的帮助文档。
[HUAWEI] ssh user abcd authentication-type ecc //配置SSH用户认证方式为ecc
[HUAWEI] ecc peer-public-key key01 encoding-type pem //配置ECC公共密钥编码格式，并进入ECC公共密钥视图,key01为公共密钥名称Enter &quot;ECC public key&quot; view, return system view with &quot;peer-public-key end&quot;.
[HUAWEI-ecc-public-key] public-key-code begin //进入公共密钥编辑视图Enter &quot;ECC key code&quot; view, return last view with &quot;public-key-code end&quot;.
[HUAWEI-dsa-key-code] 308188 //拷贝复制客户端的公钥，为十六进制字符串
[HUAWEI-dsa-key-code] 028180
[HUAWEI-dsa-key-code] B21315DD 859AD7E4 A6D0D9B8 121F23F0 006BB1BB
[HUAWEI-dsa-key-code] A443130F 7CDB95D8 4A4AE2F3 D94A73D7 36FDFD5F
[HUAWEI-dsa-key-code] 411B8B73 3CDD494A 236F35AB 9BBFE19A 7336150B
[HUAWEI-dsa-key-code] 40A35DE6 2C6A82D7 5C5F2C36 67FBC275 2DF7E4C5
[HUAWEI-dsa-key-code] 1987178B 8C364D57 DD0AA24A A0C2F87F 474C7931
[HUAWEI-ecc-key-code] A9F7E8FE E0D5A1B5 092F7112 660BD153 7FB7D5B2
[HUAWEI-ecc-key-code] 171896FB 1FFC38CD
[HUAWEI-ecc-key-code] 0203
[HUAWEI-ecc-key-code] 010001
[HUAWEI-ecc-key-code] public-key-code end //退回到公共密钥视图
[HUAWEI-ecc-public-key] peer-public-key end //退回到系统视图
[HUAWEI] ssh user abcd assign ecc-key key01 //为用户abcd分配一个已经存在的公钥key01
</code></pre>
<h4 id="step-4"><a href="#step-4" class="headerlink" title="step 4"></a>step 4</h4><pre><code>在服务器端生成本地密钥对。
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">&lt;HUAWEI&gt; system-view</span><br><span class="line">[HUAWEI] ecc local-key-pair create</span><br><span class="line">Info: The key name will be: HUAWEI_Host_ECC.</span><br><span class="line">Info: The key modulus can be any one of the following: 256, 384, 521.</span><br><span class="line">Info: If the key modulus is greater than 512, it may take a few minutes.</span><br><span class="line">Please input the modulus [default=521]:521</span><br><span class="line">Info: Generating keys..........</span><br><span class="line">Info: Succeeded <span class="keyword">in</span> creating the ECC host keys.</span><br></pre></td></tr></table></figure>
</code></pre>
<h4 id="step-5"><a href="#step-5" class="headerlink" title="step 5"></a>step 5</h4><pre><code>PC端用Password认证方式连接SSH服务器。通过PuTTY软件登录设备，输入设备的IP地址，选择协议类型为SSH。
```bash
login as: abcd
Sent username &quot;abcd&quot;
abcd@10.10.10.20&#39;s password:
Info: The max number of VTY users is 8, and the number of current VTY users on line is 5. The current login time is 2018-12-22 09:35:28+00:00.
&lt;HUAWEI&gt;

**结束**
</code></pre>
]]></content>
      <tags>
        <tag>network</tag>
      </tags>
  </entry>
  <entry>
    <title>小新700 触摸板双击右键</title>
    <url>/2019/05/30/%E5%B0%8F%E6%96%B0700-%E8%A7%A6%E6%91%B8%E6%9D%BF%E5%8F%8C%E5%87%BB%E5%8F%B3%E9%94%AE/</url>
    <content><![CDATA[<h2 id="联想小新700触摸板双击右键设置"><a href="#联想小新700触摸板双击右键设置" class="headerlink" title="联想小新700触摸板双击右键设置"></a>联想小新700触摸板双击右键设置</h2><p>之前买的联想小新电脑，在设置触摸板时，双击右键的设置是不生效的。在windows下的触摸板设置，如单指、双指、三指、四指操作，使用习惯后，操作起来也是非常高效和舒服的。不过小新的这个synaptics装置，在安装最新驱动后，双击右键依然是不起作用的。在使用过程中就比较尴尬。</p>
<h3 id="操作方法"><a href="#操作方法" class="headerlink" title="操作方法"></a>操作方法</h3><p>打开注册表编辑器，修改注册表值，路径如下：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">WIN＋R 运行 regedit，展开路径：</span><br><span class="line">计算机\HKEY_CURRENT_USER\Software\Synaptics\SynTP\</span><br></pre></td></tr></table></figure>
<p>展开路径，找到TouchPadPS2TM开头的项，如自己的小新为TouchPadPS2TM3105，点击该项，右边的键值，找到2FingerTapAction，双击将默认数据0修改为2。确定修改，重启系统，双击右键设置生效。操作结束。记录备用。</p>
]]></content>
      <tags>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>更改windows默认3389端口</title>
    <url>/2019/03/29/%E6%9B%B4%E6%94%B9windows%E9%BB%98%E8%AE%A43389%E7%AB%AF%E5%8F%A3/</url>
    <content><![CDATA[<h2 id="windows远程端口更改"><a href="#windows远程端口更改" class="headerlink" title="windows远程端口更改"></a>windows远程端口更改</h2><p>windows默认远程协议RDP端口为3389，更改默认端口操作如下：</p>
<h2 id="通过注册表更改默认RDP端口"><a href="#通过注册表更改默认RDP端口" class="headerlink" title="通过注册表更改默认RDP端口"></a>通过注册表更改默认RDP端口</h2><p>WIN+R运行程序regedit。注册表编辑器。</p>
<p>HKEY_LOCAL_MACHINE -&gt; SYSTEM -&gt; CurrentControlSet -&gt; Control -&gt; Terminal Server -&gt; Wds -&gt; rdpwd -&gt; Tds -tcp -&gt; PortNumber -&gt; 基数用十进制方式显示 -&gt; 更改为想要的端口号</p>
<p>HKEY_LOCAL_MACHINE -&gt; SYSTEM -&gt; CurrentControlSet -&gt; Control -&gt; Terminal Server -&gt; WinStations -&gt; RDP-Tcp -&gt; PortNumber -&gt; 基数用十进制方式显示 -&gt; 更改为想要的端口号</p>
<p>重启系统后，使用新的端口号进行远程连接。</p>
]]></content>
      <tags>
        <tag>windows</tag>
      </tags>
  </entry>
  <entry>
    <title>终端录制与回放</title>
    <url>/2019/07/28/%E7%BB%88%E7%AB%AF%E5%BD%95%E5%88%B6%E4%B8%8E%E5%9B%9E%E6%94%BE/</url>
    <content><![CDATA[<h2 id="linux-shell-终端的录制与回放"><a href="#linux-shell-终端的录制与回放" class="headerlink" title="linux shell 终端的录制与回放"></a>linux shell 终端的录制与回放</h2><p>最近有一个需求，在给一个H3C路由器排除问题的时候，启用debug模式，debug模式下，输出到屏幕的调试信息没有办法导出到文件，只能想办法试试看能不能从终端会话录制上实现。</p>
<h3 id="终端的会话操作录制"><a href="#终端的会话操作录制" class="headerlink" title="终端的会话操作录制"></a>终端的会话操作录制</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">script -t 2&gt; timing.log -a output.session</span><br><span class="line"><span class="built_in">type</span> commands;</span><br><span class="line"></span><br><span class="line">......</span><br><span class="line">......</span><br><span class="line"><span class="built_in">exit</span></span><br></pre></td></tr></table></figure>
<p>exit退出录制。</p>
<p>两个配置文件被当做script命令的参数。这两个文件可以随便命名，这里用timing.log和output.session。其中timing.log用于存储时序信息，描述每一个指令在何时运行；output.session用于存储命令信息输出。-t选项用于将时序数据导入stderr。2&gt;用于stderr重定向到timing.log。</p>
<h3 id="录制回放"><a href="#录制回放" class="headerlink" title="录制回放"></a>录制回放</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">scriptreplay timing.log output.session</span><br></pre></td></tr></table></figure>
<p>经验证，录制还是可以的。整个屏幕输出的内容存储在输出的output.session文件中，以文本打开，就可以直接查看之前录制回显的内容了。也可以方便后期回放温故。</p>
<h3 id="script广播会话"><a href="#script广播会话" class="headerlink" title="script广播会话"></a>script广播会话</h3><p>以两个终端为例：</p>
<h4 id="终端1操作"><a href="#终端1操作" class="headerlink" title="终端1操作"></a>终端1操作</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">mkfifo scriptfifo</span><br></pre></td></tr></table></figure>
<h4 id="终端2操作"><a href="#终端2操作" class="headerlink" title="终端2操作"></a>终端2操作</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat  scriptfifo</span><br></pre></td></tr></table></figure>
<h4 id="终端1操作-1"><a href="#终端1操作-1" class="headerlink" title="终端1操作"></a>终端1操作</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">script -f scritpfifo</span><br><span class="line">commands</span><br><span class="line"></span><br><span class="line">......</span><br></pre></td></tr></table></figure>
<p>exit退出。</p>
<p>此时，终端2上同步回显终端1上的操作内容。</p>
<p>屏幕录制操作结束。</p>
<p>补充一个H3C 屏幕回显debug信息的操作步骤，全程用户模式下操作：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">debugging nat packet   //例如调试nat包信息</span><br><span class="line">terminal debugging   //打开调试信息的屏幕输出开关</span><br><span class="line">display debugging    //查看启用了哪些调试信息</span><br><span class="line">termainal monitor    //开启控制台对系统信息的监视功能</span><br></pre></td></tr></table></figure>
<p>汇总结束，通过录制终端会话，来排查设备的debugging信息。设备debugging是比较消耗资源的一件事情，输出的信息也非常多，输出了非专业人员排查问题也是比较困难的。一般这个也就用于提交设备厂商售后分析了。今日份结束。</p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>编译安装zabbix agent</title>
    <url>/2020/03/21/%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85zabbix-agent/</url>
    <content><![CDATA[<h2 id="编译安装zabbix-agent"><a href="#编译安装zabbix-agent" class="headerlink" title="编译安装zabbix-agent"></a>编译安装zabbix-agent</h2><p>前期依赖程序安装，下载zabbix相对应的软件包。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">yum update</span><br><span class="line">yum install epel-release gcc pcre-devel net-snmp-devel libevent-devel openssl-devel libxml2 libssh2-devel</span><br></pre></td></tr></table></figure>
<p>下载源代码归档<br>下载地址<a href="https://www.zabbix.com/download_agents">zabbix download page</a>，下载，解压源码.</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">tar -zxvf zabbix-3.4.15.tar.gz</span><br></pre></td></tr></table></figure>
<p>创建用户</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">groupadd --system zabbix</span><br><span class="line">useradd --system -g zabbix -d /usr/lib/zabbix -s /sbin/nologin -C <span class="string">&quot;Zabbix Monitoring System&quot;</span>  zabbix</span><br></pre></td></tr></table></figure>
<p>编译安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./configure --enable-agent  --prefix=/usr/<span class="built_in">local</span>/zabbix</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>
<p>更改配置文件</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cat /usr/<span class="built_in">local</span>/zabbix/etc/zabbix_agentd.conf | grep -Ev <span class="string">&#x27;^#|^$&#x27;</span></span><br><span class="line">PidFile=/tmp/zabbix_agentd.pid</span><br><span class="line">LogFile=/tmp/zabbix_agentd.log</span><br><span class="line">Server=zabbix_server_or_proxy</span><br><span class="line">ServerActive=zabbix_server_or_proxy</span><br><span class="line">Hostname=your_computer_hostname</span><br></pre></td></tr></table></figure>
<p>添加开机启动项</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">[Unit]</span><br><span class="line">Description=Zabbix Agent</span><br><span class="line">After=syslog.target</span><br><span class="line">After=network.target</span><br><span class="line"></span><br><span class="line">[Service]</span><br><span class="line">User=zabbix</span><br><span class="line">Group=zabbix</span><br><span class="line">Environment=<span class="string">&quot;CONFFILE=/usr/local/zabbix/etc/zabbix_agentd.conf&quot;</span></span><br><span class="line">Type=forking</span><br><span class="line">Restart=on-failure</span><br><span class="line">PIDFile=/tmp/zabbix_agentd.pid</span><br><span class="line">KillMode=control-group</span><br><span class="line">ExecStart=/usr/<span class="built_in">local</span>/zabbix/sbin/zabbix_agentd -c <span class="variable">$CONFFILE</span></span><br><span class="line">ExecStop=/bin/<span class="built_in">kill</span> -SIGTERM <span class="variable">$MAINPID</span></span><br><span class="line">RestartSec=10s</span><br><span class="line">TimeoutSec=0</span><br><span class="line"></span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br></pre></td></tr></table></figure>
<p>防火墙配置</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent --add-port=10050/tcp</span><br><span class="line">firelwall-cmd --permanent --add-port=10051/tcp</span><br><span class="line">firewall-cmd --complete-reload</span><br></pre></td></tr></table></figure>
<p>最后启动服务就完事了</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">systemctl start zabbix-agent</span><br><span class="line">systemctl <span class="built_in">enable</span> zabbix-agent</span><br></pre></td></tr></table></figure>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>记一些ubuntu 18.04的小毛病</title>
    <url>/2019/04/13/%E8%AE%B0%E4%B8%80%E4%BA%9Bubuntu-18-04%E7%9A%84%E5%B0%8F%E6%AF%9B%E7%97%85/</url>
    <content><![CDATA[<h2 id="Ubuntu-18-04个人使用问题汇总"><a href="#Ubuntu-18-04个人使用问题汇总" class="headerlink" title="Ubuntu 18.04个人使用问题汇总"></a>Ubuntu 18.04个人使用问题汇总</h2><p>使用桌面版的ubuntu，总会有一些小问题，也经常会疑惑，好好的用着，怎么突然就不行了呢。本着能折腾就折腾的原则，记录一下，目前遇到的，比较深刻的小问题。</p>
<h3 id="启动后无法进入X-org环境"><a href="#启动后无法进入X-org环境" class="headerlink" title="启动后无法进入X.org环境"></a>启动后无法进入X.org环境</h3><p>在一次更新操作后，重启了，选择X.org进入后，只有桌面壁纸，鼠标键盘无反应。</p>
<p>但是进入Wayland环境没有问题，正常操作。</p>
<p>记录以下操作：</p>
<p>因为也确实不清楚原因。大概能猜到和桌面环境有关系。</p>
<p>操作尝试：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt install ubuntu-desktop</span><br><span class="line">sudo apt install xserver-xong-input-all</span><br><span class="line">sudo apt install input-utils</span><br></pre></td></tr></table></figure>
<p>结束后，重启，进入X.org桌面，好了。正常操作了。</p>
<h3 id="QT5程序缩放不正常"><a href="#QT5程序缩放不正常" class="headerlink" title="QT5程序缩放不正常"></a>QT5程序缩放不正常</h3><p>同样在一次电脑启动后，发现一个常用的程序，QT5界面本来运行时，正常的图标，变小了，窗口变大了，字体变模糊了，而且，窗口调整还不正常。</p>
<p>试了一下另外一个QT5写的程序，stacer。打开发现，比例倒是正常的，缩放比正常大了两倍左右，字体显示倒是正常。</p>
<p>还有一个也是天天用的。网易云音乐，打开后，也是比正常缩放大了两倍左右，字体也模糊。系统程序都是正常的，想了一下，应该是QT5程序的问题。</p>
<p>百度关键字，QT5 缩放，还真有和QT 5相关各种缩放问题，再想到是不是和屏幕分辨训练场有关，自己屏幕是1080P的，检索关键字：QT5 HiDPI scaling gonme 3，比如这篇<a href="https://unix.stackexchange.com/questions/433385/scaling-hidpi-issue-for-qt5-applications-under-gnome">请戳</a>。还有一篇，也是写到高分辨率下的缩放问题，据说是一个多年没人管的BUG，链接<a href="https://my.oschina.net/flywuya/blog/1797527">请戳</a>。</p>
<p>好了，这次明白了，思路就是启动程序时手动调整绽放比例，或者是调字体DPI。</p>
<p>最后给个直接改启动参数的方法。效果是出来了，也算是正常使用了。</p>
<p>参考网易云音乐的启动参数，字体显示正常，缩放不正常的：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vim /usr/share/applications/netease-cloud-music.desktop</span><br><span class="line"></span><br><span class="line">[Desktop Entry]</span><br><span class="line">Version=1.0</span><br><span class="line">Type=Application</span><br><span class="line">Name=NetEase Cloud Music</span><br><span class="line">Name[zh_CN]=网易云音乐</span><br><span class="line">Name[zh_TW]=網易雲音樂</span><br><span class="line">Comment=NetEase Cloud Music</span><br><span class="line">Comment[zh_CN]=网易云音乐</span><br><span class="line">Comment[zh_TW]=網易雲音樂</span><br><span class="line">Icon=netease-cloud-music</span><br><span class="line">Exec=sh -c <span class="string">&quot;unset SESSION_MANAGER &amp;&amp; netease-cloud-music %U&quot;</span></span><br><span class="line">Categories=AudioVideo;Player;</span><br><span class="line">Terminal=<span class="literal">false</span></span><br><span class="line">StartupNotify=<span class="literal">true</span></span><br><span class="line">StartupWMClass=netease-cloud-music</span><br><span class="line">MimeType=audio/aac;audio/flac;audio/mp3;audio/mp4;audio/mpeg;audio/ogg;audio/x-ape;audio/x-flac;audio/x-mp3;audio/x-mpeg;audio/x-ms-wma;audio/x-vorbis;audio/x-vorbis+ogg;audio/x-wav;</span><br><span class="line">Exec=env QT_SCALE_FACTOR=0.5 /usr/bin/netease-cloud-music   <span class="comment">#这一行，启动时调整绽放比例</span></span><br></pre></td></tr></table></figure>
<p>参考stacer启动参数，绽放和字体都不正常的：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo vim /usr/share/applications/stacer.desktop </span><br><span class="line"></span><br><span class="line">[Desktop Entry]</span><br><span class="line">Name=Stacer</span><br><span class="line">Exec=stacer</span><br><span class="line">Comment=Linux System Optimizer and Monitoring</span><br><span class="line">Icon=stacer</span><br><span class="line">Type=Application</span><br><span class="line">Terminal=<span class="literal">false</span></span><br><span class="line">Encoding=UTF-8</span><br><span class="line">Categories=Utility;</span><br><span class="line">Exec=env QT_SCALE_FACTOR=0.5 QT_FONT_DPI=180 /usr/share/stacer/stacer  <span class="comment">#这一行，既调比例，也调DPI</span></span><br></pre></td></tr></table></figure>
<p>缩放比例和字体渲染，看自已屏幕分辨率，调整完后，试一下程序启动后的效果。好了，这个问题也算是处理结束。</p>
<p>再一次回到第一个问题上，Wayland环境上，基本自己使用的程序都能正常使用。有一点，自己买了一块wacom的手绘板，github上有一个linux wacom project的项目，可以支持linux使用手绘板。不过一个小问题，手绘板在wayland上使用的时候，手绘笔没办法选取程序的菜单项，暂时应该无解。所以默认就X.org环境启动系统使用了。</p>
<p>小记结束。</p>
]]></content>
      <tags>
        <tag>linux</tag>
      </tags>
  </entry>
  <entry>
    <title>OSI</title>
    <url>/2018/08/05/OSI/</url>
    <content><![CDATA[<h2 id="OSI七层模型"><a href="#OSI七层模型" class="headerlink" title="OSI七层模型"></a>OSI七层模型</h2><h2 id="各功能简介"><a href="#各功能简介" class="headerlink" title="各功能简介"></a>各功能简介</h2><h3 id="物理层"><a href="#物理层" class="headerlink" title="物理层"></a>物理层</h3><p>物理层位于OSI参考模型的最低层，它直接面向原始比特流的传输；</p>
<p>　为了实现原始比特流的物理传输，物理层必须解决好包括传输介质、信息类型、数据与信号之间的转换、信号传输中的衰减和噪声等内在的一系列问题。</p>
<p>另外，物理层标准要给出关于物理接口的机械、电气、功能和规程特性，以便于不同的厂商既能够根据公认的标准各自独立的制造设备，又能使各个厂商的产品能够相互兼容。</p>
<h3 id="数据链路层"><a href="#数据链路层" class="headerlink" title="数据链路层"></a>数据链路层</h3><p>　在物理层发送和接收数据的过程中，会出现一些物理层自己不能解决的问题。</p>
<p>　例如，当两个节点同时试图在一条线路上发数据时该如何处理？节点如何知道它所接收的数据是否正确，如果噪声　改变了一个分级的目标地址，节点如何察觉它丢失了本应收到的分级呢？这些都是数据链路层所必须负责的工作。</p>
<p>数据链路层涉及相邻节点之间的可靠传输，数据链路层通过加强物理层传输原始比特的功能，使之对网络层表现为一条无错线路。</p>
<p>　为了能够实现相邻节点之间的无差错的数据传送，数据链路层在数据传输过程中提供了确认、差错控制和流量控制等机制。</p>
<h3 id="网络层"><a href="#网络层" class="headerlink" title="网络层"></a>网络层</h3><p>网络中的两台计算机进行通信，中间可能要经过许多节点甚至不同的通信子网。网络层的任务就是在通信子网中选择一条合适的路径，使发送端传输层所传下来的数据能够通过所选择的路径到目的端。</p>
<p>在确定了目标节点的位置后，网络层还要负责引导数据包正确的通过网络，找到通过网络路径的最优路径，即路由选择。</p>
<p>另外网络层还需要解决异构网络互连问题。</p>
<h3 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h3><p>传输层的功能是在两个节点建立、维护和释放面向用户的链接。</p>
<p>它是在传输连接的基础上建立会话连接，并进行数据交换管理，允许数据进行单工、半双工、全双工的传送。会话层提供了令牌管理和同步两种服务功能。</p>
<h3 id="表示层"><a href="#表示层" class="headerlink" title="表示层"></a>表示层</h3><p>表示层以下的各层只关心可靠的数据传输，而表示层关心的是所传输数据的语义和语法以。</p>
<p>　它主要涉及处理在两个通信之间所交换信息的表示方式，包括数据格式变换，数据加密与解密，数据压缩与恢复等功能。</p>
<h3 id="应用层"><a href="#应用层" class="headerlink" title="应用层"></a>应用层</h3><p>应用层是OSI参考模型的最高层，负责为用户的应用程序提供网络服务。</p>
<p>与OSI其它层不同的是，它不为任何其它OSI层提供服务，而只是为OSI模型以外的应用程序提供服务。包括为相互通信的应用程序或进行之间那边拉、进行同步，建立关于错误纠正和控制数据完整性过程的协商等。应用层还包含大量的应用协议，如分布式数据库的访问、文件的交换、电子邮件、虚拟终端等。</p>
<p>其中物理层、数据链路层和网络层通常被称为媒体层，是网络工程师所研究的对象；传输层、会话层、表示层和应用层则被称为主机层，是用户所面向和关心的内容。</p>
<ul>
<li>http协议–应用层</li>
<li>tcp协议–传输层</li>
<li>ip协议–网络层</li>
</ul>
<p>三层没有本质上的可比性，何况http协是基于tcp连接的。</p>
<p>TCP/IP是传输层协议，主要解决数据如何在网络中传输；而http是应用层协议，主要解决如何包装数据。我们在传输数据时，可以只使用传输层（TCP/IP），但那样的话，由于没有应用层，便无法识别数据内容，如果想要使传输的数据有意义，则必须使用应用层协议，应用层协议有很多，有http、ftp、telnet等等，也可以自己定义应用层协议。</p>
<p>WEB使用http作为传输协议，以封装http文本信息，然后使用tcp/ip做传输层协议将它发送到网络上。socket是对tcp/ip协议的封装，socket本身不是协议，而是一个调用接口（api），通过socket，我们才能使用TCP/IP协议。</p>
<h2 id="TCP-IP模型"><a href="#TCP-IP模型" class="headerlink" title="ＴCP/IP模型"></a>ＴCP/IP模型</h2><p>TCP/IP模型是由美国国防部创建的，所以有时又称DoD（Department of Defense）模型。TCP/IP模型分为四层，由下而上分别为网络访问层、网际层、传输层、应用层。</p>
<p>应指出的是，TCP/IP是OSI模型之前的产物，所以两者不存在严格的层对应关系。在TCP/IP模型中不存在与OSI的物理层与数据链路层相对应的部分。相反，TCP/IP的主要目标是致力于异构网络的互连，所以在OSI的物理层与数据链路层相对应的部分没有作任何限定。</p>
<p>在TCP/IP模型中，网络访问层是TCP/IP模型的最低层，负责从网际层将来的IP数据报并将IP数据报通过底层物理网络发送出去。或者从底层物理网络上接收物理帧，抽出IP数据报，交给互联网层。</p>
<p>网络访问层使采用不同技术和网络硬件的网络之间能够互联，它包括属于操作系统的设驱动器和计算机网络接口卡，以处理具体的硬件物理接口。</p>
<p>网际层负责独立地将分组从源主机送往目标主机，涉及为分级提供最佳路径的选择和交换功能。并使这一过程与它们所经过的路径和网络无关。</p>
<p>这好比你寄信时，你并不需要知道它是如何到达目的地的，而只关心它是否到达了。TCP/IP模型的互联网层在功能上非常类似于OSI参考模型中的网络层。</p>
<p>传输层的作用与OSI参考模型中传输层的作用是类似的，即在源结点的两具对等实体之间提供可靠的端到端的数据通信。为保证数据传输的可靠性，传输层协议也提供了确认、差错控制和流量控制等机制。</p>
<p>另外，由于一般的计算机中，常常是多个应用程序同时访问网络，所以传输层还要提供不同应用程序的标识。</p>
<p>应用层涉及为用户提供网络应用，并为这些应用提供网络支撑服务。由于TCP/IP将所有的应用相关的内容都有归为一层，所以在应用层要处理高层协议、数据表达和对话控制等任务。</p>
<h2 id="OSI模型和TCP-IP模型的区别"><a href="#OSI模型和TCP-IP模型的区别" class="headerlink" title="OSI模型和TCP/IP模型的区别"></a>OSI模型和TCP/IP模型的区别</h2><p>OSI模型包括了七层，而TCP/IP模型只有四层。虽然它们具有功能相当的网络层、传输层和应用层，但其它层并不相同。</p>
<p>TCP/IP模型中没有专门的表示层和会话层，它将与这两层相关的表达、编码和会话控制等功能包含到了应用层中去完成。另外，TCP/IP模型还将OSI的数据链路层和物理层包括到一个网络访问层中。</p>
<p>OSI模型在网络层支持无连接和面向链接的两种服务，而在传输层公支持面向连接的服务。TCP/IP模型在互联网层则只支持无连接的一种服务，但在传输层支持面向连接和无连接两种服务。</p>
<p>TCP/IP由于有较少的层次，因而显得更简单，并且作为从因特网（INTERNET）上发展起来的协议，已经成为了网络互连的事实标准。但是，目前还没有实际网络是建立在OSI七层模型基础上的，OSI仅仅作为参考被广泛使用。</p>
<h2 id="http和socket连接的区别"><a href="#http和socket连接的区别" class="headerlink" title="http和socket连接的区别"></a>http和socket连接的区别</h2><h3 id="短连接"><a href="#短连接" class="headerlink" title="短连接"></a>短连接</h3><p>连接–传输数据–关闭连接<br>http是无状态的，浏览器和服务器每进行一次http操作，就建立一次连接，但任务结束就中断连接。<br>也可以说：短连接是指socket连接后发送后接收数据完成后就马上断开连接。</p>
<h3 id="长连接"><a href="#长连接" class="headerlink" title="长连接"></a>长连接</h3><p>连接–传输数据–保持连接–传输数据–。。。。–关闭连接<br>长连接指建立socket连接后不管是否使用都保持连接，但安全性较差。</p>
<h3 id="http长连接"><a href="#http长连接" class="headerlink" title="http长连接"></a>http长连接</h3><p>http也是可以建立长连接的，使用connection:keep-alive，http 1.1默认进行持久连接。http 1.1和http 1.0相比较而言，最大的区别就是增加了拷久连接支持（最新的HTTP1.1可以显示指定keep-live），但还是无状态的，或者说是不可以信任的。</p>
<h3 id="什么时候用长链接，短链接"><a href="#什么时候用长链接，短链接" class="headerlink" title="什么时候用长链接，短链接"></a>什么时候用长链接，短链接</h3><p>长连接多用于操作频繁，点对点的通讯，而且连连接数不能太多的情况。每个TCP连接都需要三步握手，这需要时间，如果每个操作都是先连接，再操作的话，那么处理速度就会降低很多，所以每个操作完后都不断开，次处理时直接发送数据包就ok了。不用建立TCP连接。例如：数据库的连接用长连接，如果用短连接频繁的通信会造成socket错误，而且频繁的socket创建也是对资源的浪费。</p>
<p>而像ＷEB网站的http服务一般都是用短连接，因为长连接对于服务端来说会耗费一定资源，而像WEB网站这么频繁的成千上万甚至上亿客户端的连接用短连接会更省一些资源，如果用长连接，而且同时成千上万的用户，那可想而知吧。所以并发量大，但每个用户无需频繁操作情况下用短连接好。</p>
<p>总之，长连接和短连接的选择要视情况而定。</p>
<h4 id="http连接"><a href="#http连接" class="headerlink" title="http连接"></a>http连接</h4><p>HTTP协议即超文本传输协议<br>（Ｈypertext Transfer Protocol），是web联网的基础，也是手机联网常用的协议之一，HTTP协议也是建立在TCP协议之上的一种应用。<br>HTTP连接最显著的特点是客户端发送的每次请求都需要服务器回头响应，在请求结束之后，会主动释放连接。从建立连接到关闭连接的过程称为这“一次连接”。</p>
<p>a) 在HTTP1.0中，客户端的每一次请求都要求建立一次单独的连接，在处理完本次请求后，就自动释放连接。</p>
<p>b) 在HTTP１.1中则可以在一次连接中处理多个请求，并且请求可以多次重叠进行，不需要等待一个请求结束后再发送下一个请求。</p>
<p>通常的做法是即使不需要获得任何数据，客户端也保持每隔一断固定的时间向服务器发送一次“保持连接”的请求，服务器在收到该请求后，对客户端进行回复，表明知道客户端“在线”。若服务器长时间无法收到客户端的请求，则认为客户端”下线“，若客户端长时间无法收到服务器的回复，则认为网络已经断开。</p>
<h4 id="socket"><a href="#socket" class="headerlink" title="socket"></a>socket</h4><p>socket是应用层与TCP/IP协议簇通信的中间软件抽象层，它是一组接口。首先让我们通过一组图知道socket在哪里？</p>
<p>a)套接字（socket）概念</p>
<p>套接字（socket）是通信的基石，是支持TCP/IP协议的网络通信的基本操作单元。它是网络通信过程中端点的抽象表示，包含进行网络通信必须的五种信息：连接使用的协议、本机的IP地址、本地进程的协议端口、远程主机的IP地址、远程进程的协议端口。</p>
<p>应用层通过传输层进行数据通信时，TCP会遇到同时为多个应用程序进程提供并发服务的问题。多个TCP连接或多个应用程序进程可能需要通过同一个TCP协议端口传输数据。</p>
<p>为了区别不同应用程序进程和连接，许多计算机操作系统为应用程序与TCP/IP协议交互提供了套接字（socket）接口。应用层可以和传输层通过socket接口，区分来自不同应用程序或网络连接的通信，实现数据传输的并发服务。</p>
<p>b)建立socket连接</p>
<p>建立socket连接至少需要一对套接字，其中一个运行于客户端，称为clientsocket，另一个运行于服务端，称为serversocket。</p>
<p>套接字之间的连接过程分为三个步骤：服务器监听，客户端请求，连接确认。</p>
<p>服务器监听：服务器端套接字并不定位具体的客户端套接字，而是处于等待连接状态，实时监控网络状态，等待客户端的连接请求。</p>
<p>客户端请求：指客户端的套接字提出连接请求，要连接的目标服务器的套接字。为此客户端的套接字必须首先描述第要连接的服务器的套接字，指出服务器端套接字的地址和端口号，然后就向服务器套接字提出连接请求。</p>
<p>连接确认：当服务器端套接字监听到或者说接收到客户端套接字的连接请求时，就响应客户端套接字的请求，建立一个新的线程，把服务器端套接字的描述发给客户端，一旦客户端确认了描述，双方就正式建立连接。而服务器端套按字继续处于监听状态，继续接收其它客户端的套接字请求。</p>
<p>c)socket连接与tcp连接</p>
<p>创建socket连接时，可以指定使用的传输层协议，socket可以支持不同的传输层协议（TCP或UDP），当使用TCP协议进行连接时，该socket就是TCP连接。</p>
<p>d)socket连接与http连接</p>
<p>由于通常情况下socket连接就是tcp连接，因此socket连接一旦建立，通信双方即可始相互发送数据内容，走在到双方连接断开。<br>但在实际网络应用中，客户端到服务器之间的通信往往需要穿戴多个中间节点，例如路由器、网关、防火墙等，大部分防火墙默认会关闭长时间处于非活跃状态的连接而导致socket连接断边，因此需要通过轮询告诉网络，该连接处于活跃状态。</p>
<p>而http连接使用的是“请求－响应”的方式，不仅在请求时需要建立连接，而且需要客户端向服务器发出请求后，服务器端才能回复数据。</p>
<p>很多情况下，需要服务器端主动向客户端推送数据，保持客户端与服务器数据的实时同步。</p>
<p>此时若双方建立的是socket连接，服务器就可以直接将数据传送给客户端；若双方建立的是http连接，则服务器需要等到客户端发送一次请求后才能将数据伟回到客户端，因此，客户端定时向服务器端发送连接请𣷌，不仅可以保持在线，现时也是在“询问”服务器是否有新数据，如果有就将数据伟给客户端。　</p>
<h3 id="tcp和udp的区别"><a href="#tcp和udp的区别" class="headerlink" title="tcp和udp的区别"></a>tcp和udp的区别</h3><p>tcp:tcp是面向连接的、传输可靠（要保证数据正确性和保证数据顺序）、用于传输大量数据（流模式）、速度慢，建立连接需要开销较多（时间、系统资源等）。</p>
<p>tcp是一种流模式的协议，是面向连接的，也就是说，在连接持续的过程中，socket中收到的数据都是同同一台主机发出的（支持不考虑），因此，知道保证数据是有序静观默察就行，至于每次读取多少数据不关心。</p>
<p>udp:udp面向非连接，传输不可靠、用于传输少量数据（数据包模式）、速度快。</p>
<p>关于tcp是一程流模式的协议，udp是一种数据报模式的协议，这里需要说明一下，tcp是面向连接的，４也就是说，在连接持续的过程中，socket中收到的数据都是同一台主机发出的（劫持不考虑），因此知道保证数据是有序的到达就行了，至于每次读取多少数据自已看着办。</p>
<p>而udp是无连接的协议，也就是说，只要知道接收端的ip和端口，且网络是可达的，任何主机都可以身接收端发送数据。这个时候，如果一次读取超过一个报文的数据，则会乱套。比如Ａ主机发送了报文P1，主机Ｂ发送了报文P2，如果能够读取超过一个报文的数据，那么就会将P1和P2的数据合并了一起，这样的数据是没有单方的。</p>
<h3 id="TCP三次握手和四次挥手"><a href="#TCP三次握手和四次挥手" class="headerlink" title="TCP三次握手和四次挥手"></a>TCP三次握手和四次挥手</h3><p>相对于socket开发者，tcp创建过程和连接拆除过程是由tcp/ip协议栈自动创建的。因此开发者并不需要控制这个过程。但是对于理解tcp底层动作机制，相当有帮助。因此这里详细的解释一下这两个过程。</p>
<h3 id="TCP三次握手"><a href="#TCP三次握手" class="headerlink" title="TCP三次握手"></a>TCP三次握手</h3><p>所谓三次扬（three-way handshake），是指建立一个TCP连接时，需要客户端和服务器总共发送３个包。</p>
<p>三次扬的目的是连接服务器指定端口，建立tcp连接，并同步连接双方的序列号我确认号并交换tcp端口大小信息，在socket编程中，客户端执行connect()时，将触发三次握手。</p>
<p>产自要了解一下几个标志，SYN（synchronous），同步标志，ACK（acknowledgement），即确认标志，seq应该就是sequence number，序列号的意思，另外还有四次扬的fin，应该是final，表示结束标志。</p>
<p>第一次握手：客户端发送一个tcp的syn标志位置１的包指明客户打算连接的服务器的端口，以及初始序号x，保存在包头的序号号字段里。</p>
<p>第二次握手：服务器发回确认包ack应答，即syn标志位和ack标志位均为１，同时将确认序号设置为客户的序号加１，即x+1。</p>
<p>第三次扬：客户端再次发送确认包ack，syn标志为为0，ack标志位为１。并且把服务器发来的ack序号字段+1，放在确认字段中发送第给对方，并且在数据段放写序号+1。</p>
<h3 id="TCP四次挥手"><a href="#TCP四次挥手" class="headerlink" title="TCP四次挥手"></a>TCP四次挥手</h3><p>TCP的连接的拆除需要发送四个包，因此称为四次挥手（four-way handshake）。客户端或服务器均可主动发起挥手动作，在socket纺和中，任何一方执行close()操作即可产生挥手操作。</p>
<p>其实有一个问题，为什么连接的时候是三次握手，关闭的时候却是四次挥手？</p>
<p>因为当server端收到client端的syn连接请求报文后，可以直接发送syn+ack报文。其中ack报文是用来应答的，syn报文是用来同步的。</p>
<p>但是关闭连接时，当server端收到fin报文时，很可能并不会立即关闭socket，所以只能先回复一个ack报文，告诉client端，你发送的fin报文我收到了。只有等到我的server端报文都发送完成了，我才能发送fin报文，因此不能一起发送。帮需要四次挥手。</p>
]]></content>
      <tags>
        <tag>network</tag>
      </tags>
  </entry>
</search>
